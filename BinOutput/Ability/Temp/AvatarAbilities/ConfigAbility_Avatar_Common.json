[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_SprintBS_Invincible",
      "modifiers": {
        "SprintBS_Invincible": {
          "stacking": "Multiple",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.0
            }
          },
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.3
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.0
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.EnableHitBoxByName",
              "doOffStage": true,
              "hitBoxNames": [
                "HitBox"
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.EnableHitBoxByName",
              "doOffStage": true,
              "hitBoxNames": [
                "HitBox"
              ],
              "setEnable": true
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "doOffStage": true,
          "modifierName": "SprintBS_Invincible"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Freeze_Duration_Reducer",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachAbilityStateResistance",
          "resistanceListID": 14002,
          "durationRatio": 0.4
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Girl_Catalyst_HitFallToGround_Hide",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToNormalizedTimeMixin",
          "stateID": "Hit_Throw_Ground",
          "modifierName": "Girl_Catalyst_HitFallToGround_Visible_Handler",
          "normalizeStart": 0.155,
          "normalizeEnd": 0.272
        },
        {
          "$type": "MoleMole.Config.AttachToNormalizedTimeMixin",
          "stateID": "Hit_Throw_Ground",
          "modifierName": "Girl_Catalyst_HitFallToGround_HideSpark",
          "normalizeStart": 0.115,
          "normalizeEnd": 0.272
        }
      ],
      "modifiers": {
        "Girl_Catalyst_HitFallToGround_HideSpark": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Avatar_Girl_Catalyst_HitFallToGround_HideSpark"
              }
            }
          ]
        },
        "Girl_Catalyst_HitFallToGround_Visible_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.TriggerSetVisible"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.TriggerSetVisible",
              "doOffStage": true,
              "visible": true
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Avatar_Girl_Catalyst_HitFallToGround_ShowSpark"
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Bow_Aim_EmoController",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToStateIDMixin",
          "stateIDs": [
            "Aim"
          ],
          "modifierName": "AimLoop_EmoController"
        }
      ],
      "modifiers": {
        "AimLoop_EmoController": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.PlayEmoSync",
              "emoSyncAssetPath": "Cutscene/ShortDialog/Cs_Emo_Avatar_Simple_Common_Set/Cs_Emo_Avatar_Common_Bow_Fight_Aim"
            },
            {
              "$type": "MoleMole.Config.ControlEmotion",
              "toggleBlink": false
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.PlayEmoSync",
              "emoSyncAssetPath": "Cutscene/ShortDialog/Cs_Emo_Avatar_Simple_Common_Set/Cs_Emo_Avatar_Common_Normal"
            },
            {
              "$type": "MoleMole.Config.ControlEmotion"
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_RockGadget_Summon_Detect",
      "modifiers": {
        "RockGadget_Summon_Detect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackBox",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 2.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -1.4
                      }
                    }
                  },
                  "size": {
                    "x": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 2.8
                    },
                    "y": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 4.2
                    },
                    "z": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 2.8
                    }
                  }
                },
                "attackInfo": {
                  "attackTag": "Gadget_Summon_Detect",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "enBreak": 0.0
                  }
                }
              },
              "targetType": "All"
            }
          ]
        },
        "RockGadget_Summon_Suicide": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetType",
                  "isTarget": false
                },
                {
                  "$type": "MoleMole.Config.ByAny",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_COMMON_GADGET_ISSUMMON",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "MoreThan"
                    },
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_SCENE_GADGET_ISSUMMON",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "MoreThan"
                    }
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.KillSelf"
                },
                {
                  "$type": "MoleMole.Config.ActCameraShake",
                  "cameraShake": {
                    "shakeRange": 0.04,
                    "shakeTime": 0.08
                  }
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_COMMON_GADGET_ISSUMMON",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "RocketGadget_WeightRatio",
      "modifiers": {
        "RocketGadget_WeightRatio": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Entity_WeightRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.0
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "RocketGadget_WeightRatio"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Common_Achievement_Listener",
      "modifiers": {
        "Achievement_Listener_82001": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetConfigID",
                  "configIdArray": [
                    28030201,
                    28030202,
                    28030203,
                    28030204
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "ExtraAttack"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.DoWatcherSystemAction",
                  "watcherId": 82001,
                  "authorityOnly": true
                }
              ]
            }
          ]
        },
        "Achievement_Listener_82002": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitBoxType",
                  "hitBoxType": "Head"
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "ExtraAttack"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "GreaterOrEqual",
                  "compareType": "XYZ",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 38.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.DoWatcherSystemAction",
                  "watcherId": 82002,
                  "authorityOnly": true
                }
              ]
            }
          ]
        },
        "Achievement_Listener_82003": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitBoxType",
                  "hitBoxType": "Head"
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "ExtraAttack"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "GreaterOrEqual",
                  "compareType": "XYZ",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 80.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.DoWatcherSystemAction",
                  "watcherId": 82003,
                  "authorityOnly": true
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Achievement_Listener_82001"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Achievement_Listener_82002"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Achievement_Listener_82003"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_FallAnthem_Achievement_Listener",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToStateIDMixin",
          "stateIDs": [
            "FallingAnthem_BS",
            "FallingAnthem_Loop",
            "FallingAnthem_AS_1",
            "FallingAnthem_AS_2"
          ],
          "modifierName": "Achievement_Listener_82060"
        }
      ],
      "modifiers": {
        "Achievement_Listener_82060": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -5.0
              },
              "key": "_FallAnthem_Achievement_Timer",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -5.0
              },
              "key": "_FallAnthem_Achievement_Timer",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "FallingAttack"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_FallAnthem_Achievement_Timer",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  },
                  "forceByCaster": true,
                  "compareType": "MoreThanAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.DoWatcherSystemAction",
                  "watcherId": 82060,
                  "authorityOnly": true
                }
              ]
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_FallAnthem_Achievement_Timer",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Watcher_SnowMountain_MPPlay",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "HAS_BLOOD_BUFF_MARK",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.0
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Blank",
            "BloodSmash_Buff_AttackCount_Handler"
          ]
        }
      ],
      "modifiers": {
        "Blank": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "BloodSmash_Buff_AttackCount_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetConfigID",
                  "configIdArray": [
                    26020102
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "doOffStage": false,
                  "modifierName": "Team_BloodSmash_Buff_Attack_Count"
                }
              ]
            }
          ]
        },
        "Team_BloodSmash_Buff_Attack_Count": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 10.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_SnowMountain_MPPlay_Trigger_Wtacher_Handler": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "defaultGlobalValueOnCreate": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": -1.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 9.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 10.5
                }
              ],
              "modifierNameSteps": [
                "Blank_2",
                "SnowMountain_MPPlay_Trigger_Wtacher"
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -10.0
              },
              "key": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 10.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Blank_2": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "SnowMountain_MPPlay_Trigger_Wtacher": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.DoWatcherSystemAction",
              "watcherId": 3010116,
              "authorityOnly": true
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "XnowMountain_MPPlay_ResetAttackCount"
            }
          ]
        },
        "XnowMountain_MPPlay_ResetAttackCount": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -10.0
              },
              "key": "_ABILITY_Team_BloodSmash_Buff_Attack_Count",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 10.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Team",
          "doOffStage": true,
          "modifierName": "UNIQUE_SnowMountain_MPPlay_Trigger_Wtacher_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Attack_ReviveEnergy",
      "abilitySpecials": {
        "Pole_ReviveEnergy_Chance": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Bow_ReviveEnergy_Chance": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Sword_ReviveEnergy_Chance": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Claymore_ReviveEnergy_Chance": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Catalyst_ReviveEnergy_Chance": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Avatar_Sword_ReviveEnergy_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1.0,
              "minValue": 0.1,
              "EDKFOOIMGOL": 0.05,
              "JCHOICGJEDL": {
                "$type": "MoleMole.Config.ReviveElemEnergy",
                "value": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "NGKNMNEOCNK": {
                "Fire": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Fire"
                  }
                },
                "Ice": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Ice"
                  }
                },
                "Electric": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Electric"
                  }
                },
                "Water": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Water"
                  }
                },
                "Wind": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Wind"
                  }
                },
                "Rock": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Rock"
                  }
                },
                "Grass": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Grass"
                  }
                }
              }
            }
          ]
        },
        "Avatar_Bow_ReviveEnergy_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1.0,
              "EDKFOOIMGOL": 0.05,
              "JCHOICGJEDL": {
                "$type": "MoleMole.Config.ReviveElemEnergy",
                "value": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "NGKNMNEOCNK": {
                "Fire": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Fire"
                  }
                },
                "Ice": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Ice"
                  }
                },
                "Electric": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Electric"
                  }
                },
                "Water": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Water"
                  }
                },
                "Wind": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Wind"
                  }
                },
                "Rock": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Rock"
                  }
                },
                "Grass": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Grass"
                  }
                }
              }
            }
          ]
        },
        "Avatar_Claymore_ReviveEnergy_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1.0,
              "EDKFOOIMGOL": 0.1,
              "JCHOICGJEDL": {
                "$type": "MoleMole.Config.ReviveElemEnergy",
                "value": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "NGKNMNEOCNK": {
                "Fire": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Fire"
                  }
                },
                "Ice": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Ice"
                  }
                },
                "Electric": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Electric"
                  }
                },
                "Water": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Water"
                  }
                },
                "Wind": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Wind"
                  }
                },
                "Rock": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Rock"
                  }
                },
                "Grass": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Grass"
                  }
                }
              }
            }
          ]
        },
        "Avatar_Pole_ReviveEnergy_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1.0,
              "EDKFOOIMGOL": 0.04,
              "JCHOICGJEDL": {
                "$type": "MoleMole.Config.ReviveElemEnergy",
                "value": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "NGKNMNEOCNK": {
                "Fire": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Fire"
                  }
                },
                "Ice": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Ice"
                  }
                },
                "Electric": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Electric"
                  }
                },
                "Water": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Water"
                  }
                },
                "Wind": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Wind"
                  }
                },
                "Rock": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Rock"
                  }
                },
                "Grass": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Grass"
                  }
                }
              }
            }
          ]
        },
        "Avatar_Catalyst_ReviveEnergy_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttackReviveEnergyMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "maxValue": 1.0,
              "EDKFOOIMGOL": 0.1,
              "JCHOICGJEDL": {
                "$type": "MoleMole.Config.ReviveElemEnergy",
                "value": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "NGKNMNEOCNK": {
                "Fire": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Fire"
                  }
                },
                "Ice": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Ice"
                  }
                },
                "Electric": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Electric"
                  }
                },
                "Water": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Water"
                  }
                },
                "Wind": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Wind"
                  }
                },
                "Rock": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Rock"
                  }
                },
                "Grass": {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Avatar_ReviveEnergy_Grass"
                  }
                }
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "doOffStage": true,
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_SWORD_ONE_HAND"
              ]
            }
          ],
          "modifierName": "Avatar_Sword_ReviveEnergy_Handler"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_BOW"
              ]
            }
          ],
          "modifierName": "Avatar_Bow_ReviveEnergy_Handler"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_CLAYMORE"
              ]
            }
          ],
          "modifierName": "Avatar_Claymore_ReviveEnergy_Handler"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_POLE"
              ]
            }
          ],
          "modifierName": "Avatar_Pole_ReviveEnergy_Handler"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_CATALYST"
              ]
            }
          ],
          "modifierName": "Avatar_Catalyst_ReviveEnergy_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Component_Initializer",
      "modifiers": {
        "Visible_Initializer_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.TriggerSetVisible",
              "doOffStage": true,
              "canBeHandledOnRecover": true,
              "visible": true
            }
          ]
        },
        "PushCollider_Initializer_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.TriggerSetPassThrough",
              "doOffStage": true,
              "canBeHandledOnRecover": true
            }
          ]
        },
        "ElectricFairy_Initializer_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "HAS_ELECTRIC_FAIRY_BUFF_Team",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "doOffStage": true,
          "modifierName": "Visible_Initializer_Handler"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "doOffStage": true,
          "modifierName": "PushCollider_Initializer_Handler"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "doOffStage": true,
          "modifierName": "ElectricFairy_Initializer_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_PlayMusic_Lyre_Controller",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToStateIDMixin",
          "stateIDs": [
            "PlayMusic_Lyre_BS",
            "PlayMusic_Lyre_Loop"
          ],
          "modifierName": "Avatar_PlayMusic_Lyre"
        }
      ],
      "modifiers": {
        "Avatar_PlayMusic_Lyre": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Avatar_PlayMusic_Lyre"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Avatar_PlayMusic_Lyre_AS"
              }
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_Watcher_SuperTrial_RangeKillEnemy",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByKillingMixin",
          "detectWindow": 0.6,
          "onKill": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Other",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "GreaterOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ByCurrentSceneId",
                  "sceneIds": [
                    43006
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByIsTargetCamp",
                  "campBaseOn": "Caster",
                  "campTargetType": "Enemy"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.DoWatcherSystemAction",
                  "target": "Caster",
                  "watcherId": 1502220,
                  "authorityOnly": true
                }
              ]
            }
          ]
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Avatar_RockGadget_KillByBlunt",
      "modifiers": {
        "RockDurability_Handler": {
          "modifierName": "",
          "elementType": "Rock",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "Recover_RockDurability"
            }
          ]
        },
        "Recover_RockDurability": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddElementDurability",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "modifierName": "RockDurability_Handler",
              "elementType": "Rock",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "RockDurability_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  }
]