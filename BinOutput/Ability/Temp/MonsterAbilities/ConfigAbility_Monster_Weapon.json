[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Equip_SelfDestroy",
      "onDetach": [
        {
          "$type": "MoleMole.Config.KillSelf"
        },
        {
          "$type": "MoleMole.Config.HideUIBillBoard",
          "hide": true
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_Grass_5",
      "modifiers": {
        "GrassMaterial": {
          "modifierName": "",
          "elementType": "Grass",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 50.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ShieldBarMixin",
              "showDamageText": ""
            },
            {
              "$type": "MoleMole.Config.AttachToAbilityStateMixin",
              "abilityStates": [
                "ElementBurning"
              ],
              "modifierName": "ShieldOnFire"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "ShieldOnFire": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "target": "Owner",
              "boolID": "ShieldOnFire",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "target": "Owner",
              "boolID": "ShieldOnFire"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GrassMaterial"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_Grass_10",
      "modifiers": {
        "GrassMaterial": {
          "modifierName": "",
          "elementType": "Grass",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ShieldBarMixin",
              "showDamageText": ""
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GrassMaterial"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_Grass_30",
      "modifiers": {
        "GrassMaterial": {
          "modifierName": "",
          "elementType": "Grass",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 300.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Owner",
              "modifierName": "WeaponBroken_Attack"
            },
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "WeaponBroken_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.DamageByAttackValue",
              "attackInfo": {
                "attackTag": "",
                "attenuationTag": "",
                "attenuationGroup": "default",
                "attackProperty": {
                  "damagePercentage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "damagePercentageRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "elementDurability": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "strikeType": "Default"
                },
                "hitPattern": {
                  "onHitEffectName": "default",
                  "hitImpulseType": "LV4",
                  "hitHaltTimeScale": 0.05
                }
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GrassMaterial"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_ShieldDefend",
      "modifiers": {
        "NormalDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "NormalIdle",
                "NormalMove",
                "Turn",
                "ShieldSmash",
                "Defend",
                "Defend_AS"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendAngle": 90.0,
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              }
            }
          ]
        },
        "ForceDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "BeHit",
                "BeHitThrow"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "alwaysRecover": false,
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "NormalDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "ForceDefend"
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "NormalDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "ForceDefend"
        }
      ],
      "onDetach": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "NormalDefend"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "ForceDefend"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_ShieldDefendAttack",
      "modifiers": {
        "ShieldBroken_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.DamageByAttackValue",
              "attackInfo": {
                "attackTag": "",
                "attenuationTag": "",
                "attenuationGroup": "default",
                "attackProperty": {
                  "damagePercentage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "damagePercentageRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "elementDurability": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "strikeType": "Default",
                  "enBreak": 1000.0
                },
                "hitPattern": {
                  "onHitEffectName": "default",
                  "hitImpulseType": "LV4",
                  "hitHaltTimeScale": 0.05
                }
              }
            }
          ]
        },
        "UNIQUE_Monster_Weapon_GrassMatrial": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementType": "Grass",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 50.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ElementShieldMixin",
              "elementType": "Grass",
              "showDamageText": "",
              "shieldAngle": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 360.0
              },
              "shieldHPRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "damageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Undead_01_Shield_Broken"
              }
            },
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "FreezeDetect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToAbilityStateMixin",
              "abilityStates": [
                "ElementFreeze"
              ],
              "modifierName": "BeFreezed"
            }
          ]
        },
        "BeFreezed": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "InDefend"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByEquipParts",
                "equipPartNames": [
                  "equip02"
                ]
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Grass"
                }
              ],
              "modifierName": "ReDefend"
            }
          ]
        },
        "BurningDetect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToAbilityStateMixin",
              "abilityStates": [
                "ElementBurning"
              ],
              "modifierName": "WeaponOnFire"
            }
          ]
        },
        "WeaponOnFire": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "target": "Owner",
              "boolID": "WeaponOnFire",
              "value": true
            },
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "target": "Owner",
              "modifierName": "InDefend"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "target": "Owner",
              "boolID": "WeaponOnFire"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Grass"
                }
              ],
              "modifierName": "ReDefend"
            }
          ]
        },
        "ReDefend": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Owner",
              "modifierName": "InDefend"
            }
          ]
        },
        "InDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "NormalDefend"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "ForceDefend"
            }
          ]
        },
        "NormalDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "NormalIdle",
                "NormalMove",
                "Defend",
                "DefendAttack"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendAngle": 90.0,
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              },
              "onDefendSucceded": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_None_Block"
                  }
                },
                {
                  "$type": "MoleMole.Config.ActCameraShake",
                  "cameraShake": {
                    "shakeRange": 0.04,
                    "shakeTime": 0.18
                  }
                },
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "_ABILITY_WEAPON_SHIELD_DEFEND_COUNT",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            }
          ],
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          }
        },
        "DefendAttack": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "NormalIdle",
                "NormalMove",
                "Defend",
                "DefendAttack",
                "BeHit"
              ],
              "defendTriggerID": "DefendAttackTrigger",
              "defendAngle": 90.0,
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              },
              "attackType": "Melee",
              "onDefendSucceded": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_None_Block"
                  }
                },
                {
                  "$type": "MoleMole.Config.ActCameraShake",
                  "cameraShake": {
                    "shakeRange": 0.04,
                    "shakeTime": 0.18
                  }
                },
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -5.0
                  },
                  "key": "_ABILITY_WEAPON_SHIELD_DEFEND_COUNT",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_None_Shield"
              }
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_None_ShieldCreate"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_None_ShieldDestroy"
              }
            }
          ]
        },
        "ForceDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "BeHit",
                "BeHitThrow"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "alwaysRecover": false,
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              },
              "onDefendSucceded": [
                {
                  "$type": "MoleMole.Config.ActCameraShake",
                  "cameraShake": {
                    "shakeRange": 0.04,
                    "shakeTime": 0.18
                  }
                },
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "_ABILITY_WEAPON_SHIELD_DEFEND_COUNT",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            }
          ],
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_Monster_Weapon_GrassMatrial"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "BurningDetect"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "FreezeDetect"
        },
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_WEAPON_SHIELD_DEFEND_COUNT",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "BurningDetect"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "FreezeDetect"
        },
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Target",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_WEAPON_SHIELD_DEFEND_COUNT",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onDetach": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "BurningDetect"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "FreezeDetect"
        },
        {
          "$type": "MoleMole.Config.ClearGlobalValue",
          "target": "Target",
          "key": "_ABILITY_WEAPON_SHIELD_DEFEND_COUNT"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "ShieldBroken_Attack"
        },
        {
          "$type": "MoleMole.Config.ResetAnimatorTrigger",
          "target": "Target",
          "triggerID": "DefendTrigger"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_RockShield_DefendAttack",
      "modifiers": {
        "ShieldBroken_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.DamageByAttackValue",
              "attackInfo": {
                "attackTag": "",
                "attenuationTag": "",
                "attenuationGroup": "default",
                "attackProperty": {
                  "damagePercentage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "damagePercentageRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "elementDurability": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "strikeType": "Default",
                  "enBreak": 1000.0
                },
                "hitPattern": {
                  "onHitEffectName": "default",
                  "hitImpulseType": "LV4",
                  "hitHaltTimeScale": 0.05
                }
              }
            }
          ]
        },
        "UNIQUE_Monster_Weapon_RockMatrial": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementType": "Rock",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 200.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ElementShieldMixin",
              "elementType": "Rock",
              "showDamageText": "",
              "shieldAngle": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 360.0
              },
              "shieldHPRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "damageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              },
              "onShieldFailed": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "target": "Owner",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_Rock_BlockSuccess"
                  }
                }
              ]
            },
            {
              "$type": "MoleMole.Config.AttachModifierToElementDurabilityMixin",
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 100.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 200.5
                }
              ],
              "modifierNameSteps": [
                "Empty",
                "Shield_Stage01"
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "Owner",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_Rock_ShieldDestroy"
              }
            },
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "Empty": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "Shield_Stage01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "Damaged"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "Owner",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_Rock_ShieldDamaged"
              }
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "Damaged",
              "value": true
            }
          ]
        },
        "FreezeDetect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToAbilityStateMixin",
              "abilityStates": [
                "ElementFreeze"
              ],
              "modifierName": "BeFreezed"
            }
          ]
        },
        "BeFreezed": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "InDefend"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByEquipParts",
                "equipPartNames": [
                  "equip02"
                ]
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Rock"
                }
              ],
              "modifierName": "ReDefend"
            }
          ]
        },
        "ReDefend": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Owner",
              "modifierName": "InDefend"
            }
          ]
        },
        "InDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "NormalDefend"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "ForceDefend"
            }
          ]
        },
        "NormalDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "NormalIdle",
                "NormalMove",
                "Defend",
                "DefendAttack"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendAngle": 90.0,
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              },
              "onDefendSucceded": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_Rock_Block"
                  }
                }
              ]
            }
          ],
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.25
            }
          }
        },
        "ForceDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "BeHit",
                "BeHitThrow"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "alwaysRecover": false,
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              },
              "onDefendSucceded": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_Rock_Block"
                  }
                }
              ]
            }
          ],
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_Monster_Weapon_RockMatrial"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "FreezeDetect"
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "FreezeDetect"
        }
      ],
      "onDetach": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "FreezeDetect"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "ShieldBroken_Attack"
        },
        {
          "$type": "MoleMole.Config.ResetAnimatorTrigger",
          "target": "Target",
          "triggerID": "DefendTrigger"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_IceShield_DefendAttack",
      "modifiers": {
        "ShieldBroken_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.DamageByAttackValue",
              "attackInfo": {
                "attackTag": "",
                "attenuationTag": "",
                "attenuationGroup": "default",
                "attackProperty": {
                  "damagePercentage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "damagePercentageRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "elementDurability": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "strikeType": "Default",
                  "enBreak": 1000.0
                },
                "hitPattern": {
                  "onHitEffectName": "default",
                  "hitImpulseType": "LV4",
                  "hitHaltTimeScale": 0.05
                }
              }
            }
          ]
        },
        "UNIQUE_Monster_Weapon_IceMatrial": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementType": "Frozen",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 200.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ElementShieldMixin",
              "elementType": "Ice",
              "showDamageText": "",
              "shieldAngle": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 360.0
              },
              "shieldHPRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "damageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              },
              "onShieldFailed": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "target": "Owner",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_Rock_BlockSuccess"
                  }
                }
              ]
            },
            {
              "$type": "MoleMole.Config.AttachModifierToElementDurabilityMixin",
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 100.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 200.5
                }
              ],
              "modifierNameSteps": [
                "Empty",
                "Shield_Stage01"
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "Owner",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_Rock_ShieldDestroy"
              }
            },
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "Empty": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "Shield_Stage01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "Damaged"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "Owner",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_Rock_ShieldDamaged"
              }
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "Damaged",
              "value": true
            }
          ]
        },
        "FreezeDetect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToAbilityStateMixin",
              "abilityStates": [
                "ElementFreeze"
              ],
              "modifierName": "BeFreezed"
            }
          ]
        },
        "BeFreezed": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "InDefend"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByEquipParts",
                "equipPartNames": [
                  "equip02"
                ]
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Rock"
                }
              ],
              "modifierName": "ReDefend"
            }
          ]
        },
        "ReDefend": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Owner",
              "modifierName": "InDefend"
            }
          ]
        },
        "InDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "NormalDefend"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "ForceDefend"
            }
          ]
        },
        "NormalDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "NormalIdle",
                "NormalMove",
                "Defend",
                "DefendAttack"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendAngle": 90.0,
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              },
              "onDefendSucceded": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_Rock_Block"
                  }
                }
              ]
            }
          ],
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.25
            }
          }
        },
        "ForceDefend": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.MonsterDefendMixin",
              "stateIDs": [
                "BeHit",
                "BeHitThrow"
              ],
              "defendTriggerID": "DefendTrigger",
              "defendProbability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "defendProbabilityDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "defendTimeInterval": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "alwaysRecover": false,
              "defendCountInterval": {
                "isDynamic": false,
                "fixedValue": 0
              },
              "onDefendSucceded": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_Hili_Rock_Block"
                  }
                }
              ]
            }
          ],
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_Monster_Weapon_IceMatrial"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "modifierName": "FreezeDetect"
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "FreezeDetect"
        }
      ],
      "onDetach": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "InDefend"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Target",
          "modifierName": "FreezeDetect"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Target",
          "modifierName": "ShieldBroken_Attack"
        },
        {
          "$type": "MoleMole.Config.ResetAnimatorTrigger",
          "target": "Target",
          "triggerID": "DefendTrigger"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Staff_Fire_WeaponInit",
      "onAdded": [
        {
          "$type": "MoleMole.Config.TriggerAbility",
          "target": "Owner",
          "abilityName": "Abyss_Fire_WeaponElement"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Staff_Ice_WeaponInit",
      "onAdded": [
        {
          "$type": "MoleMole.Config.TriggerAbility",
          "target": "Owner",
          "abilityName": "Abyss_Ice_WeaponElement"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Staff_Water_WeaponInit",
      "onAdded": [
        {
          "$type": "MoleMole.Config.TriggerAbility",
          "target": "Owner",
          "abilityName": "Abyss_Water_WeaponElement"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Torch_FireState",
      "modifiers": {
        "UNIQUE_Hili_Fire_Torch_FireState": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Fire",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 50.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_Fire_Torch_FireElementLoop"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "target": "Owner",
              "abilityName": "Hili_Torch_FireState_OnFire"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "target": "Owner",
              "abilityName": "Hili_Torch_FireState_OffFire"
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Hili_Fire_Torch_FireElementAS"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Hili_Fire_Torch_FireState"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Hili_Fire_Torch_FireState"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_WoodenClub_Grass_SetGlobalValue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "key": "_IS_CLUB_",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "key": "_IS_CLUB_",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Warglaive_Fire_01_IntoShadow",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerSetRenderersEnable",
          "renderNames": [
            "MonEquip_Warglaive_Fire_01"
          ]
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Warglaive_Fire_01_OutOfShadow",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerSetRenderersEnable",
          "renderNames": [
            "MonEquip_Warglaive_Fire_01"
          ],
          "setEnable": true
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_Gadget_Disappear",
      "onKill": [
        {
          "$type": "MoleMole.Config.FireEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Weapon_Disappear"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Weapon_BeingHitDetect",
      "modifiers": {
        "UNIQUE_Weapon_BeingHitDetect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.SetAnimatorTrigger",
              "target": "Owner",
              "triggerID": {
                "isDynamic": false,
                "fixedValue": "AwakeAlert"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Weapon_BeingHitDetect"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_WoodenClub_01_SetGlobalValue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_CLUB_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Target",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_CLUB_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Shield_01_SetGlobalValue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_SHIELD_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Target",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_SHIELD_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Crossbow_01_SetGlobalValue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_CROSSBOW_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Target",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_CROSSBOW_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Shield_02_SetGlobalValue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_CLUB_02",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Target",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_CLUB_02",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Torch_02_SetGlobalValue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_TORCH_02",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Target",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_TORCH_02",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Axe_01_SetGlobalValue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Owner",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_Axe_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Target",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_IS_Axe_01",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Skirmisher_Spraygun_Ice_ImproveState",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Skirmisher_Male_Fat_SprayGun_Ice_SprayGunNormal"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Skirmisher_Backpack_Ice_ImproveState",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Skirmisher_Male_Fat_SprayGun_Ice_BackPackNormal"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Skirmisher_Spraygun_Water_ImproveState",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Skirmisher_Male_Fat_SprayGun_Water_SprayGunNormal"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonEquip_Skirmisher_Backpack_Water_ImproveState",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Skirmisher_Male_Fat_SprayGun_Water_BackPackNormal"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Shougun_Pole_Effect",
      "modifiers": {
        "UNIQUE_Monster_Shougun_Pole_Visable": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.TriggerHideWeapon",
              "partNames": [
                "equip02"
              ]
            },
            {
              "$type": "MoleMole.Config.TriggerHideWeapon",
              "visible": true,
              "partNames": [
                "equip01"
              ]
            }
          ]
        },
        "Monster_Shougun_Pole_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Shougun_Pole_WeaponLoopEffect"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Monster_Shougun_Pole_Effect"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_MITAKENARUKAMI_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Pole_Visable"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Pole_Visable"
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_MITAKENARUKAMI_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Pole_Visable"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_MITAKENARUKAMI_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Tachi_Visable"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Monster_Shougun_Tachi_Effect",
      "modifiers": {
        "UNIQUE_Monster_Shougun_Tachi_Visable": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.TriggerHideWeapon",
              "visible": true,
              "partNames": [
                "equip02"
              ]
            },
            {
              "$type": "MoleMole.Config.TriggerHideWeapon",
              "partNames": [
                "equip01"
              ]
            }
          ]
        },
        "Monster_Shougun_Tachi_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Shougun_Tachi_WeaponLoopEffect"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Monster_Shougun_Tachi_Effect"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_MITAKENARUKAMI_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Tachi_Visable"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Tachi_Visable"
        }
      ],
      "onAttach": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_MITAKENARUKAMI_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Tachi_Visable"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_SHOUGUN_MITAKENARUKAMI_WEAPONTYPE_",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "modifierName": "UNIQUE_Monster_Shougun_Pole_Visable"
        }
      ]
    }
  }
]