[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_AnimatorSteer",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "Alert"
          ],
          "endNormalizedTime": 0.3,
          "angularSpeed": 180.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "NormalAtkBS"
          ],
          "angularSpeed": 360.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "NormalAtk01"
          ],
          "startNormalizedTime": 0.36,
          "endNormalizedTime": 0.4,
          "angularSpeed": 180.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "NormalAtk02"
          ],
          "startNormalizedTime": 0.28,
          "endNormalizedTime": 0.305,
          "angularSpeed": 180.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "NormalAtk03_01"
          ],
          "startNormalizedTime": 0.225,
          "endNormalizedTime": 0.245,
          "angularSpeed": 600.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "NormalAtk03"
          ],
          "startNormalizedTime": 0.355,
          "endNormalizedTime": 0.425,
          "angularSpeed": 360.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "SlashAtk01"
          ],
          "startNormalizedTime": 0.05,
          "endNormalizedTime": 0.18,
          "angularSpeed": 300.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "SlashAtk02"
          ],
          "endNormalizedTime": 0.13,
          "angularSpeed": 300.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "ChargeAtk01BS",
            "ChargeAtk01"
          ],
          "endNormalizedTime": 0.28,
          "angularSpeed": 180.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "ChargeAtk02BS"
          ],
          "angularSpeed": 360.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "WhirlWindBS"
          ],
          "angularSpeed": 360.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "WhirlWindLoopBS"
          ],
          "startNormalizedTime": 0.75,
          "endNormalizedTime": 0.885,
          "angularSpeed": 300.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackMixin",
          "steerStateIDs": [
            "WhirlWindAS"
          ],
          "startNormalizedTime": 0.1,
          "endNormalizedTime": 0.13,
          "angularSpeed": 1200.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        },
        {
          "$type": "MoleMole.Config.SteerAttackTraceMixin",
          "steerStateIDs": [
            "RushMoveBS",
            "RushMove",
            "RushMoveAS"
          ],
          "endNormalizedTime": 0.5,
          "angularSpeed": 180.0,
          "attackTrigger": "",
          "attackDistance": 12.0
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_EquipController",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToStateIDMixin",
          "stateIDs": [
            "NormalAtk01",
            "NormalAtk02",
            "NormalAtk03_02",
            "SlashAtk02",
            "ChargeAtk01",
            "ChargeAtk02",
            "WhirlWind",
            "WhirlWindLoopBS",
            "WhirlWindLoop",
            "WhirlWindAS",
            "Transform"
          ],
          "modifierName": "Invoker_Herald_Water_EquipControllerR"
        },
        {
          "$type": "MoleMole.Config.AttachToStateIDMixin",
          "stateIDs": [
            "NormalAtk03_01",
            "NormalAtk03_02",
            "SlashAtk01",
            "ChargeAtk01",
            "ChargeAtk02",
            "WhirlWind",
            "WhirlWindLoopBS",
            "WhirlWindLoop",
            "WhirlWindAS",
            "Transform"
          ],
          "modifierName": "Invoker_Herald_Water_EquipControllerL"
        }
      ],
      "modifiers": {
        "Invoker_Herald_Water_EquipControllerR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_WeaponR"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_WeaponR_Disappear"
              }
            }
          ]
        },
        "Invoker_Herald_Water_EquipControllerL": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_WeaponL"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_WeaponL_Disappear"
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_Disappear",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToPoseIDMixin",
          "poseIDs": [
            901,
            902,
            903
          ],
          "modifierName": "Invoker_Herald_Water_DisappearController"
        }
      ],
      "modifiers": {
        "Invoker_Herald_Water_DisappearController": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_DISAPPEAR",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "modifierName": "UNIQUE_Invoker_Herald_Water_ElementShield"
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "ElementState"
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTERAFFIX_QUEST_RETURNTOBORN",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "Invoker_Herald_Water_ReturnToBornController"
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "Invoker_Herald_Water_Disappear"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.SetAnimatorTrigger",
              "triggerID": {
                "isDynamic": false,
                "fixedValue": "DisappearTrigger"
              },
              "MPTriggerOnRemote": true
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "Invoker_Herald_Water_Disappear_Invincible"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "Invoker_Herald_Water_Disappear_DenyLockOn"
            }
          ]
        },
        "Invoker_Herald_Water_Disappear_Invincible": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "state": "Invincible"
        },
        "Invoker_Herald_Water_Disappear_DenyLockOn": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "state": "DenyLockOn"
        },
        "Invoker_Herald_Water_Disappear": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "DisappearState",
              "value": true
            },
            {
              "$type": "MoleMole.Config.SetCanDieImmediately",
              "dieImmediately": true
            },
            {
              "$type": "MoleMole.Config.KillSelf",
              "banDrop": true,
              "banExp": true,
              "banHPPercentageDrop": true,
              "killSelfType": "Disappear"
            }
          ]
        },
        "Invoker_Herald_Water_ReturnToBornController": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToPoseIDMixin",
              "poseIDs": [
                902,
                903
              ],
              "modifierName": "Invoker_Herald_Water_ReturnToBorn"
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "WanderState",
              "value": true
            }
          ]
        },
        "Invoker_Herald_Water_ReturnToBorn": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachActionToModifierMixin",
              "onAdded": [
                {
                  "$type": "MoleMole.Config.TriggerSetVisible"
                },
                {
                  "$type": "MoleMole.Config.HideUIBillBoard",
                  "hide": true
                },
                {
                  "$type": "MoleMole.Config.EnableHitBoxByName",
                  "hitBoxNames": [
                    "HitBox",
                    "HeadBox"
                  ]
                },
                {
                  "$type": "MoleMole.Config.EnablePushColliderName",
                  "pushColliderNames": [
                    "PushCollider"
                  ]
                }
              ],
              "onRemoved": [
                {
                  "$type": "MoleMole.Config.TriggerSetVisible",
                  "visible": true
                },
                {
                  "$type": "MoleMole.Config.HideUIBillBoard"
                },
                {
                  "$type": "MoleMole.Config.EnableHitBoxByName",
                  "hitBoxNames": [
                    "HitBox",
                    "HeadBox"
                  ],
                  "setEnable": true
                },
                {
                  "$type": "MoleMole.Config.EnablePushColliderName",
                  "pushColliderNames": [
                    "PushCollider"
                  ],
                  "setEnable": true
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_BornHigh"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetAnimatorTrigger",
              "triggerID": {
                "isDynamic": false,
                "fixedValue": "ReturnToBornTrigger"
              },
              "MPTriggerOnRemote": true
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_BornHigh"
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_SlashAtk01",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByStateIDMixin",
          "stateIDs": [
            "SlashAtk01",
            "SlashAtk02",
            "SlashAtkAS"
          ],
          "enterPredicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              },
              "compareType": "MoreThan"
            }
          ],
          "enterActions": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_SLASHATK",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              },
              "overrideMapKey": "Invoker_Herald_Water_SlashAtk_Count"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "AttackContinue",
              "value": true
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Invoker_Herald_Water_SlashAtk_Count": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202001,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "SlashAtk01"
            },
            "useRotation": true,
            "attachPointName": "SlashAtk01"
          }
        },
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_MONSTER_INVOKER_HERALD_WATER_SLASHATK",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetAnimatorBool",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_MONSTER_INVOKER_HERALD_WATER_SLASHATK",
              "value": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Invoker_Herald_Water_SlashAtk_Count"
              },
              "compareType": "MoreThanAndEqual"
            }
          ],
          "boolID": "AttackContinue"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_SlashAtk02",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202001,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "SlashAtk02"
            },
            "useRotation": true,
            "attachPointName": "SlashAtk02"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_SlashAtk_Bullet",
      "modifiers": {
        "Invoker_Herald_Water_SlashAtk_Bullet": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_SlashAtk_Bullet"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Invoker_Herald_Water_SlashAtk_Bullet"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackSphere",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByCollisionPoint"
              },
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Water",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 50.0
                },
                "strikeType": "Default",
                "enBreak": 100.0
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV4"
              },
              "canBeModifiedBy": "OriginOwner"
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_ChargeAtk_Detect",
      "modifiers": {
        "Invoker_Herald_Water_ChargeAtk_Detect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "Invoker_Herald_Water_ChargeAtk"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Avatar"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitDamage",
                  "damage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "TargetTeam",
                  "modifierName": "UNIQUE_Invoker_Herald_Water_ChargeAtk"
                }
              ]
            }
          ]
        },
        "UNIQUE_Invoker_Herald_Water_ChargeAtk": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Debuff_Hit_Water"
              }
            },
            {
              "$type": "MoleMole.Config.ModifyAvatarSkillCD",
              "target": "CurTeamAvatars",
              "doOffStage": true,
              "skillSlot": [
                2,
                5
              ],
              "cdDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 6.0
              }
            },
            {
              "$type": "MoleMole.Config.FireUIEffect",
              "effectPattern": "Eff_UI_Debuff_IncreaseCD_Invoker_Water"
            },
            {
              "$type": "MoleMole.Config.FireUIEffect",
              "effectPattern": "Eff_UI_Debuff_IncreaseCD_Invoker_Water",
              "effectSlot": "ElementBurst"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Invoker_Herald_Water_ChargeAtk_Detect"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_ChargeAtk01",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202002,
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              }
            }
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_ChargeAtk02",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_01"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_01"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_02"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_02"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_03"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_03"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_04"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_04"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_05"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_05"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_06"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_06"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_07"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_07"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "bulletID": 42202003,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
              "attachPointName": "ChargeAtk02_08"
            },
            "useRotation": true,
            "attachPointName": "ChargeAtk02_08"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_ChargeAtk01_Bullet",
      "modifiers": {
        "Invoker_Herald_Water_ChargeAtk01_Bullet": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_ChargeAtk01_Bullet"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Invoker_Herald_Water_ChargeAtk01_Bullet"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackSphere",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByCollisionPoint"
              },
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              }
            },
            "attackInfo": {
              "attackTag": "Invoker_Herald_Water_ChargeAtk",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Water",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 50.0
                },
                "strikeType": "Default",
                "enBreak": 200.0
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV4"
              },
              "canBeModifiedBy": "OriginOwner"
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_ChargeAtk02_Bullet",
      "modifiers": {
        "Invoker_Herald_Water_ChargeAtk02_Bullet": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_ChargeAtk02_Bullet"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.FireEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Invoker_Herald_Water_ChargeAtk02_BulletBS"
          }
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "Invoker_Herald_Water_ChargeAtk02_Bullet"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackSphere",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByCollisionPoint"
              },
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              }
            },
            "attackInfo": {
              "attackTag": "Invoker_Herald_Water_ChargeAtk",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Water",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 50.0
                },
                "strikeType": "Default",
                "enBreak": 200.0
              },
              "hitPattern": {
                "onHitEffectName": "none",
                "hitImpulseType": "LV4"
              },
              "canBeModifiedBy": "OriginOwner"
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_WhirlWind",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToStateIDMixin",
          "stateIDs": [
            "WhirlWindLoopBS",
            "WhirlWindLoop"
          ],
          "modifierName": "Invoker_Herald_Water_WhirlWind"
        },
        {
          "$type": "MoleMole.Config.DoActionByStateIDMixin",
          "stateIDs": [
            "WhirlWindBS",
            "WhirlWind",
            "WhirlWindLoopBS",
            "WhirlWindLoop",
            "WhirlWindAS",
            "WhirlWindOver"
          ],
          "enterActions": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_WHIRLWIND",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "Invoker_Herald_Water_WhirlWind_Count"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.0
                  }
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              },
              "overrideMapKey": "Invoker_Herald_Water_WhirlWind_Count"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 3.0
              },
              "overrideMapKey": "Invoker_Herald_Water_WhirlWind_Count"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "overrideMapKey": "Invoker_Herald_Water_WhirlWind_Count"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "AttackContinue",
              "value": true
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Invoker_Herald_Water_WhirlWind_Count": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Invoker_Herald_Water_WhirlWind": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToAbilityStateMixin",
              "abilityStates": [
                "ElementFrozen",
                "ElementPetrifaction"
              ],
              "reject": true,
              "modifierName": "Invoker_Herald_Water_WhirlWind_Effect"
            }
          ]
        },
        "Invoker_Herald_Water_WhirlWind_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Invoker_Herald_Water_WhirlWind"
              }
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_MONSTER_INVOKER_HERALD_WATER_WHIRLWIND",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetAnimatorBool",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_MONSTER_INVOKER_HERALD_WATER_WHIRLWIND",
              "value": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Invoker_Herald_Water_WhirlWind_Count"
              },
              "compareType": "MoreThanAndEqual"
            }
          ],
          "boolID": "AttackContinue"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_StateControl",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToHPPercentMixin",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.6
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.2
            }
          ],
          "modifierNameSteps": [
            "Invoker_Empty",
            "UNIQUE_Invoker_Herald_Water_Normal",
            "UNIQUE_Invoker_Herald_Water_Element"
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByPoseIDMixin",
          "poseIDs": [
            301
          ],
          "enterActions": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByPoseIDMixin",
          "poseIDs": [
            302
          ],
          "enterActions": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByPoseIDMixin",
          "poseIDs": [
            401
          ],
          "enterActions": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 3.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByPoseIDMixin",
          "poseIDs": [
            402
          ],
          "enterActions": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_STATE",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      ],
      "modifiers": {
        "UNIQUE_Invoker_Herald_Water_Limbo": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_HpThresholdRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.15
            }
          },
          "state": "Limbo"
        },
        "Invoker_Empty": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "UNIQUE_Invoker_Herald_Water_Normal": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "NormalStage",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "NormalStage"
            }
          ]
        },
        "UNIQUE_Invoker_Herald_Water_Element": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "ElementState",
              "value": true
            },
            {
              "$type": "MoleMole.Config.ClearEndura"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_Invoker_Herald_Water_Limbo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Invoker_Herald_Water_Transform",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToPoseIDMixin",
          "poseIDs": [
            401,
            402
          ],
          "modifierName": "Invoker_Herald_Water_Transform"
        }
      ],
      "abilitySpecials": {
        "ElementShield_DurabilityImprove": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Invoker_Herald_Water_Transform": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetAnimatorTrigger",
              "triggerID": {
                "isDynamic": false,
                "fixedValue": "TransformTrigger"
              },
              "MPTriggerOnRemote": true
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "Invoker_Herald_Water_Transform_LockHP"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "Invoker_Herald_Water_Transform_NoHeal"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_INVOKER_HERALD_WATER_ELEMENTSTATE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "modifierName": "UNIQUE_Invoker_Herald_Water_ElementShield"
            }
          ],
          "onReconnect": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_Invoker_Herald_Water_ElementShield"
            }
          ]
        },
        "Invoker_Herald_Water_Transform_LockHP": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "state": "LockHP"
        },
        "Invoker_Herald_Water_Transform_NoHeal": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "state": "NoHeal"
        },
        "UNIQUE_Invoker_Herald_Water_ElementShield": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementType": "Water",
          "elementDurability": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 900.0
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "ElementShield_DurabilityImprove"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 900.0
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ElementShieldMixin",
              "elementType": "Water",
              "showDamageText": "",
              "shieldAngle": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 360.0
              },
              "shieldHPRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "damageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              },
              "useMutiPlayerFixData": true
            },
            {
              "$type": "MoleMole.Config.VelocityForceMixin",
              "excludeForces": [
                "WindZoneType"
              ]
            },
            {
              "$type": "MoleMole.Config.AttachModifierToElementDurabilityMixin",
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": false,
                      "fixedValue": 300.0
                    },
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "ElementShield_DurabilityImprove"
                    },
                    {
                      "isOperator": true,
                      "operation": "Mul"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": false,
                      "fixedValue": 300.0
                    },
                    {
                      "isOperator": true,
                      "operation": "Add"
                    }
                  ]
                },
                {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": false,
                      "fixedValue": 900.0
                    },
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "ElementShield_DurabilityImprove"
                    },
                    {
                      "isOperator": true,
                      "operation": "Mul"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": false,
                      "fixedValue": 900.0
                    },
                    {
                      "isOperator": true,
                      "operation": "Add"
                    }
                  ]
                }
              ],
              "modifierNameSteps": [
                "UNIQUE_Invoker_Herald_Water_Transform",
                "Invoker_Empty"
              ]
            }
          ],
          "properties": {
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.0
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_ELEMENTSTATE",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_DISAPPEAR",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.AttachAbilityStateResistance",
              "resistanceListID": 14001
            },
            {
              "$type": "MoleMole.Config.AttachAbilityStateResistance",
              "resistanceListID": 14002,
              "durationRatio": 0.8
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_MONSTER_INVOKER_HERALD_WATER_ELEMENTSTATE",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "ElementState"
            },
            {
              "$type": "MoleMole.Config.KillSelf",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_INVOKER_HERALD_WATER_DISAPPEAR",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ]
            }
          ]
        },
        "Invoker_Empty": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "UNIQUE_Invoker_Herald_Water_Transform": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "TransformStage",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "TransformStage"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "globalValueKey": "_MONSTERAFFIX_ELEMENTSHIELD_DURABILITYIMPROVE",
          "overrideMapKey": "ElementShield_DurabilityImprove"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_Invoker_Herald_Water_ElementShield"
        }
      ]
    }
  }
]