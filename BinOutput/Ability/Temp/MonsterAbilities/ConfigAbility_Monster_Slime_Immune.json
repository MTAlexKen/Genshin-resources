[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_03_Immune1_FireBorn",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToElementTypeMixin",
          "elementTypes": [
            "Water"
          ],
          "modifierName": "WaterDetect"
        }
      ],
      "modifiers": {
        "OnFire_Trigger": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.8
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "FireShader",
              "value": true
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_Absorption_Large"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_FireBorn"
            }
          ]
        },
        "UNIQUE_FireBorn": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 30.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ReplaceEventPatternMixin",
              "oldPatterns": [
                "Monster_Slime_Fire_03_NormalAttack",
                "Monster_Slime_Fire_JumpAttack"
              ],
              "newPatterns": [
                "Monster_Slime_Fire_03_NormalAttack_Fire",
                "Monster_Slime_Fire_JumpAttack_Fire"
              ]
            }
          ],
          "properties": {
            "Actor_FireSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "FireReborn"
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_Burst_Large"
              }
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "FireState",
              "value": true
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "FireShader",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_Extinguish_Large"
              }
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "FireState"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "FireShader"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "FireReborn"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_BeHit"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByHitPoint",
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByBackToHitBoxCenter"
                },
                "alongGround": true
              }
            }
          ]
        },
        "FireReborn": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD"
            }
          ]
        },
        "WaterDetect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "IsWet",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "IsWet"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "OnFire_Trigger"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_03_Immune2_FireBorn",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToElementTypeMixin",
          "elementTypes": [
            "Water"
          ],
          "modifierName": "WaterDetect"
        }
      ],
      "modifiers": {
        "OnFire_Trigger": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.8
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "FireShader",
              "value": true
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_Absorption_Large"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_FireBorn"
            }
          ]
        },
        "UNIQUE_FireBorn": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementType": "Fire",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 300.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ReplaceEventPatternMixin",
              "oldPatterns": [
                "Monster_Slime_Fire_03_NormalAttack",
                "Monster_Slime_Fire_JumpAttack"
              ],
              "newPatterns": [
                "Monster_Slime_Fire_03_NormalAttack_Fire",
                "Monster_Slime_Fire_JumpAttack_Fire"
              ]
            }
          ],
          "properties": {
            "Actor_FireSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "FireReborn"
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_Burst_Large"
              }
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "FireState",
              "value": true
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "FireShader",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_Extinguish_Large"
              }
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "FireState"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "FireShader"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "FireReborn"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_BeHit"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByHitPoint",
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByBackToHitBoxCenter"
                },
                "alongGround": true
              }
            }
          ]
        },
        "FireReborn": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD"
            }
          ]
        },
        "WaterDetect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "IsWet",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "IsWet"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "OnFire_Trigger"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_Immune_FireBall",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ],
          "bulletID": 42101007,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.8
              }
            },
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
            },
            "attachPointName": "RootNode"
          }
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "logic": "Lesser",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ],
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_F_Slime_FireSmoke"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Electric_03_Immune1_ElementState",
      "abilitySpecials": {
        "DischargeTime": {
          "type": "float",
          "dynamicValue": 7.0
        }
      },
      "modifiers": {
        "UNIQUE_SLime_Electric_ElementState": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 30.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ReplaceEventPatternMixin",
              "oldPatterns": [
                "Monster_Slime_Electric_03_NormalAttack",
                "Monster_Slime_Electric_JumpAttack"
              ],
              "newPatterns": [
                "Monster_Slime_Electric_03_NormalAttack_Electric",
                "Monster_Slime_Electric_Immune_JumpAttack_Electric"
              ]
            },
            {
              "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
              "defaultGlobalValueOnCreate": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": -1.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.5
                }
              ],
              "modifierNameSteps": [
                "Discharge_Timer",
                "Discharge_Timer_Off"
              ]
            }
          ],
          "properties": {
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "Discharge_Timer"
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "ElementState",
              "value": true
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "SkinShader",
              "value": true
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Idle"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ClearGlobalValue",
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY"
            },
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "Discharge_Timer"
            },
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "Discharge_Transition"
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "ElementState"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "SkinShader"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "RebornTimer"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.AddElementDurability",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHitElement",
                  "element": "Electric"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 25.0
              },
              "modifierName": "UNIQUE_SLime_Electric_ElementState",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 200.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -10.0
              },
              "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR15",
                "campTargetType": "SelfCamp",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ByAnimatorFloat",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "parameter": "PoseID"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                {
                  "$type": "MoleMole.Config.SetPartControlTarget",
                  "target": "Target",
                  "partRootNames": [
                    "AntennaControl"
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "MoreThan"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.SetPoseBool",
                  "boolID": "IsAttract",
                  "value": true
                },
                {
                  "$type": "MoleMole.Config.SetAnimatorBool",
                  "boolID": "IsAttract",
                  "value": true
                },
                {
                  "$type": "MoleMole.Config.EnablePartControl",
                  "partRootNames": [
                    "AntennaControl"
                  ],
                  "enable": true
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.SetPoseBool",
                  "boolID": "IsAttract"
                },
                {
                  "$type": "MoleMole.Config.SetAnimatorBool",
                  "boolID": "IsAttract"
                },
                {
                  "$type": "MoleMole.Config.EnablePartControl",
                  "partRootNames": [
                    "AntennaControl"
                  ]
                }
              ]
            }
          ]
        },
        "RebornTimer": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD"
            }
          ]
        },
        "Discharge": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.05
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_Ready"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -0.3
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByEntity"
                },
                "attachPointName": "ElectrifiedBody"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.75
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -0.6
                      }
                    }
                  },
                  "height": 0.75,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.9
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 1.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Electric",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "strikeType": "Default",
                    "enBreak": 80.0
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitLevel": "Light",
                    "hitImpulseX": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 200.0
                    },
                    "hitImpulseY": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "hitImpulseType": "",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "Enemy"
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.75
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -0.6
                      }
                    }
                  },
                  "height": 0.75,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.9
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Electric",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "enBreak": 80.0
                  }
                }
              },
              "targetType": "Alliance"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_SLIME_ELECTRIC_DISCHARGE",
              "useLimitRange": true,
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 9.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "globalValueKey": "_ABILITY_SLIME_ELECTRIC_DISCHARGE",
              "overrideMapKey": "DischargeTime"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "Discharge_Timer"
            },
            {
              "$type": "MoleMole.Config.AddElementDurability",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -25.0
              },
              "modifierName": "UNIQUE_SLime_Electric_ElementState",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 200.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Discharge_Timer": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "DischargeTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_Gap"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "attachPointName": "ElectrifiedBody"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAnimatorFloat",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "parameter": "PoseID"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "forceByCaster": true
                }
              ],
              "modifierName": "Discharge_Transition"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorTrigger",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAnimatorFloat",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "parameter": "PoseID"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "forceByCaster": true
                }
              ],
              "triggerID": {
                "isDynamic": false,
                "fixedValue": "Discharge"
              }
            }
          ]
        },
        "Discharge_Timer_Off": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_Gap"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "attachPointName": "ElectrifiedBody"
              }
            }
          ]
        },
        "Discharge_Transition": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_BS"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerFaceAnimation",
              "faceAnimation": "Attack"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAnimatorFloat",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "parameter": "PoseID"
                }
              ],
              "modifierName": "Discharge"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_SLime_Electric_ElementState"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_SLime_Electric_ElementState"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Electric_03_Immune2_ElementState",
      "abilitySpecials": {
        "DischargeTime": {
          "type": "float",
          "dynamicValue": 7.0
        }
      },
      "modifiers": {
        "UNIQUE_SLime_Electric_ElementState": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Electric",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 200.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ReplaceEventPatternMixin",
              "oldPatterns": [
                "Monster_Slime_Electric_03_NormalAttack",
                "Monster_Slime_Electric_JumpAttack"
              ],
              "newPatterns": [
                "Monster_Slime_Electric_03_NormalAttack_Electric",
                "Monster_Slime_Electric_JumpAttack_Electric"
              ]
            },
            {
              "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
              "defaultGlobalValueOnCreate": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": -1.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.5
                }
              ],
              "modifierNameSteps": [
                "Discharge_Timer",
                "Discharge_Timer_Off"
              ]
            }
          ],
          "properties": {
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "Discharge_Timer"
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "ElementState",
              "value": true
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "SkinShader",
              "value": true
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Idle"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ClearGlobalValue",
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY"
            },
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "Discharge_Timer"
            },
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "Discharge_Transition"
            },
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "ElementState"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorBool",
              "boolID": "SkinShader"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "RebornTimer"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.AddElementDurability",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHitElement",
                  "element": "Electric"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 25.0
              },
              "modifierName": "UNIQUE_SLime_Electric_ElementState",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 200.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -10.0
              },
              "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR15",
                "campTargetType": "SelfCamp",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Electric"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                {
                  "$type": "MoleMole.Config.SetPartControlTarget",
                  "target": "Target",
                  "partRootNames": [
                    "AntennaControl"
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "MoreThan"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.SetPoseBool",
                  "boolID": "IsAttract",
                  "value": true
                },
                {
                  "$type": "MoleMole.Config.SetAnimatorBool",
                  "boolID": "IsAttract",
                  "value": true
                },
                {
                  "$type": "MoleMole.Config.EnablePartControl",
                  "partRootNames": [
                    "AntennaControl"
                  ],
                  "enable": true
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.SetPoseBool",
                  "boolID": "IsAttract"
                },
                {
                  "$type": "MoleMole.Config.SetAnimatorBool",
                  "boolID": "IsAttract"
                },
                {
                  "$type": "MoleMole.Config.EnablePartControl",
                  "partRootNames": [
                    "AntennaControl"
                  ]
                }
              ]
            }
          ]
        },
        "RebornTimer": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD",
              "value": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetPoseBool",
              "boolID": "RebornGCD"
            }
          ]
        },
        "Discharge": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.05
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_Ready"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -0.3
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByEntity"
                },
                "attachPointName": "ElectrifiedBody"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.75
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -0.6
                      }
                    }
                  },
                  "height": 0.75,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.9
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 1.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Electric",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "strikeType": "Default",
                    "enBreak": 80.0
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitLevel": "Light",
                    "hitImpulseX": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 200.0
                    },
                    "hitImpulseY": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "hitImpulseType": "",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "Enemy"
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.75
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -0.6
                      }
                    }
                  },
                  "height": 0.75,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.9
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Electric",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "enBreak": 80.0
                  }
                }
              },
              "targetType": "Alliance"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_SLIME_ELECTRIC_DISCHARGE",
              "useLimitRange": true,
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 9.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "globalValueKey": "_ABILITY_SLIME_ELECTRIC_DISCHARGE",
              "overrideMapKey": "DischargeTime"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "Discharge_Timer"
            },
            {
              "$type": "MoleMole.Config.AddElementDurability",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -25.0
              },
              "modifierName": "UNIQUE_SLime_Electric_ElementState",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 200.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Discharge_Timer": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "DischargeTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_Gap"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "attachPointName": "ElectrifiedBody"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Electric"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "forceByCaster": true
                }
              ],
              "modifierName": "Discharge_Transition"
            },
            {
              "$type": "MoleMole.Config.SetAnimatorTrigger",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Electric"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_SLIME_ELECTRIC_POSITIVE_COUNT",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "forceByCaster": true
                }
              ],
              "triggerID": {
                "isDynamic": false,
                "fixedValue": "Discharge"
              }
            }
          ]
        },
        "Discharge_Timer_Off": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_Gap"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "attachPointName": "ElectrifiedBody"
              }
            }
          ]
        },
        "Discharge_Transition": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Electric_Discharge_BS"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerFaceAnimation",
              "faceAnimation": "Attack"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Electric"
                }
              ],
              "modifierName": "Discharge"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_SLime_Electric_ElementState"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_SLime_Electric_ElementState"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Electric_Immune_JumpGround_castShadow",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerSetCastShadow",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.EnablePushColliderName",
          "pushColliderNames": [
            "PushCollider"
          ]
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ],
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Slime_Electric_JumpPrepared"
          }
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            },
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ],
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Slime_Electric_Positive_JumpPrepared"
          }
        },
        {
          "$type": "MoleMole.Config.ActCameraShake",
          "cameraShake": {
            "shakeType": "CustomVector",
            "shakeRange": 0.06,
            "shakeTime": 0.15,
            "shakeDir": {
              "y": 1.0
            }
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Electric_Immune_JumpGround_Alert",
      "modifiers": {
        "JumpGround_Alert": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAnimatorFloat",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "parameter": "PoseID"
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Slime_Fire_JumpGround_Alert"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByRushToPoint"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.TriggerSetCastShadow",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAnimatorFloat",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "parameter": "PoseID"
                }
              ],
              "castShadow": true
            },
            {
              "$type": "MoleMole.Config.EnablePushColliderName",
              "pushColliderNames": [
                "PushCollider"
              ],
              "setEnable": true
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "JumpGround_Alert"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Electric_Immune_JumpGround_Attack",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.FireEffect",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ],
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Slime_Electric_JumpGround"
          }
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_ABILITY_SLIME_ELECTRIC_PROPERITY",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            },
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ],
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Slime_Electric_Positive_JumpGround"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAnimatorFloat",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 100.0
              },
              "parameter": "PoseID"
            }
          ],
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "height": 1.5,
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 3.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Electric",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 50.0
                },
                "strikeType": "Blunt",
                "enBreak": 200.0
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitLevel": "Air",
                "hitImpulseX": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 655.0
                },
                "hitImpulseY": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 800.0
                },
                "hitImpulseType": "",
                "hitHaltTimeScale": 0.01
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.12,
                "shakeTime": 0.15,
                "shakeDistance": 25.0,
                "shakeDir": {
                  "y": -1.0
                }
              }
            }
          },
          "targetType": "Enemy"
        },
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByNot",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAnimatorFloat",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "parameter": "PoseID"
                }
              ]
            }
          ],
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "height": 1.5,
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.25
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 2.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 100.0
                },
                "strikeType": "Blunt",
                "enBreak": 50.0
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitLevel": "Air",
                "hitImpulseX": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 655.0
                },
                "hitImpulseY": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 800.0
                },
                "hitImpulseType": "",
                "hitHaltTimeScale": 0.01
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.12,
                "shakeTime": 0.15,
                "shakeDistance": 25.0,
                "shakeDir": {
                  "y": -1.0
                }
              }
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_Immune_FindHome_FireBall",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_SLIME_FIRE_IMMUNE2_TAG",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByHasElement",
              "element": "Fire"
            }
          ],
          "bulletID": 42001023,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
            },
            "attachPointName": "RootNode"
          },
          "lifeByOwnerIsAlive": true,
          "trackTarget": "Self"
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByHasElement",
              "element": "Fire"
            }
          ],
          "bulletID": 42001023,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -5.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
            },
            "attachPointName": "RootNode"
          },
          "lifeByOwnerIsAlive": true,
          "trackTarget": "Self"
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByHasElement",
              "element": "Fire"
            }
          ],
          "bulletID": 42001023,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -5.0
              }
            },
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
            },
            "attachPointName": "RootNode"
          },
          "lifeByOwnerIsAlive": true,
          "trackTarget": "Self"
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByNot",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Fire"
                }
              ]
            }
          ],
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_F_Slime_FireSmoke"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_Immune_FireBall_Explode",
      "modifiers": {
        "RebornAsRigidBody_Trigger": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "target": "Owner",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "ExplodeDamage"
                  ]
                }
              ],
              "abilityName": "Slime_Fire_Immune_FireBall_RebornAsRigidBody"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_SLIME_FIRE_IMMUNE_FIREBALL_HITFLAG",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "RebornAsRigidBody_Trigger"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_FireBall_Loop"
        },
        {
          "$type": "MoleMole.Config.KillSelf",
          "target": "Owner",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
              "logic": "Lesser",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "duration": 0.2
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_Immune_FireBall_RebornAsRigidBody",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.CreateGadget",
          "otherTargets": {
            "$type": "MoleMole.Config.SelectTargetsByShape",
            "topLimit": 5,
            "shapeName": "CircleR10",
            "campTargetType": "SelfCamp",
            "sizeRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_SLIME_FIRE_IMMUNE_FIREBALL_HITFLAG",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "born": {
            "$type": "MoleMole.Config.ConfigBornByTarget"
          },
          "gadgetID": 42001025,
          "campID": 4001,
          "campTargetType": "Enemy"
        },
        {
          "$type": "MoleMole.Config.KillSelf",
          "otherTargets": {
            "$type": "MoleMole.Config.SelectTargetsByShape",
            "topLimit": 5,
            "shapeName": "CircleR10",
            "campTargetType": "SelfCamp",
            "sizeRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_SLIME_FIRE_IMMUNE_FIREBALL_HITFLAG",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ]
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_Immune_FireBall_RigidBody",
      "onAdded": [
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackSphere",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              }
            },
            "attackInfo": {
              "attackTag": "ExplodeDamage",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Fire",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "ignoreAttackerProperty": true,
                "strikeType": "Blunt",
                "enBreak": 130.0,
                "damageExtra": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                }
              },
              "hitPattern": {
                "onHitEffectName": "",
                "hitLevel": "Air",
                "hitImpulseX": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 480.0
                },
                "hitImpulseY": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 600.0
                },
                "hitImpulseType": "",
                "hitHaltTimeScale": 0.05
              }
            }
          },
          "targetType": "Self"
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Slime_Fire_FireBall_HitGround"
          }
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.KillSelf"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Slime_Fire_Immune_JumpGround_Attack",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByHasElement",
              "element": "Fire"
            }
          ],
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "height": 1.5,
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 3.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Fire",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 50.0
                },
                "strikeType": "Blunt",
                "enBreak": 200.0
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitLevel": "Air",
                "hitImpulseX": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 480.0
                },
                "hitImpulseY": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 600.0
                },
                "hitImpulseType": "",
                "hitHaltTimeScale": 0.01
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.12,
                "shakeTime": 0.15,
                "shakeDistance": 25.0,
                "shakeDir": {
                  "y": -1.0
                }
              }
            }
          },
          "targetType": "Enemy"
        },
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByNot",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHasElement",
                  "element": "Fire"
                }
              ]
            }
          ],
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackCircle",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "height": 1.5,
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.25
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 2.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 100.0
                },
                "overrideByWeapon": true,
                "strikeType": "Blunt",
                "enBreak": 50.0
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitLevel": "Air",
                "hitImpulseX": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 480.0
                },
                "hitImpulseY": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 600.0
                },
                "hitImpulseType": "",
                "hitHaltTimeScale": 0.01
              },
              "forceCameraShake": true,
              "cameraShake": {
                "shakeType": "CustomVector",
                "shakeRange": 0.12,
                "shakeTime": 0.15,
                "shakeDistance": 25.0,
                "shakeDir": {
                  "y": -1.0
                }
              }
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  }
]