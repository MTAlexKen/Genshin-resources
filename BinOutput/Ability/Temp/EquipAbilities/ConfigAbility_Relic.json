[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_FighterAttackUp_Lv5",
      "abilitySpecials": {
        "AttackRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_FighterAttackUp_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AttackRatio"
            }
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_SWORD_ONE_HAND",
                "WEAPON_CLAYMORE",
                "WEAPON_POLE"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relic_FighterAttackUp_Lv5"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_RangerAttackUp_Lv5",
      "abilitySpecials": {
        "AttackRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_RangerAttackUp_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AttackRatio"
            }
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_CATALYST",
                "WEAPON_BOW"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relic_RangerAttackUp_Lv5"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementDamageUpWhenChangeChar_Lv5",
      "abilitySpecials": {
        "ElementDamageUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ElementDamageUpWhenChangeChar_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 10.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElementDamageUp"
            },
            "Actor_WaterAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElementDamageUp"
            },
            "Actor_GrassAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElementDamageUp"
            },
            "Actor_IceAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElementDamageUp"
            },
            "Actor_RockAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElementDamageUp"
            },
            "Actor_ElecAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElementDamageUp"
            },
            "Actor_WindAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElementDamageUp"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAvatarIn": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ElementDamageUpWhenChangeChar_Lv5"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackUpAfterElementBall_Lv5",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByEnergyChangeMixin",
          "elementTypes": [
            "Electric",
            "Fire",
            "Water",
            "Grass",
            "Ice",
            "Wind",
            "Rock",
            "None"
          ],
          "doWhenEnergyMax": true,
          "onGainEnergyByBall": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_AttackUpAfterElementBall_Lv5"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "AttackRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_AttackUpAfterElementBall_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 10.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AttackRatio"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ExtraAtkCritUp",
      "abilitySpecials": {
        "CritRate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ExtraAtkCritUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "bonusCritical": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "CritRate"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ExtraAtkCritUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_GiantKiller",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HPRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_GiantKiller_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "logic": "GreaterOrEqual",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "HPRatio"
                  }
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_GiantKiller_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AbsorbTeamElemResist",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByTeamStatusMixin",
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_ElementAllDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "overrideMapKey": "ElementFireDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "overrideMapKey": "ElementWaterDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "overrideMapKey": "ElementWindDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "overrideMapKey": "ElementElecDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "overrideMapKey": "ElementIceDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "overrideMapKey": "ElementRockDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "overrideMapKey": "ElementGrassDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByCurTeamHasElementType",
                  "elementType": "Fire",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "ElementFireDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByCurTeamHasElementType",
                  "elementType": "Water",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "ElementWaterDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByCurTeamHasElementType",
                  "elementType": "Wind",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "ElementWindDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByCurTeamHasElementType",
                  "elementType": "Electric",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "ElementElecDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByCurTeamHasElementType",
                  "elementType": "Ice",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "ElementIceDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByCurTeamHasElementType",
                  "elementType": "Rock",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "ElementRockDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByCurTeamHasElementType",
                  "elementType": "Grass",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "overrideMapKey": "ElementGrassDefUp"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_ElementAllDefUp"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "ResistUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementFireDefUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementWaterDefUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementWindDefUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementElecDefUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementIceDefUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementRockDefUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementGrassDefUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_ElementAllDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementFireDefUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistUp"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_WaterSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementWaterDefUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistUp"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_WindSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementWindDefUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistUp"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_ElecSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementElecDefUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistUp"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_IceSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementIceDefUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistUp"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_RockSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementRockDefUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistUp"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_GrassSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementGrassDefUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistUp"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AllElemResistUp",
      "abilitySpecials": {
        "ResistUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_AllElemResistUp": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            },
            "Actor_WaterSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            },
            "Actor_WindSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            },
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            },
            "Actor_IceSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            },
            "Actor_RockSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            },
            "Actor_GrassSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AllElemResistUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElemDmgEnhanceElemResist",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_ElemDmgEnhanceElemResist_CD",
            "UNIQUE_Relic_ElemDmgEnhanceElemResist_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "ResistUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CDTime": {
          "type": "float",
          "dynamicValue": 0.01
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ElemDmgEnhanceElemResist_Handler": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement"
                    }
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitDamage",
                  "damage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Fire"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementFireDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Water"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementWaterDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Grass"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementGrassDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Electric"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementElecDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Ice"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementIceDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Wind"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementWindDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Rock"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementRockDefUp"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ElemDmgEnhanceElemResist_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 10.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_ElementFireDefUp": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementWaterDefUp": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementWindDefUp": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WindSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementElecDefUp": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementIceDefUp": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementRockDefUp": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_RockSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementGrassDefUp": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_GrassSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ResistUp"
            }
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "isLimitedProperties": true
        }
      },
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementFireDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementWaterDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementElecDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementIceDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementWindDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementRockDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementGrassDefUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_LowHPGainExtraCritRate",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToPredicateMixin",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetHPRatio",
              "logic": "LesserOrEqual",
              "HPRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HPRatio"
              }
            }
          ],
          "modifierName": "UNIQUE_Relic_LowHPGainExtraCritRate"
        }
      ],
      "abilitySpecials": {
        "CritRate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HPRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_LowHPGainExtraCritRate": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_CriticalDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "CritRate"
            }
          },
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AtkAndExtraAtkUp",
      "abilitySpecials": {
        "DmgRate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_AtkAndExtraAtkUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "DmgRate"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AtkAndExtraAtkUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_SkillEnhanceNormalAtkAndExtraAtk",
      "abilitySpecials": {
        "duration": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "stack": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "DmgRate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerSkill": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk"
                }
              ],
              "OIIDACCCPKO": 0.2
            }
          ]
        },
        "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "stack"
            }
          },
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "duration"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "DmgRate"
              }
            }
          ],
          "state": "AttackUp"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionGainExtraElemMasteryForTeam",
      "abilitySpecials": {
        "duration": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElemMastery": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionGainExtraElemMasteryForTeam_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Explode",
                "Stream",
                "Burning",
                "Melt",
                "Freeze",
                "Shock",
                "Superconductor",
                "SwirlFire",
                "SwirlWater",
                "SwirlElectric",
                "SwirlIce",
                "CrystallizeFire",
                "CrystallizeWater",
                "CrystallizeElectric",
                "CrystallizeIce"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.RemoveUniqueModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "LesserOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 40.0
                      }
                    }
                  ],
                  "modifierName": "UNIQUE_ReactionGainExtraElemMasteryForTeam"
                },
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "LesserOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 40.0
                      }
                    }
                  ],
                  "modifierName": "UNIQUE_ReactionGainExtraElemMasteryForTeam"
                }
              ]
            }
          ]
        },
        "UNIQUE_ReactionGainExtraElemMasteryForTeam": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "duration"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElemMasteryDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElemMastery"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionGainExtraElemMasteryForTeam_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_SkillDamageUp",
      "abilitySpecials": {
        "DamagePer": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_SkillDamageUp_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "DamagePer"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_SkillDamageUp_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_KillingRefreshSkill",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_KillingRefreshSkill",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_KillingRefreshSkill_CD",
            "UNIQUE_Relic_KillingRefreshSkill_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "CDTime": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_KillingRefreshSkill_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByKillingMixin",
              "detectWindow": 0.6,
              "onKill": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "target": "Other",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByEntityTypes",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.Randomed",
                      "chance": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "Rate"
                      },
                      "successActions": [
                        {
                          "$type": "MoleMole.Config.ApplyModifier",
                          "modifierName": "UNIQUE_Relic_KillingRefreshSkill"
                        },
                        {
                          "$type": "MoleMole.Config.AddGlobalValue",
                          "value": {
                            "isFormula": false,
                            "isDynamic": false,
                            "fixedValue": -1.0
                          },
                          "key": "_ABILITY_Relic_KillingRefreshSkill",
                          "useLimitRange": true,
                          "maxValue": {
                            "isFormula": false,
                            "isDynamic": false,
                            "fixedValue": -1.0
                          },
                          "minValue": {
                            "isFormula": false,
                            "isDynamic": false,
                            "fixedValue": -1.0
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_KillingRefreshSkill_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_KillingRefreshSkill",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_KillingRefreshSkill"
            }
          ]
        },
        "UNIQUE_Relic_KillingRefreshSkill": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ModifyAvatarSkillCD",
              "skillSlot": [
                2
              ],
              "cdRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_UltGainEnergyForTeam",
      "abilitySpecials": {
        "EnergyAmount": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_UltGainEnergyForTeam_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerUltimateSkill": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetType",
                      "isTarget": false
                    },
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "LesserOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 40.0
                      }
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_UltGainEnergyForTeam"
                },
                {
                  "$type": "MoleMole.Config.AddElementDurability",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetType",
                      "isTarget": false
                    },
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "LesserOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 40.0
                      }
                    }
                  ],
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  },
                  "modifierName": "UNIQUE_Relic_UltGainEnergyForTeam",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  }
                }
              ],
              "OIIDACCCPKO": 0.2
            }
          ]
        },
        "UNIQUE_Relic_UltGainEnergyForTeam": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 6.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ReviveElemEnergyMixin",
              "period": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              },
              "baseEnergy": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "EnergyAmount"
              },
              "ratio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_UltGainEnergyForTeam_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ChestHealSelf",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByEventMixin",
          "type": "Current",
          "onEvent": "ChestOpen",
          "actions": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_Relic_ChestHealSelf"
            }
          ],
          "costEnergyDeltaName": ""
        }
      ],
      "abilitySpecials": {
        "HealDuration": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HealInterval": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HealRatio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura_Delay": {
          "type": "float",
          "dynamicValue": 0.5
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ChestHealSelf": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "HealDuration"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "Dura_Delay"
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "HealInterval"
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.HealHP",
              "amountByTargetMaxHPRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HealRatio"
              }
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_CoinHealSelf",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByEventMixin",
          "type": "Current",
          "onEvent": "PickItem",
          "pickItemConfigIDs": [
            70590011
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_Relic_CoinHealSelf"
            }
          ],
          "costEnergyDeltaName": ""
        }
      ],
      "abilitySpecials": {
        "HealAmount": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_CoinHealSelf": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.HealHP",
              "amount": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HealAmount"
              }
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_RestoreEnergyGainExtraEnergyForTeam",
      "abilitySpecials": {
        "EnergyAmount": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_RestoreEnergyGainExtraEnergyForTeam_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByEnergyChangeMixin",
              "elementTypes": [
                "Electric",
                "Fire",
                "Water",
                "Grass",
                "Ice",
                "Wind",
                "Rock"
              ],
              "doWhenEnergyMax": true,
              "onGainEnergyByBall": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "LesserOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 40.0
                      }
                    }
                  ],
                  "modifierName": "UNIQUE_CheckBoworMage"
                }
              ]
            }
          ]
        },
        "UNIQUE_CheckBoworMage": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 3.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAvatarWeaponType",
                  "weaponTypes": [
                    "WEAPON_CATALYST",
                    "WEAPON_BOW"
                  ]
                }
              ],
              "modifierName": "RestoreEnergyGainExtraEnergyForTeam"
            }
          ]
        },
        "RestoreEnergyGainExtraEnergyForTeam": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.15
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ReviveElemEnergy",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "EnergyAmount"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_RestoreEnergyGainExtraEnergyForTeam_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_UltHealSelf",
      "abilitySpecials": {
        "HealRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_UltHealSelf_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerUltimateSkill": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_UltHealSelf"
                }
              ],
              "OIIDACCCPKO": 0.2
            }
          ]
        },
        "UNIQUE_Relic_UltHealSelf": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.HealHP",
              "amountByTargetMaxHPRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HealRatio"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_UltHealSelf_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_CriticUpAgainstIceAndFrozen",
      "abilitySpecials": {
        "Rate1": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Rate2": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_CriticUpAgainstIceAndFrozen_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "bonusCritical": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Rate1"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByAny",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "element": "Ice"
                    },
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "element": "Frozen"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "bonusCritical": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Rate2"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHasAbilityState",
                  "abilityState": "ElementFreeze"
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_CriticUpAgainstIceAndFrozen_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_DamageUpAgainstElectric",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_DamageUpAgainstElectric_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByAny",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "element": "Electric"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_DamageUpAgainstElectric_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_DamageUpAgainstFireAndBurning",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_DamageUpAgainstFireAndBurning_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByAny",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "element": "Fire"
                    },
                    {
                      "$type": "MoleMole.Config.ByHasAbilityState",
                      "abilityState": "ElementBurning"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_DamageUpAgainstFireAndBurning_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_SkillEnhanceCured",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerSkill": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            }
          ],
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            }
          ],
          "OIIDACCCPKO": 0.2
        }
      ],
      "abilitySpecials": {
        "HealUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_SkillEnhanceCured": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_HealedAddDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HealUp"
            }
          },
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_MeleeAttackUp",
      "abilitySpecials": {
        "DmgRate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_MeleeAttackUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "DmgRate"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_SWORD_ONE_HAND",
                "WEAPON_CLAYMORE",
                "WEAPON_POLE"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relic_MeleeAttackUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionWindEnhance",
      "abilitySpecials": {
        "ReactionUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ResistDown": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Minus": {
          "type": "float",
          "dynamicValue": -1.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionWindEnhance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlFire"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementFireDefDown"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlWater"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementWaterDefDown"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlElectric"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementElecDefDown"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlIce"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementIceDefDown"
                }
              ]
            }
          ],
          "properties": {
            "Actor_ElemReactSwirlFireDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactSwirlWaterDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactSwirlIceDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactSwirlElectricDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            }
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "Swirl_FireDamage",
                    "Swirl_WaterDamage",
                    "Swirl_ElectricDamage",
                    "Swirl_IceDamage",
                    "Self_Swirl_FireDamage",
                    "Self_Swirl_WaterDamage",
                    "Self_Swirl_ElectricDamage",
                    "Self_Swirl_IceDamage"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Fire"
                    },
                    {
                      "$type": "MoleMole.Config.ByEntityTypes",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementFireDefDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Water"
                    },
                    {
                      "$type": "MoleMole.Config.ByEntityTypes",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementWaterDefDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Electric"
                    },
                    {
                      "$type": "MoleMole.Config.ByEntityTypes",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementElecDefDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHitElement",
                      "element": "Ice"
                    },
                    {
                      "$type": "MoleMole.Config.ByEntityTypes",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementIceDefDown"
                }
              ]
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementFireDefDown": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistDown"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Minus"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementWaterDefDown": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistDown"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Minus"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementIceDefDown": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistDown"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Minus"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementElecDefDown": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecSubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ResistDown"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Minus"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionWindEnhance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relci_RangerAttackUp",
      "abilitySpecials": {
        "DmgRate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relci_RangerAttackUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "DmgRate"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByAvatarWeaponType",
              "weaponTypes": [
                "WEAPON_CATALYST",
                "WEAPON_BOW"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relci_RangerAttackUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionIceEnhance",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_ReactionIceEnhance_Stack"
            }
          ],
          "OIIDACCCPKO": 0.2
        }
      ],
      "abilitySpecials": {
        "ReactionUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "MeltUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "IceUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionIceEnhance": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElemReactSConductDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactMeltDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "MeltUp"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ReactionIceEnhance_Stack": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "IceUp"
            }
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionIceEnhance"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionElectricEnhance",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_ReactionElectricEnhance",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_ReactionElectricEnhance_CD",
            "UNIQUE_Relic_ReactionElectricEnhance_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "ReactionUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CDTime": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionElectricEnhance": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElemReactExplodeDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactSConductDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactElectricDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ReactionElectricEnhance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Explode",
                "Superconductor",
                "Shock"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_ReactionElectricEnhance_CDReduce"
                },
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -1.0
                  },
                  "key": "_ABILITY_Relic_ReactionElectricEnhance",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -1.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -1.0
                  }
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ReactionElectricEnhance_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_ReactionElectricEnhance",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Relic_ReactionElectricEnhance_CDReduce": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ModifyAvatarSkillCD",
              "skillSlot": [
                2
              ],
              "cdDelta": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_Ability_Relic_CDCount",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionElectricEnhance"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionFireEnhance",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerSkill": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_ReactionFireEnhance_Stack"
            }
          ],
          "OIIDACCCPKO": 0.2
        }
      ],
      "abilitySpecials": {
        "ReactionUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "MeltUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "FireUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ExtraPercent": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionFireEnhance": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElemReactExplodeDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactBurnDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ReactionUp"
            },
            "Actor_ElemReactSteamDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "MeltUp"
            },
            "Actor_ElemReactMeltDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "MeltUp"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ReactionFireEnhance_Stack": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.0
            }
          },
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "FireUp"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ExtraPercent"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionFireEnhance"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementalBurstUp",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Burst"
          ],
          "damagePercentageRatio": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Rate"
          },
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_TeamAtkupAfterElementalBurst",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_TeamAtkupAfterElementalBurst"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_TeamAtkupAfterElementalBurst"
            }
          ],
          "OIIDACCCPKO": 0.2
        }
      ],
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Time": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_TeamAtkupAfterElementalBurst": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Time"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true,
          "buffID": 10001
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_KillEnhanceExtraAtk",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_KillEnhanceExtraAtk",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_KillEnhanceExtraAtk_CD",
            "UNIQUE_Relic_KillEnhanceExtraAtk_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "StaminaReduce": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CDTime": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_KillEnhanceExtraAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByKillingMixin",
              "detectWindow": 0.6,
              "onKill": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "target": "Other",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByEntityTypes",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "UNIQUE_Relic_KillEnhanceExtraAtk"
                    },
                    {
                      "$type": "MoleMole.Config.AddGlobalValue",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -1.0
                      },
                      "key": "_ABILITY_Relic_KillEnhanceExtraAtk",
                      "useLimitRange": true,
                      "maxValue": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -1.0
                      },
                      "minValue": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -1.0
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_KillEnhanceExtraAtk": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.AttachToStateIDMixin",
              "stateIDs": [
                "ExtraAttack",
                "ExtraAttack1",
                "ExtraAttack2",
                "ExtraAttack3",
                "ExtraAttack_BS",
                "ExtraAttack_Charge",
                "Attack01",
                "Attack02",
                "Attack03",
                "Attack04",
                "Attack05",
                "Attack06",
                "Gandalfr_Attack01",
                "Gandalfr_Attack02",
                "Gandalfr_Attack03",
                "Gandalfr_Attack04",
                "Gandalfr_Attack05",
                "Gandalfr_Attack06",
                "Gandalfr_ExtraAttack",
                "Katana_Attack01",
                "Katana_Attack02",
                "Katana_Attack03",
                "Katana_Attack04",
                "Katana_Attack05",
                "Katana_Attack06",
                "Katana_ExtraAttack"
              ],
              "modifierName": "UNIQUE_Relic_KillEnhanceExtraAtk_StaminaCost"
            }
          ],
          "state": "AttackUp"
        },
        "UNIQUE_Relic_KillEnhanceExtraAtk_StaminaCost": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_CostStaminaRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "StaminaReduce"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_KillEnhanceExtraAtk_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_KillEnhanceExtraAtk",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_Relic_KillEnhanceExtraAtk"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_FireResistance",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_FireResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Fire",
              "durationRatio": 0.4
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_FireResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_WaterResistance",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_WaterResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Water",
              "durationRatio": 0.4
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_WaterResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElectricResistance",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_EletricResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Electric",
              "durationRatio": 0.4
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_EletricResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_WindResistance",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_WindResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Wind",
              "durationRatio": 0.4
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_WindResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_IceResistance",
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_IceResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Ice",
              "durationRatio": 0.4
            },
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Frozen",
              "durationRatio": 0.4
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_IceResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementDmgUpAfterCrystalShield",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Fire"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Water"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Grass"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Electric"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Ice"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Wind"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Rock"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_GrassAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WindAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_RockAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ShieldEnhanceAtk",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_Ability_Relic_ShieldEnhanceAtk_Check",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_ShieldEnhanceAtk_NoBuff",
            "UNIQUE_Relic_ShieldEnhanceAtk_HasBuff"
          ]
        },
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "NormalAttack_01",
            "NormalAttack_02",
            "NormalAttack_03",
            "NormalAttack_04",
            "NormalAttack_05",
            "NormalAttack_06",
            "ExtraAttack"
          ],
          "damagePercentageRatio": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Rate"
          },
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            },
            {
              "$type": "MoleMole.Config.ByHasShield",
              "target": "Self",
              "type": "All"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ShieldEnhanceAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.Predicated",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByHasShield",
                  "type": "All"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "key": "_Ability_Relic_ShieldEnhanceAtk_Check",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "key": "_Ability_Relic_ShieldEnhanceAtk_Check",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ShieldEnhanceAtk_NoBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "modifierName": "UNIQUE_Relic_ShieldEnhanceAtk_HasBuff"
            }
          ]
        },
        "UNIQUE_Relic_ShieldEnhanceAtk_HasBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "state": "AttackUp"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ShieldEnhanceAtk_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_WaterSkillEnhanceNormalAtkAndExtraAtk",
      "abilitySpecials": {
        "duration": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "stack": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "DmgRate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerSkill": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk"
                }
              ],
              "OIIDACCCPKO": 0.2
            }
          ]
        },
        "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "stack"
            }
          },
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "duration"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "DmgRate"
              }
            }
          ],
          "state": "AttackUp"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ShieldCostUpWhenElementalArtHit",
      "abilitySpecials": {
        "AttackRate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ShieldCost": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Time": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CDTime": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "doOffStage": true,
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "Elemental_Art",
                    "Elemental_Art_Hold",
                    "Elemental_Art_Extra"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "doOffStage": true,
                  "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_ApplyBuff"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_ApplyBuff": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Buff"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 40.0
                  }
                }
              ],
              "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Buff"
            }
          ]
        },
        "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Buff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Time"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AttackRate"
            },
            "Actor_ShieldCostMinusRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ShieldCost"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 100.0
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff1",
            "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff2"
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CDTime": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ExtraRate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "Elemental_Art",
                    "Elemental_Art_Hold",
                    "Elemental_Art_Extra"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_AddGlobalvalue"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_AddGlobalvalue": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_BuffTime"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 2.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_BuffTime": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff1": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff2": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Rate"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 2.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_PhysicalAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ExtraRate"
            }
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Handler"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "doOffStage": true,
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_NormalDamageUpIfCostEnergy",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_NormalDamageUpIfCostEnergy_Check",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_NormalDamageUpIfCostEnergy_CD",
            "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "EnergyCost": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "DamageUp": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Time": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerSkill": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "doOffStage": true,
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByEnergy",
                      "logic": "GreaterOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "EnergyCost"
                      }
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.ReviveElemEnergy",
                      "doOffStage": true,
                      "value": {
                        "isFormula": true,
                        "formula": [
                          {
                            "isOperator": false,
                            "isDynamic": false,
                            "fixedValue": 0.0
                          },
                          {
                            "isOperator": false,
                            "isDynamic": true,
                            "dynamicKey": "EnergyCost"
                          },
                          {
                            "isOperator": true,
                            "operation": "Sub"
                          }
                        ]
                      }
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "doOffStage": true,
                      "modifierName": "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Buff"
                    }
                  ]
                }
              ],
              "OIIDACCCPKO": 0.2
            }
          ]
        },
        "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Buff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Time"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack",
                "FallingAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "DamageUp"
              }
            }
          ],
          "state": "AttackUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_NormalDamageUpIfCostEnergy_Check",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_NormalDamageUpIfCostEnergy_Check",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Relic_NormalDamageUpIfCostEnergy_CD": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementalBurstUpByChargeEfficiency",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Burst"
          ],
          "damagePercentageRatio": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "Ratio"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              }
            ]
          },
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Self",
              "key": "_ABILITY_Relic_ElementalBurstUpByChargeMax",
              "value": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "Ratio"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              },
              "compareType": "MoreThan"
            },
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Self",
              "key": "_ABILITY_Relic_ElementalBurstUpByChargeZero",
              "value": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "Ratio"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              },
              "compareType": "LessAndEqual"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Burst"
          ],
          "damagePercentageRatio": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "MaxDamageUp"
          },
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Self",
              "key": "_ABILITY_Relic_ElementalBurstUpByChargeMax",
              "value": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "Ratio"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              },
              "compareType": "LessAndEqual"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Ratio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "MaxDamageUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "MaxDamageUp"
          },
          "key": "_ABILITY_Relic_ElementalBurstUpByChargeMax",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_Relic_ElementalBurstUpByChargeZero",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementalBurstGainTeamEnergy",
      "abilitySpecials": {
        "Energy": {
          "type": "float",
          "dynamicValue": 2.0
        },
        "CDTime": {
          "type": "float",
          "dynamicValue": 2.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_CheckElementalBurstAttack": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "doOffStage": true,
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "Elemental_Burst"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "AllPlayerAvatars",
                  "doOffStage": true,
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "LesserOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 40.0
                      }
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementalBurstAttackGainEnergy"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ElementalBurstAttackGainEnergy": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "doOffStage": true,
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Weapon_TriggerGreen"
              }
            },
            {
              "$type": "MoleMole.Config.ReviveElemEnergy",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Energy"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_CheckElementalBurstAttack"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_RaiseDefenceAndRock",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_Defender_Level",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 10.0
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_DefenderBuff0",
            "UNIQUE_Relic_DefenderBuff1",
            "UNIQUE_Relic_DefenderBuff2",
            "UNIQUE_Relic_DefenderBuff3",
            "UNIQUE_Relic_DefenderBuff4"
          ]
        }
      ],
      "abilitySpecials": {
        "Levelup_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "BackTime": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "RockRate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Time": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_Defender_NotLocalAvatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "BackTime"
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByIsLocalAvatar"
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_Relic_Defender_Levelup"
            }
          ]
        },
        "UNIQUE_Relic_Defender_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByHitElement",
                  "element": "Rock"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "UNIQUE_Relic_Defender_Levelup"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_Defender_Levelup": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Levelup_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_Relic_Defender_Level",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.5
                  },
                  "compareType": "LessAndEqual"
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Rock_NumberFlash"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_Defender_Level",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_Defender_Level_Timer"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_Defender_Level_Timer"
            }
          ]
        },
        "UNIQUE_Relic_Defender_Level_Timer": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Time"
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ABILITY_Relic_Defender_Level",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.5
                  },
                  "compareType": "MoreThan"
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Rock_NumberBehit"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_Defender_Level",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Relic_DefenderBuff0": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Rock_Number0"
              }
            }
          ]
        },
        "UNIQUE_Relic_DefenderBuff1": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_DefenceRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rate"
            },
            "Actor_RockAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "RockRate"
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Rock_Number1"
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_DefenderBuff2": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_DefenceRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Rate"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 2.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_RockAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "RockRate"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 2.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Rock_Number2"
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_DefenderBuff3": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_DefenceRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Rate"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 3.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_RockAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "RockRate"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 3.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Rock_Number3"
              }
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_DefenderBuff4": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_DefenceRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Rate"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 4.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            },
            "Actor_RockAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "RockRate"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 4.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Rock_Number4"
              }
            }
          ],
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_Defender_Handler"
        },
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_Defender_NotLocalAvatar"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "doOffStage": true,
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_Relic_Defender_Level",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_Defender_Level_Timer"
        }
      ],
      "onAvatarOut": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_Defender_NotLocalAvatar"
        },
        {
          "$type": "MoleMole.Config.AttachModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_Defender_NotLocalAvatar"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_HealAndHolyNova",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_HealAndHolyNova_State",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_HealAndHolyNova_CD",
            "UNIQUE_Relic_HealAndHolyNova_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "Time": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HealRatio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "DamageRatio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CDTime": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "MaxHealAmount": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "TriggerType": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HealAmount": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_HealAndHolyNova_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "OBPAPMFJEPF": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "doOffStage": true,
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Avatar"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
                  "doOffStage": true,
                  "key": "_ABILITY_Relic_HealAndHolyNova_HealSum"
                },
                {
                  "$type": "MoleMole.Config.TriggerAbility",
                  "doOffStage": true,
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    },
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "MoreThan"
                    }
                  ],
                  "abilityName": "Relic_HealAndHolyNova",
                  "abilitySpecials": {
                    "TriggerType": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    }
                  }
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_HealAndHolyNova": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Time"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "CurTeamAvatars",
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetType",
                      "targetType": "Caster"
                    }
                  ]
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Caster",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_HealAndHolyNova_BallEffect"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Caster",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_HealAndHolyNova_BallEffect"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "target": "Caster",
              "abilityName": "Relic_HealAndHolyNova",
              "abilitySpecials": {
                "TriggerType": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Caster",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_State",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Relic_HealAndHolyNova_BallEffect": {
          "timeScale": "Level",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "Time"
              },
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 0.5
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalDir",
              "target": "CurLocalAvatar",
              "doOffStage": true,
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir",
              "setTarget": false
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir_0",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir_1",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir_2",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValueToTarget",
              "doOffStage": true,
              "srcTarget": "Self",
              "dstTarget": "Team",
              "srcKey": "_ABILITY_Relic_HealAndHolyNova_Dir_0",
              "dstKey": "_ABILITY_Relic_HealAndHolyNova_Dir_0"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValueToTarget",
              "doOffStage": true,
              "srcTarget": "Self",
              "dstTarget": "Team",
              "srcKey": "_ABILITY_Relic_HealAndHolyNova_Dir_1",
              "dstKey": "_ABILITY_Relic_HealAndHolyNova_Dir_1"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValueToTarget",
              "doOffStage": true,
              "srcTarget": "Self",
              "dstTarget": "Team",
              "srcKey": "_ABILITY_Relic_HealAndHolyNova_Dir_2",
              "dstKey": "_ABILITY_Relic_HealAndHolyNova_Dir_2"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "Team",
              "doOffStage": true,
              "modifierName": "Relic_HealAndHolyNova_BallEffect_Team"
            }
          ],
          "OBPAPMFJEPF": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "doOffStage": true,
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Avatar"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.SendEffectTrigger",
                  "target": "Team",
                  "doOffStage": true,
                  "parameter": "Blink",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Relic_Maria_Animator"
                  }
                }
              ]
            }
          ]
        },
        "Relic_HealAndHolyNova_BallEffect_Team": {
          "stacking": "Overlap",
          "modifierName": "",
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "Time"
              },
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 0.5
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "doOffStage": true,
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Maria_Animator"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByGlobalValue",
                  "directionKey": "_ABILITY_Relic_HealAndHolyNova_Dir"
                }
              }
            }
          ]
        },
        "UNIQUE_Relic_HealAndHolyNova_CD": {
          "timeScale": "Level",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "CDTime"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "Time"
              },
              {
                "isOperator": true,
                "operation": "Sub"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_State",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "target": "Team",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "compareType": "NoneOrEqual"
            }
          ],
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_HealAndHolyNova_BallEffect"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.Predicated",
          "doOffStage": true,
          "targetPredicates": [
            {
              "$type": "MoleMole.Config.ByTargetOverrideMapValue",
              "logic": "Equal",
              "targetAbilityName": "",
              "targetKey": "TriggerType",
              "targetValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "successActions": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "Team",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_HealAndHolyNova"
            }
          ],
          "failActions": [
            {
              "$type": "MoleMole.Config.SetGlobalPos",
              "target": "CurLocalAvatar",
              "doOffStage": true,
              "key": "_ABILITY_Relic_HealAndHolyNova_Position",
              "setTarget": false
            },
            {
              "$type": "MoleMole.Config.SendEffectTrigger",
              "target": "Team",
              "doOffStage": true,
              "parameter": "Burst",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Relic_Maria_Animator"
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "doOffStage": true,
              "globalValueKey": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "overrideMapKey": "HealAmount"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HealAmount"
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "MaxHealAmount"
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "doOffStage": true,
              "globalValueKey": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "overrideMapKey": "HealAmount"
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "target": "Caster",
              "doOffStage": true,
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "ignoreMassive": true,
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornByGlobalValue",
                    "positionKey": "_ABILITY_Relic_HealAndHolyNova_Position",
                    "directionKey": ""
                  },
                  "height": 2.0,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 6.0
                  }
                },
                "attackInfo": {
                  "attackTag": "RelicSkill",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 100.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 0.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "DamageRatio"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "HealAmount"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV1",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "Enemy"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "CurTeamAvatars",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_HeaQAtest",
      "modifiers": {
        "Relic_HeaQAtest": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "OBPAPMFJEPF": [
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "doOffStage": true,
              "key": "Add_HealSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "doOffStage": true,
              "key": "Add_RealHealSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "doOffStage": true,
              "type": "Set",
              "key": "Set_onHealQATest"
            },
            {
              "$type": "MoleMole.Config.GetHPHealedToGlobalValue",
              "doOffStage": true,
              "type": "Set",
              "key": "Set_onHealRealQATest"
            }
          ],
          "BIFODANLEDO": [
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "doOffStage": true,
              "key": "Add_onBeingHealedSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHPHealedToGlobalValue",
              "doOffStage": true,
              "key": "Add_onBeingHealedRealSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "doOffStage": true,
              "type": "Set",
              "key": "Set_onBeingHealedQATest"
            },
            {
              "$type": "MoleMole.Config.GetHPHealedToGlobalValue",
              "doOffStage": true,
              "type": "Set",
              "key": "Set_onBeingHealedRealQATest"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Relic_HeaQAtest"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Add_HealSumQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Add_RealHealSumQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Set_onHealQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Set_onHealRealQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Add_onBeingHealedSumQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Add_onBeingHealedRealSumQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Set_onBeingHealedQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "Set_onBeingHealedRealQATest",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackUpWhenHPdown",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_AttackUp_BurstBuff"
            }
          ],
          "OIIDACCCPKO": 0.2
        }
      ],
      "abilitySpecials": {
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Base_Ratio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Ratio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "MaxLevel": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "TriggerCD": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_AttackUp_BurstBuff": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByEventMixin",
              "onEvent": "HPDown",
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "UNIQUE_Relic_AttackUpWhenHPdown_TriggerCD"
                }
              ],
              "costEnergyDeltaName": ""
            },
            {
              "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
              "defaultGlobalValueOnCreate": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 2.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 3.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 4.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 5.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 6.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 7.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 8.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 9.5
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 10.5
                }
              ],
              "modifierNameSteps": [
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff1",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff2",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff3",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff4",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff5",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff6",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff7",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff8",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff9",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff10"
              ]
            }
          ],
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Base_Ratio"
            }
          },
          "state": "AttackUp"
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_TriggerCD": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "TriggerCD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "MaxLevel"
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff1": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Ratio"
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff2": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 2.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff3": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 3.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff4": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 4.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff5": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 5.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff6": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 6.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff7": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 7.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff8": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 8.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff9": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 9.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff10": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "Ratio"
                },
                {
                  "isOperator": false,
                  "isDynamic": false,
                  "fixedValue": 10.0
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onAvatarOut": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_AttackUp_BurstBuff"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackWithExtraDamage",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_AttackWithExtraDamage",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_AttackWithExtraDamage_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "Base_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "AttackPercentage": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Keep_Time": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Extra_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Trigger_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Relic_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ChanceRate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Dura": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Relic_AttackWithExtraDamage_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.Randomed",
              "doOffStage": true,
              "chance": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "Base_Rate"
              },
              "successActions": [
                {
                  "$type": "MoleMole.Config.TriggerAbility",
                  "doOffStage": true,
                  "abilityName": "Relic_AttackWithExtraDamage"
                },
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "doOffStage": true,
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "overrideMapKey": "ChanceRate"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "doOffStage": true,
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Base_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Extra_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "ChanceRate"
                      },
                      {
                        "isOperator": true,
                        "operation": "Mul"
                      },
                      {
                        "isOperator": true,
                        "operation": "Add"
                      }
                    ]
                  },
                  "key": "_ABILITY_Relic_AttackWithExtraDamage_Chance",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "doOffStage": true,
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -1.0
                  },
                  "key": "_ABILITY_Relic_AttackWithExtraDamage",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "doOffStage": true,
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "ChanceRate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": false,
                        "fixedValue": 1.0
                      },
                      {
                        "isOperator": true,
                        "operation": "Add"
                      }
                    ]
                  },
                  "overrideMapKey": "ChanceRate"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "doOffStage": true,
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Base_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Extra_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "ChanceRate"
                      },
                      {
                        "isOperator": true,
                        "operation": "Mul"
                      },
                      {
                        "isOperator": true,
                        "operation": "Add"
                      }
                    ]
                  },
                  "key": "_ABILITY_Relic_AttackWithExtraDamage_Chance",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            }
          ],
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "NormalAttack_01",
                    "NormalAttack_02",
                    "NormalAttack_03",
                    "NormalAttack_04",
                    "NormalAttack_05",
                    "NormalAttack_06"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_Trigger"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_AttackWithExtraDamage_Trigger": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Trigger_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.Randomed",
              "chance": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "Base_Rate"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "Extra_Rate"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "ChanceRate"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": true,
                    "operation": "Add"
                  }
                ]
              },
              "successActions": [
                {
                  "$type": "MoleMole.Config.TriggerAbility",
                  "abilityName": "Relic_AttackWithExtraDamage"
                },
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "overrideMapKey": "ChanceRate"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Base_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Extra_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "ChanceRate"
                      },
                      {
                        "isOperator": true,
                        "operation": "Mul"
                      },
                      {
                        "isOperator": true,
                        "operation": "Add"
                      }
                    ]
                  },
                  "key": "_ABILITY_Relic_AttackWithExtraDamage_Chance",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -1.0
                  },
                  "key": "_ABILITY_Relic_AttackWithExtraDamage",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "ChanceRate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": false,
                        "fixedValue": 1.0
                      },
                      {
                        "isOperator": true,
                        "operation": "Add"
                      }
                    ]
                  },
                  "overrideMapKey": "ChanceRate"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Base_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "Extra_Rate"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "ChanceRate"
                      },
                      {
                        "isOperator": true,
                        "operation": "Mul"
                      },
                      {
                        "isOperator": true,
                        "operation": "Add"
                      }
                    ]
                  },
                  "key": "_ABILITY_Relic_AttackWithExtraDamage_Chance",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_AttackWithExtraDamage": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Dura"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "damageExtra": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "FIGHT_PROP_CUR_ATTACK"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "AttackPercentage"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            }
          ],
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "doOffStage": true,
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "NormalAttack_01",
                    "NormalAttack_02",
                    "NormalAttack_03",
                    "NormalAttack_04",
                    "NormalAttack_05",
                    "NormalAttack_06"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitDamage",
                  "damage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "doOffStage": true,
                  "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CountDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "doOffStage": true,
                  "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CD"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_AttackWithExtraDamage_CountDown": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Keep_Time"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Keep_Time"
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_AttackWithExtraDamage"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_AttackWithExtraDamage"
            }
          ],
          "onThinkIntervalIsFixedUpdate": true
        },
        "UNIQUE_Relic_AttackWithExtraDamage_CD": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Relic_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Relic_CD"
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Caster",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_ABILITY_Relic_AttackWithExtraDamage",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "doOffStage": true,
              "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CD"
            }
          ],
          "onThinkIntervalIsFixedUpdate": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetOverrideMapValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "overrideMapKey": "ChanceRate"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_ABILITY_Relic_AttackWithExtraDamage",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CD"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CountDown"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "doOffStage": true,
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_Trigger"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage"
        }
      ],
      "isDynamicAbility": true
    }
  }
]