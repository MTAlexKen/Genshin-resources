[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Creature_Water",
      "modifiers": {
        "RogueDungeon_Skill_Creature_Water_KILL": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR40",
                "campTargetType": "AllExceptSelf",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "doOffStage": true,
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget",
                    "Field",
                    "Bullet"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "SceneObj_RogueDungeon_Creature_Water",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "Activity_RogueDungeon_Skill_Creature_Water_Kill"
            }
          ]
        },
        "Activity_RogueDungeon_Skill_Creature_Water_Kill": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            },
            {
              "$type": "MoleMole.Config.DebugLog",
              "content": "##???"
            }
          ]
        },
        "UNIQUE_RogueDungeon_Skill_Creature_Water": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.9
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "ownerIs": "Team",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 70310112,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "modifierName": "RogueDungeon_Skill_Creature_Water_KILL"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "doOffStage": true,
          "modifierName": "UNIQUE_RogueDungeon_Skill_Creature_Water"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill01",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Creature_Ice",
      "modifiers": {
        "RogueDungeon_Skill_Creature_Ice_KILL": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR40",
                "campTargetType": "AllExceptSelf",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget",
                    "Field",
                    "Bullet"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "SceneObj_RogueDungeon_Creature_Ice",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "Activity_RogueDungeon_Skill_Creature_Ice_Kill"
            }
          ]
        },
        "Activity_RogueDungeon_Skill_Creature_Ice_Kill": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "UNIQUE_RogueDungeon_Skill_Creature_Ice": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.9
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "ownerIs": "Team",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 70310113,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "modifierName": "RogueDungeon_Skill_Creature_Ice_KILL"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "doOffStage": true,
          "modifierName": "UNIQUE_RogueDungeon_Skill_Creature_Ice"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill01",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Creature_Wind",
      "modifiers": {
        "RogueDungeon_Skill_Creature_Wind_KILL": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR40",
                "campTargetType": "AllExceptSelf",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget",
                    "Field",
                    "Bullet"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "SceneObj_RogueDungeon_Creature_Wind",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "Activity_RogueDungeon_Skill_Creature_Wind_Kill"
            }
          ]
        },
        "Activity_RogueDungeon_Skill_Creature_Wind_Kill": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "UNIQUE_RogueDungeon_Skill_Creature_Wind": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.9
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "ownerIs": "Team",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 70310114,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "modifierName": "RogueDungeon_Skill_Creature_Wind_KILL"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "doOffStage": true,
          "modifierName": "UNIQUE_RogueDungeon_Skill_Creature_Wind"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill01",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Rune_Fire",
      "modifiers": {
        "RogueDungeon_Skill_Rune_Fire_KILL": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR40",
                "campTargetType": "AllExceptSelf",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget",
                    "Field",
                    "Bullet"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "SceneObj_RogueDungeon_Rune_Fire",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "Activity_RogueDungeon_Skill_Rune_Fire_Kill"
            }
          ]
        },
        "Activity_RogueDungeon_Skill_Rune_Fire_Kill": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "UNIQUE_RogueDungeon_Skill_Rune_Fire": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.9
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "ownerIs": "Team",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 70310115,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "modifierName": "RogueDungeon_Skill_Rune_Fire_KILL"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "doOffStage": true,
          "modifierName": "UNIQUE_RogueDungeon_Skill_Rune_Fire"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill01",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Rune_Electric",
      "modifiers": {
        "RogueDungeon_Skill_Rune_Electric_KILL": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR40",
                "campTargetType": "AllExceptSelf",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget",
                    "Field",
                    "Bullet"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "SceneObj_RogueDungeon_Rune_Electric",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "Activity_RogueDungeon_Skill_Rune_Electric_Kill"
            }
          ]
        },
        "Activity_RogueDungeon_Skill_Rune_Electric_Kill": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "UNIQUE_RogueDungeon_Skill_Rune_Electric": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.9
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "ownerIs": "Team",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 70310116,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "modifierName": "RogueDungeon_Skill_Rune_Electric_KILL"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "doOffStage": true,
          "modifierName": "UNIQUE_RogueDungeon_Skill_Rune_Electric"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill01",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Rune_Wind",
      "modifiers": {
        "RogueDungeon_Skill_Rune_Wind_KILL": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR40",
                "campTargetType": "AllExceptSelf",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget",
                    "Field",
                    "Bullet"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "SceneObj_RogueDungeon_Rune_Wind",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "Activity_RogueDungeon_Skill_Rune_Wind_Kill"
            }
          ]
        },
        "Activity_RogueDungeon_Skill_Rune_Wind_Kill": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        },
        "UNIQUE_RogueDungeon_Skill_Rune_Wind": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.9
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "ownerIs": "Team",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 70310117,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "modifierName": "RogueDungeon_Skill_Rune_Wind_KILL"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "CurLocalAvatar",
          "doOffStage": true,
          "modifierName": "UNIQUE_RogueDungeon_Skill_Rune_Wind"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill01",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Spell_Water",
      "abilitySpecials": {
        "BuffTime_Base": {
          "type": "float",
          "dynamicValue": 5.5
        },
        "HealHpOnce_Base": {
          "type": "float",
          "dynamicValue": 4000.0
        },
        "HealHpOnce_Base_Loop": {
          "type": "float",
          "dynamicValue": 800.0
        },
        "ReviveStamina_Base_Loop": {
          "type": "float",
          "dynamicValue": 20.0
        },
        "SR_Spell_Water_LifeTime": {
          "type": "float",
          "dynamicValue": 2.0
        },
        "SR_Spell_Water_LifeTime_Stacking": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "R_Spell_Water_HealHpOnce_HealUp": {
          "type": "float",
          "dynamicValue": 0.15
        },
        "R_Spell_Water_HealHpOnce_HealUpStacking": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "SR_Spell_Water_HealHpOnce_HealUp": {
          "type": "float",
          "dynamicValue": 0.8
        },
        "SR_Spell_Water_HealHpOnce_HealUpStacking": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "SSR_Spell_Water_LifeTime": {
          "type": "float",
          "dynamicValue": 5.0
        },
        "SSR_Spell_Water_ReviveStamina": {
          "type": "float",
          "dynamicValue": 10.0
        },
        "SSR_Spell_Water_Stacking": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "RogueDungeon_Skill_Spell_Water_Delay": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.8
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Activity_Roguelike_Buff_Water"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurTeamAvatars",
              "modifierName": "RogueDungeon_Skill_Spell_Water"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurTeamAvatars",
              "modifierName": "RogueDungeon_Skill_Spell_Water_Loop_Avatar_Heal"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "modifierName": "RogueDungeon_Skill_Spell_Water_Loop_Avatar_Stamina"
            }
          ]
        },
        "RogueDungeon_Skill_Spell_Water": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.HealHP",
              "doOffStage": true,
              "amount": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "HealHpOnce_Base"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "HealHpOnce_Base"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "R_Spell_Water_HealHpOnce_HealUp"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "R_Spell_Water_HealHpOnce_HealUpStacking"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": true,
                    "operation": "Add"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "HealHpOnce_Base"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "SR_Spell_Water_HealHpOnce_HealUp"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "SR_Spell_Water_HealHpOnce_HealUpStacking"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": true,
                    "operation": "Add"
                  }
                ]
              }
            }
          ]
        },
        "RogueDungeon_Skill_Spell_Water_Loop_Avatar_Stamina": {
          "modifierName": "",
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "BuffTime_Base"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SR_Spell_Water_LifeTime"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SR_Spell_Water_LifeTime_Stacking"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": true,
                "operation": "Add"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SSR_Spell_Water_LifeTime"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SSR_Spell_Water_Stacking"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "RogueDungeon_Skill_Spell_Water_Loop_Avatar_ReviveStamina"
            }
          ]
        },
        "RogueDungeon_Skill_Spell_Water_Loop_Avatar_Heal": {
          "modifierName": "",
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "BuffTime_Base"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SR_Spell_Water_LifeTime"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SR_Spell_Water_LifeTime_Stacking"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": true,
                "operation": "Add"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SSR_Spell_Water_LifeTime"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SSR_Spell_Water_Stacking"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.HealHP",
              "doOffStage": true,
              "amount": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "HealHpOnce_Base_Loop"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "HealHpOnce_Base_Loop"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "R_Spell_Water_HealHpOnce_HealUp"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "R_Spell_Water_HealHpOnce_HealUpStacking"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": true,
                    "operation": "Add"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "HealHpOnce_Base_Loop"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "SR_Spell_Water_HealHpOnce_HealUp"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "SR_Spell_Water_HealHpOnce_HealUpStacking"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": true,
                    "operation": "Add"
                  }
                ]
              }
            }
          ]
        },
        "RogueDungeon_Skill_Spell_Water_Loop_Avatar_ReviveStamina": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ReviveStamina",
              "value": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "ReviveStamina_Base_Loop"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "SSR_Spell_Water_Stacking"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "SSR_Spell_Water_ReviveStamina"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  },
                  {
                    "isOperator": true,
                    "operation": "Add"
                  }
                ]
              }
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Water_DurationUp_SR",
          "overrideMapKey": "SR_Spell_Water_LifeTime_Stacking"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Water_HealUp_R",
          "overrideMapKey": "R_Spell_Water_HealHpOnce_HealUpStacking"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Water_HealUp_SR",
          "overrideMapKey": "SR_Spell_Water_HealHpOnce_HealUpStacking"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Water_Up_SSR",
          "overrideMapKey": "SSR_Spell_Water_Stacking"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill02",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Team",
          "modifierName": "RogueDungeon_Skill_Spell_Water_Delay"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Spell_Rock",
      "abilitySpecials": {
        "BuffTime_Base": {
          "type": "float",
          "dynamicValue": 12.0
        },
        "SubHurtDelta_Base": {
          "type": "float",
          "dynamicValue": 0.5
        },
        "R_Spell_Rock_LifeTime_Stacking": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "R_Spell_Rock_LifeTime": {
          "type": "float",
          "dynamicValue": 2.0
        },
        "SR_Spell_Rock_SubHurt_Stacking": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "SR_Spell_Rock_SubHurt": {
          "type": "float",
          "dynamicValue": 0.15
        },
        "SR_Spell_Rock_LifeTime_Stacking": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "SR_Spell_Rock_LifeTime": {
          "type": "float",
          "dynamicValue": 4.0
        },
        "SSR_Spell_Rock_Stacking": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "SSR_Spell_Rock_SubHurt": {
          "type": "float",
          "dynamicValue": 0.2
        },
        "SSR_Spell_Rock_CJB": {
          "type": "float",
          "dynamicValue": 16.64
        },
        "LevelEntity_AvatarDot_SystemValue": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "RogueDungeon_Skill_Spell_Rock_Delay": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.8
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "modifierName": "RogueDungeon_Skill_Spell_Rock"
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Activity_Roguelike_Buff_Rock"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "SGV_Spell_Rock_Up_SSR",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "MoreThan"
                }
              ],
              "modifierName": "RogueDungeon_Skill_Spell_Rock_Impact"
            }
          ]
        },
        "RogueDungeon_Skill_Spell_Rock": {
          "modifierName": "",
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "BuffTime_Base"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "R_Spell_Rock_LifeTime"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "R_Spell_Rock_LifeTime_Stacking"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": true,
                "operation": "Add"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SR_Spell_Rock_LifeTime"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "SR_Spell_Rock_LifeTime_Stacking"
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixin",
              "modifierName": "RogueDungeon_Skill_Spell_Rock_Avatar"
            }
          ]
        },
        "RogueDungeon_Skill_Spell_Rock_Avatar": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_SubHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "SubHurtDelta_Base"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "SR_Spell_Rock_SubHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "SR_Spell_Rock_SubHurt_Stacking"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                },
                {
                  "isOperator": true,
                  "operation": "Add"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "SSR_Spell_Rock_SubHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "SSR_Spell_Rock_Stacking"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                },
                {
                  "isOperator": true,
                  "operation": "Add"
                }
              ]
            },
            "Actor_EndureDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.0
            }
          },
          "isLimitedProperties": true
        },
        "RogueDungeon_Skill_Spell_Rock_Impact": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
              "key": "LevelEntity_AvatarDot_SystemValue",
              "type": "ElementLevelCo"
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "Caster",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Activity_Roguelike_Buff_Rock_BoomAtk"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 8.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Rock",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 25.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 0.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "SSR_Spell_Rock_CJB"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "LevelEntity_AvatarDot_SystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "",
                    "hitImpulseType": "LV2",
                    "hitHaltTimeScale": 0.05
                  }
                }
              },
              "targetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Rock_DurationUp_R",
          "overrideMapKey": "R_Spell_Rock_LifeTime_Stacking"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Rock_SubHurt_SR",
          "overrideMapKey": "SR_Spell_Rock_SubHurt_Stacking"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Rock_DurationUp_SR",
          "overrideMapKey": "SR_Spell_Rock_LifeTime_Stacking"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "target": "Team",
          "globalValueKey": "SGV_Spell_Rock_Up_SSR",
          "overrideMapKey": "SSR_Spell_Rock_Stacking"
        },
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill02",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Team",
          "modifierName": "RogueDungeon_Skill_Spell_Rock_Delay"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_RogueDungeon_Skill_Spell_Elec",
      "modifiers": {
        "Activity_RogueDungeon_Skill_Spell_Elec_Delay": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.8
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Activity_Roguelike_Buff_Electric"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "RogueDungeon_Skill_Spell_Elec"
            }
          ]
        },
        "RogueDungeon_Skill_Spell_Elec": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 6.0
                  }
                }
              },
              "gadgetID": 44000309,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.SendEffectTrigger",
          "parameter": "Skill02",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Activity_Shikishogun"
          }
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "Team",
          "modifierName": "Activity_RogueDungeon_Skill_Spell_Elec_Delay"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Skill_Test",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_AtkUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_AtkUpHandler"
          ]
        }
      ],
      "modifiers": {
        "Rogue_AtkUpHandler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_AtkUpHandler_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_AtkUpHandler_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            }
          },
          "state": "AttackUp"
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementAddHurt_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ElementAddHurt_Fire",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Fire_SSR"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ElementAddHurt_Ice",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Ice_SSR"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ElementAddHurt_Elec",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Elec_SSR"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ElementAddHurt_Rock",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Rock_SSR"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ElementAddHurt_Water",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Water_SSR"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ElementAddHurt_Wind",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Wind_SSR"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_PhysicalAddHurt",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_PhysicalAddHurt_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "Rogue_ElementAddHurt_SSR": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_ElementAddHurt_Fire_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Fire_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ElementAddHurt_Fire_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SSR"
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_ElementAddHurt_Ice_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Ice_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ElementAddHurt_Ice_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SSR"
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_ElementAddHurt_Elec_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Elec_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ElementAddHurt_Elec_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SSR"
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_ElementAddHurt_Rock_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Rock_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ElementAddHurt_Rock_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_RockAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SSR"
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_ElementAddHurt_Water_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Water_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ElementAddHurt_Water_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SSR"
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_ElementAddHurt_Wind_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Wind_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ElementAddHurt_Wind_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WindAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SSR"
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_PhysicalAddHurt_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_PhysicalAddHurt_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_PhysicalAddHurt_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_PhysicalAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SSR"
            }
          },
          "isLimitedProperties": true
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementAddHurt_SR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_ElementAddHurt_Fire",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Fire_SR_Level01",
            "Rogue_ElementAddHurt_Fire_SR_Level02",
            "Rogue_ElementAddHurt_Fire_SR_Level03"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_ElementAddHurt_Ice",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Ice_SR_Level01",
            "Rogue_ElementAddHurt_Ice_SR_Level02",
            "Rogue_ElementAddHurt_Ice_SR_Level03"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_ElementAddHurt_Elec",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Elec_SR_Level01",
            "Rogue_ElementAddHurt_Elec_SR_Level02",
            "Rogue_ElementAddHurt_Elec_SR_Level03"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_ElementAddHurt_Rock",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Rock_SR_Level01",
            "Rogue_ElementAddHurt_Rock_SR_Level02",
            "Rogue_ElementAddHurt_Rock_SR_Level03"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_ElementAddHurt_Water",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Water_SR_Level01",
            "Rogue_ElementAddHurt_Water_SR_Level02",
            "Rogue_ElementAddHurt_Water_SR_Level03"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_ElementAddHurt_Wind",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementAddHurt_Wind_SR_Level01",
            "Rogue_ElementAddHurt_Wind_SR_Level02",
            "Rogue_ElementAddHurt_Wind_SR_Level03"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_PhysicalAddHurt",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_PhysicalAddHurt_SR_Level01",
            "Rogue_PhysicalAddHurt_SR_Level02",
            "Rogue_PhysicalAddHurt_SR_Level03"
          ]
        }
      ],
      "abilitySpecials": {
        "Rogue_ElementAddHurt_SR_Level01": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Rogue_ElementAddHurt_SR_Level02": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Rogue_ElementAddHurt_SR_Level03": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_ElementAddHurt_Fire_SR_Level01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Fire_SR_Level01_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Fire_SR_Level02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Fire_SR_Level02_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Fire_SR_Level03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Fire_SR_Level03_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Ice_SR_Level01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Ice_SR_Level01_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Ice_SR_Level02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Ice_SR_Level02_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Ice_SR_Level03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Ice_SR_Level03_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Elec_SR_Level01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Elec_SR_Level01_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Elec_SR_Level02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Elec_SR_Level02_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Elec_SR_Level03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Elec_SR_Level03_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Rock_SR_Level01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Rock_SR_Level01_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Rock_SR_Level02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Rock_SR_Level02_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Rock_SR_Level03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Rock_SR_Level03_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Water_SR_Level01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Water_SR_Level01_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Water_SR_Level02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Water_SR_Level02_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Water_SR_Level03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Water_SR_Level03_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Wind_SR_Level01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Wind_SR_Level01_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Wind_SR_Level02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Wind_SR_Level02_Effect"
            }
          ]
        },
        "Rogue_ElementAddHurt_Wind_SR_Level03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementAddHurt_Wind_SR_Level03_Effect"
            }
          ]
        },
        "Rogue_PhysicalAddHurt_SR_Level01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_PhysicalAddHurt_SR_Level01_Effect"
            }
          ]
        },
        "Rogue_PhysicalAddHurt_SR_Level02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_PhysicalAddHurt_SR_Level02_Effect"
            }
          ]
        },
        "Rogue_PhysicalAddHurt_SR_Level03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_PhysicalAddHurt_SR_Level03_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ElementAddHurt_Fire_SR_Level01_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level01"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Fire_SR_Level02_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level02"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Fire_SR_Level03_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level03"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Ice_SR_Level01_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level01"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Ice_SR_Level02_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level02"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Ice_SR_Level03_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level03"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Elec_SR_Level01_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level01"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Elec_SR_Level02_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level02"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Elec_SR_Level03_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level03"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Rock_SR_Level01_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_RockAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level01"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Rock_SR_Level02_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_RockAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level02"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Rock_SR_Level03_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_RockAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level03"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Water_SR_Level01_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level01"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Water_SR_Level02_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level02"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Water_SR_Level03_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level03"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Wind_SR_Level01_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WindAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level01"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Wind_SR_Level02_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WindAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level02"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_ElementAddHurt_Wind_SR_Level03_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WindAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level03"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_PhysicalAddHurt_SR_Level01_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_PhysicalAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level01"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_PhysicalAddHurt_SR_Level02_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_PhysicalAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level02"
            }
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Rogue_PhysicalAddHurt_SR_Level03_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_PhysicalAddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Rogue_ElementAddHurt_SR_Level03"
            }
          },
          "isLimitedProperties": true
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementAddHurt_R",
      "abilitySpecials": {
        "ElementAddHurt_MAXLV_R": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PER_ElementAddHurt": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementAddHurt_CurLV_Fire": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementAddHurt_CurLV_Ice": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementAddHurt_CurLV_Elec": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementAddHurt_CurLV_Rock": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementAddHurt_CurLV_Water": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementAddHurt_CurLV_Wind": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ElementAddHurt_CurLV_Physical": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_ElementAddHurt_R_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Fire",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ElementAddHurt_Fire",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ElementAddHurt_MAXLV_R"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Fire",
                      "overrideMapKey": "ElementAddHurt_CurLV_Fire"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Fire"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Fire"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Ice",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ElementAddHurt_Ice",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ElementAddHurt_MAXLV_R"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Ice",
                      "overrideMapKey": "ElementAddHurt_CurLV_Ice"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Ice"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Ice"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Elec",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ElementAddHurt_Elec",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ElementAddHurt_MAXLV_R"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Elec",
                      "overrideMapKey": "ElementAddHurt_CurLV_Elec"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Elec"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Elec"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Rock",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ElementAddHurt_Rock",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ElementAddHurt_MAXLV_R"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Rock",
                      "overrideMapKey": "ElementAddHurt_CurLV_Rock"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Rock"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Rock"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Water",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ElementAddHurt_Water",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ElementAddHurt_MAXLV_R"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Water",
                      "overrideMapKey": "ElementAddHurt_CurLV_Water"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Water"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Water"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Wind",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ElementAddHurt_Wind",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ElementAddHurt_MAXLV_R"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Wind",
                      "overrideMapKey": "ElementAddHurt_CurLV_Wind"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Wind"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Wind"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Physical",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ElementAddHurt_Physical",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ElementAddHurt_MAXLV_R"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ElementAddHurt_Physical",
                      "overrideMapKey": "ElementAddHurt_CurLV_Physical"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Physical"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_ElementAddHurt_Team_Physical"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "Rogue_R_ElementAddHurt_Team_Fire": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Fire"
            }
          ]
        },
        "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Fire": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_ElementAddHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementAddHurt_CurLV_Fire"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_R_ElementAddHurt_Team_Ice": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Ice"
            }
          ]
        },
        "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Ice": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_IceAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_ElementAddHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementAddHurt_CurLV_Ice"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_R_ElementAddHurt_Team_Elec": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Elec"
            }
          ]
        },
        "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Elec": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_ElementAddHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementAddHurt_CurLV_Elec"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_R_ElementAddHurt_Team_Rock": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Rock"
            }
          ]
        },
        "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Rock": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_RockAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_ElementAddHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementAddHurt_CurLV_Rock"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_R_ElementAddHurt_Team_Water": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Water"
            }
          ]
        },
        "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Water": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WaterAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_ElementAddHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementAddHurt_CurLV_Water"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_R_ElementAddHurt_Team_Wind": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Wind"
            }
          ]
        },
        "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Wind": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_WindAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_ElementAddHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementAddHurt_CurLV_Wind"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        },
        "Rogue_R_ElementAddHurt_Team_Physical": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Physical"
            }
          ]
        },
        "UNIQUE_Rogue_R_ElementAddHurt_Avatar_Physical": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_FireAddHurtDelta": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_ElementAddHurt"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "ElementAddHurt_CurLV_Physical"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Rogue_ElementAddHurt_R_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElemnentalArt_GenerateBall",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_R_ElemnentalArt_GenerateBall",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElemnentalArt_GenerateBall"
          ]
        }
      ],
      "abilitySpecials": {
        "Rougue_GenerateBall_CD": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_ElemnentalArt_GenerateBall": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_ElemnentalArt_GenerateBall_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_ElemnentalArt_GenerateBall_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Other",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "Elemental_Art",
                    "Elemental_Art_Hold",
                    "Elemental_Art_Extra"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "Rougue_GenerateBall_CD",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.GenerateElemBall",
                  "doOffStage": true,
                  "configID": 2024,
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornByTarget",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": -1.0
                      }
                    },
                    "bornRandom": {
                      "$type": "MoleMole.Config.BornRandomFromCenter",
                      "minRandomRange": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 1.0
                      },
                      "maxRandomRange": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 2.0
                      }
                    }
                  },
                  "ratio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "baseEnergy": 2.0
                },
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Weapon_ExtraElementBall"
                  }
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "UNIQUE_Rougue_GenerateBall_CD"
                }
              ]
            }
          ]
        },
        "UNIQUE_Rougue_GenerateBall_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Rougue_GenerateBall_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "Rougue_GenerateBall_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "Rougue_GenerateBall_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_CurseEff_Manager",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "GV_ROGUE_CURSEEFF",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 10.0
            }
          ],
          "modifierNameSteps": [
            "Reset",
            "UNIQUE_Rogue_CurseEff"
          ]
        }
      ],
      "modifiers": {
        "UNIQUE_Rogue_CurseEff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "doOffStage": true,
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_SceneObj_RougeTrap_Buff"
              }
            }
          ]
        },
        "Reset": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Curse_NoHeal",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_CURSE_NOHEAL",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 5.5
            }
          ],
          "modifierNameSteps": [
            "Reset",
            "UNIQUE_Rogue_AtkUpHandler_Effect"
          ]
        }
      ],
      "modifiers": {
        "UNIQUE_Rogue_AtkUpHandler_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "state": "NoHeal",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Reset": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Curse_ExtraHurt",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUECURSE_EXTRAHURT",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 2.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 3.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 4.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 5.5
            }
          ],
          "modifierNameSteps": [
            "Reset",
            "UNIQUE_Rogue_ExtraHurt_Effect1",
            "UNIQUE_Rogue_ExtraHurt_Effect2",
            "UNIQUE_Rogue_ExtraHurt_Effect3",
            "UNIQUE_Rogue_ExtraHurt_Effect4",
            "UNIQUE_Rogue_ExtraHurt_Effect5"
          ]
        }
      ],
      "modifiers": {
        "UNIQUE_Rogue_ExtraHurt_Effect1": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ExtraHurt_Avatar1"
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Avatar1": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_SubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.2
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Effect2": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ExtraHurt_Avatar2"
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Avatar2": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_SubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.4
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Effect3": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ExtraHurt_Avatar3"
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Avatar3": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_SubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.6
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Effect4": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ExtraHurt_Avatar4"
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Avatar4": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_SubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.8
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Effect5": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ExtraHurt_Avatar5"
            }
          ]
        },
        "UNIQUE_Rogue_ExtraHurt_Avatar5": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_SubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.0
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "GV_ROGUE_CURSEEFF",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Reset": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementReactionAttack_Explode",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_R_ElementReaction_Explode",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementReaction_Explode_CJB"
          ]
        }
      ],
      "abilitySpecials": {
        "Explode_CJB_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CJB_Damage": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Rogue_ElementReactionAttack_Explode_CD_Init": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_EXPLODE_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Rogue_ElementReaction_Explode_CJB": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementReaction_Explode"
            }
          ]
        },
        "UNIQUE_Rogue_ElementReaction_Explode": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Explode"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "SelfAttackTarget",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "ROGUE_REACTION_EXPLODE_CD",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "Rogue_ElementReaction_Explode_Attack"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "Rogue_ElementReactionAttack_Explode_CD"
                }
              ]
            }
          ]
        },
        "Rogue_ElementReaction_Explode_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_GainWave_01"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 100.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 25.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "CJB_Damage"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "DamageSystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "Default",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "SelfCamp"
            }
          ]
        },
        "Rogue_ElementReactionAttack_Explode_CD": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Explode_CJB_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "ROGUE_REACTION_EXPLODE_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_EXPLODE_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "target": "Team",
          "modifierName": "UNIQUE_Rogue_ElementReactionAttack_Explode_CD_Init"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "doOffStage": true,
          "key": "DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementReactionAttack_Superconductor",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_R_ElementReaction_Superconductor",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementReaction_Superconductor_CJB"
          ]
        }
      ],
      "abilitySpecials": {
        "Explode_CJB_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CJB_Damage": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Rogue_ElementReactionAttack_Superconductor_CD_Init": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Superconductor_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Rogue_ElementReaction_Superconductor_CJB": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementReaction_Superconductor"
            }
          ]
        },
        "UNIQUE_Rogue_ElementReaction_Superconductor": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Superconductor"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "SelfAttackTarget",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "ROGUE_REACTION_Superconductor_CD",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "Rogue_ElementReaction_Superconductor_Attack"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "Rogue_ElementReactionAttack_Superconductor_CD"
                }
              ]
            }
          ]
        },
        "Rogue_ElementReaction_Superconductor_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_GainWave_01"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 100.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 25.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "CJB_Damage"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "DamageSystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "Default",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "SelfCamp"
            }
          ]
        },
        "Rogue_ElementReactionAttack_Superconductor_CD": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Explode_CJB_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "ROGUE_REACTION_Superconductor_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Superconductor_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "target": "Team",
          "modifierName": "UNIQUE_Rogue_ElementReactionAttack_Superconductor_CD_Init"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "doOffStage": true,
          "key": "DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementReactionAttack_Melt",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_R_ElementReaction_Melt",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementReaction_Melt_CJB"
          ]
        }
      ],
      "abilitySpecials": {
        "Explode_CJB_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CJB_Damage": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Rogue_ElementReactionAttack_Melt_CD_Init": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Melt_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Rogue_ElementReaction_Melt_CJB": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementReaction_Melt"
            }
          ]
        },
        "UNIQUE_Rogue_ElementReaction_Melt": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Melt"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "SelfAttackTarget",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "ROGUE_REACTION_Melt_CD",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "Rogue_ElementReaction_Melt_Attack"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "Rogue_ElementReactionAttack_Melt_CD"
                }
              ]
            }
          ]
        },
        "Rogue_ElementReaction_Melt_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_GainWave_01"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 100.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 25.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "CJB_Damage"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "DamageSystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "Default",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "SelfCamp"
            }
          ]
        },
        "Rogue_ElementReactionAttack_Melt_CD": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Explode_CJB_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "ROGUE_REACTION_Melt_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Melt_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "target": "Team",
          "modifierName": "UNIQUE_Rogue_ElementReactionAttack_Melt_CD_Init"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "doOffStage": true,
          "key": "DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementReactionAttack_Stream",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_R_ElementReaction_Stream",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementReaction_Stream_CJB"
          ]
        }
      ],
      "abilitySpecials": {
        "Explode_CJB_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CJB_Damage": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Rogue_ElementReactionAttack_Stream_CD_Init": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Stream_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Rogue_ElementReaction_Stream_CJB": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementReaction_Stream"
            }
          ]
        },
        "UNIQUE_Rogue_ElementReaction_Stream": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Stream"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "SelfAttackTarget",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "ROGUE_REACTION_Stream_CD",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "Rogue_ElementReaction_Stream_Attack"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "Rogue_ElementReactionAttack_Stream_CD"
                }
              ]
            }
          ]
        },
        "Rogue_ElementReaction_Stream_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_GainWave_01"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 100.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 25.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "CJB_Damage"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "DamageSystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "Default",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "SelfCamp"
            }
          ]
        },
        "Rogue_ElementReactionAttack_Stream_CD": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Explode_CJB_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "ROGUE_REACTION_Stream_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Stream_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "target": "Team",
          "modifierName": "UNIQUE_Rogue_ElementReactionAttack_Stream_CD_Init"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "doOffStage": true,
          "key": "DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ElementReactionAttack_Shock",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_R_ElementReaction_Shock",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ElementReaction_Shock_CJB"
          ]
        }
      ],
      "abilitySpecials": {
        "Explode_CJB_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CJB_Damage": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_Rogue_ElementReactionAttack_Shock_CD_Init": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Shock_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Rogue_ElementReaction_Shock_CJB": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ElementReaction_Shock"
            }
          ]
        },
        "UNIQUE_Rogue_ElementReaction_Shock": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Shock"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "SelfAttackTarget",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "ROGUE_REACTION_Shock_CD",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "Rogue_ElementReaction_Shock_Attack"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "Rogue_ElementReactionAttack_Shock_CD"
                }
              ]
            }
          ]
        },
        "Rogue_ElementReaction_Shock_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_GainWave_01"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 100.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 25.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "CJB_Damage"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "DamageSystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "Default",
                    "hitHaltTimeScale": 0.01
                  }
                }
              },
              "targetType": "SelfCamp"
            }
          ]
        },
        "Rogue_ElementReactionAttack_Shock_CD": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Explode_CJB_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "ROGUE_REACTION_Shock_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "ROGUE_REACTION_Shock_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "target": "Team",
          "modifierName": "UNIQUE_Rogue_ElementReactionAttack_Shock_CD_Init"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "doOffStage": true,
          "key": "DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_HighStaminaAreaAttack_SR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_HighStaminaAreaAttack",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_HighStaminaAreaAttack"
          ]
        }
      ],
      "abilitySpecials": {
        "Rougue_HighStamina_CD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "StaminaRatio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "DamageSystemValue": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CJB_Damage": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_HighStaminaAreaAttack": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "Rogue_HighStaminaAreaAttack_Avatar"
            }
          ]
        },
        "Rogue_HighStaminaAreaAttack_Avatar": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Other",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "Rougue_HighStamina_CD",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByLocalAvatarStaminaRatio",
                  "staminaRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "StaminaRatio"
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Stages_GainWave_01"
                  },
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornByTarget"
                  }
                },
                {
                  "$type": "MoleMole.Config.TriggerAttackEvent",
                  "attackEvent": {
                    "attackPattern": {
                      "$type": "MoleMole.Config.ConfigAttackSphere",
                      "triggerType": "TriggerNoRepeat",
                      "born": {
                        "$type": "MoleMole.Config.ConfigBornBySelf"
                      },
                      "radius": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 4.0
                      }
                    },
                    "attackInfo": {
                      "attackTag": "",
                      "attenuationTag": "",
                      "attenuationGroup": "default",
                      "attackProperty": {
                        "damagePercentageRatio": {
                          "isFormula": false,
                          "isDynamic": false,
                          "fixedValue": 0.0
                        },
                        "elementDurability": {
                          "isFormula": false,
                          "isDynamic": false,
                          "fixedValue": 100.0
                        },
                        "ignoreAttackerProperty": true,
                        "strikeType": "Default",
                        "enBreak": 25.0,
                        "damageExtra": {
                          "isFormula": true,
                          "formula": [
                            {
                              "isOperator": false,
                              "isDynamic": true,
                              "dynamicKey": "CJB_Damage"
                            },
                            {
                              "isOperator": false,
                              "isDynamic": true,
                              "dynamicKey": "DamageSystemValue"
                            },
                            {
                              "isOperator": true,
                              "operation": "Mul"
                            }
                          ]
                        },
                        "trueDamage": true
                      },
                      "hitPattern": {
                        "onHitEffectName": "default",
                        "hitImpulseType": "Default",
                        "hitHaltTimeScale": 0.01
                      }
                    }
                  },
                  "targetType": "Enemy"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "UNIQUE_Rougue_HighStaminaAreaAttack_CD"
                }
              ]
            }
          ]
        },
        "UNIQUE_Rougue_HighStaminaAreaAttack_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Rougue_HighStamina_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "Rougue_HighStamina_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "Rougue_HighStamina_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_AreaNoEnemyAtkSpeedUp",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_AreaNoEnemyAtkSpeedUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Blank",
            "Rogue_AreaNoEnemyAtkSpeedUp"
          ]
        }
      ],
      "abilitySpecials": {
        "AtkSpeed": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "EnemyCount": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Blank": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "Rogue_AreaNoEnemyAtkSpeedUp": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Team",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "ROGUE_SR_AreaNoEnemyAtkSpeedUp_Close",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "target": "Team",
                  "modifierName": "UNIQUE_Rogue_AreaNoEnemyAttackUp_Handler"
                },
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "target": "Team",
                  "modifierName": "UNIQUE_ROGUE_AreaNoEnemyAttackUp_Effect_Team"
                }
              ]
            }
          ]
        },
        "UNIQUE_Rogue_AreaNoEnemyAttackUp_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "TempEnemyCount_Cache",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "sortType": "Nearest",
                "shapeName": "CircleR5",
                "campTargetType": "Enemy",
                "campBasedOn": "CurLocalAvatar",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "target": "Team",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "TempEnemyCount_Cache",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            },
            {
              "$type": "MoleMole.Config.CopyGlobalValue",
              "srcTarget": "Team",
              "dstTarget": "Team",
              "srcKey": "TempEnemyCount_Cache",
              "dstKey": "TempEnemyCount"
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Team",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "TempEnemyCount",
                  "value": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "EnemyCount"
                  },
                  "compareType": "LessAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "target": "CurTeamAvatars",
                  "modifierName": "UNIQUE_LevelEntity_TowerBuff_AreaNoEnemyAttackUp_Avatar"
                },
                {
                  "$type": "MoleMole.Config.SendEffectTrigger",
                  "otherTargets": {
                    "$type": "MoleMole.Config.SelectTargetsByChildren",
                    "configID": 44000008
                  },
                  "parameter": "State",
                  "type": "Int",
                  "value": 1,
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Tower_Circle_ManualReduction_02"
                  }
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.RemoveUniqueModifier",
                  "target": "CurTeamAvatars",
                  "doOffStage": true,
                  "modifierName": "UNIQUE_LevelEntity_TowerBuff_AreaNoEnemyAttackUp_Avatar"
                },
                {
                  "$type": "MoleMole.Config.RemoveUniqueModifier",
                  "target": "Team",
                  "doOffStage": true,
                  "modifierName": "UNIQUE_ROGUE_AreaNoEnemyAttackUp_Effect_Team"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "target": "Team",
                  "doOffStage": true,
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "ROGUE_SR_AreaNoEnemyAtkSpeedUp_Close",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ServerLuaCall",
                  "luaCallType": "CurRogueBossGroup",
                  "funcName": "RemoveBUFF",
                  "param1": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "param2": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "param3": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            }
          ]
        },
        "UNIQUE_LevelEntity_TowerBuff_AreaNoEnemyAttackUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Animator_AttackSpeedRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AtkSpeed"
            }
          }
        },
        "UNIQUE_ROGUE_AreaNoEnemyAttackUp_Effect_Team": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "gadgetID": 44000008,
              "campID": 1001,
              "campTargetType": "Enemy",
              "byServer": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByChildren",
                "configID": 44000008
              },
              "modifierName": "Kill_AreaNoEnemyAttackUp_Field"
            }
          ]
        },
        "Kill_AreaNoEnemyAttackUp_Field": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_AreaLesserEnemyAtkSpeedUp",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_AreaLesserEnemyAtkSpeedUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Blank",
            "Rogue_AreaLesserEnemyAtkSpeedUp"
          ]
        }
      ],
      "abilitySpecials": {
        "AtkSpeed": {
          "type": "float",
          "dynamicValue": 0.1
        },
        "AtkSpeed_Extra": {
          "type": "float",
          "dynamicValue": -0.05
        },
        "EnemyCount": {
          "type": "float",
          "dynamicValue": 3.0
        },
        "CurEnermy_Count": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Holo_CurAtkSpeed": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "TempEnemyCount_Jisuan": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Blank": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "Rogue_AreaLesserEnemyAtkSpeedUp": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "Team",
              "modifierName": "UNIQUE_Rogue_AreaLesserEnemyAtkSpeedUp_Handler"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "Team",
              "modifierName": "UNIQUE_ROGUE_AreaLesserEnemyAtkSpeedUp_Effect_Team"
            }
          ]
        },
        "UNIQUE_Rogue_AreaLesserEnemyAtkSpeedUp_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "TempEnemyCount_Cache",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "sortType": "Nearest",
                "shapeName": "CircleR5",
                "campTargetType": "Enemy",
                "campBasedOn": "CurLocalAvatar",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "target": "Team",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "TempEnemyCount_Cache",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            },
            {
              "$type": "MoleMole.Config.CopyGlobalValue",
              "srcTarget": "Team",
              "dstTarget": "Team",
              "srcKey": "TempEnemyCount_Cache",
              "dstKey": "TempEnemyCount"
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Team",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "TempEnemyCount",
                  "value": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "EnemyCount"
                  },
                  "compareType": "LessAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                  "globalValueKey": "TempEnemyCount",
                  "overrideMapKey": "CurEnermy_Count"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "CurEnermy_Count"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": false,
                        "fixedValue": 1.0
                      },
                      {
                        "isOperator": true,
                        "operation": "Sub"
                      }
                    ]
                  },
                  "key": "TempEnemyCount_Jisuan",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                  "globalValueKey": "TempEnemyCount_Jisuan",
                  "overrideMapKey": "TempEnemyCount_Jisuan"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "value": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "AtkSpeed"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "TempEnemyCount_Jisuan"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "AtkSpeed_Extra"
                      },
                      {
                        "isOperator": true,
                        "operation": "Mul"
                      },
                      {
                        "isOperator": true,
                        "operation": "Add"
                      }
                    ]
                  },
                  "key": "Holo_CurAtkSpeed",
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                  "globalValueKey": "Holo_CurAtkSpeed",
                  "overrideMapKey": "Holo_CurAtkSpeed"
                },
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "target": "CurTeamAvatars",
                  "modifierName": "LevelEntity_TowerBuff_AreaLesserEnemyAtkSpeedUp_Avatar"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "CurTeamAvatars",
                  "modifierName": "LevelEntity_TowerBuff_AreaLesserEnemyAtkSpeedUp_Avatar"
                },
                {
                  "$type": "MoleMole.Config.SendEffectTrigger",
                  "otherTargets": {
                    "$type": "MoleMole.Config.SelectTargetsByChildren",
                    "configID": 44000008
                  },
                  "parameter": "State",
                  "type": "Int",
                  "value": 1,
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Tower_Circle_ManualReduction_02"
                  }
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "target": "CurTeamAvatars",
                  "doOffStage": true,
                  "modifierName": "LevelEntity_TowerBuff_AreaLesserEnemyAtkSpeedUp_Avatar"
                }
              ]
            }
          ]
        },
        "LevelEntity_TowerBuff_AreaLesserEnemyAtkSpeedUp_Avatar": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Animator_AttackSpeedRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "Holo_CurAtkSpeed"
            }
          }
        },
        "UNIQUE_ROGUE_AreaLesserEnemyAtkSpeedUp_Effect_Team": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "doOffStage": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "gadgetID": 44000008,
              "campID": 1001,
              "campTargetType": "Enemy",
              "byServer": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByChildren",
                "configID": 44000008
              },
              "modifierName": "Kill_AreaNoEnemyAttackUp_Field"
            }
          ]
        },
        "Kill_AreaNoEnemyAttackUp_Field": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_NormalAttackDamageUp_R",
      "abilitySpecials": {
        "NormalAttackDamageUp_MAXLV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "NormalAttackDamageUp_LV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PER_NormalAttackDamageUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_NormalAttackDamageUp_R_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_NormalAttackDamageUp",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_NormalAttackDamageUp",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "NormalAttackDamageUp_MAXLV"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_NormalAttackDamageUp",
                      "overrideMapKey": "NormalAttackDamageUp_LV"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_NormalAttackDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_R_NormalAttackDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06"
              ],
              "damagePercentageRatio": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "PER_NormalAttackDamageUp"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "NormalAttackDamageUp_LV"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Rogue_NormalAttackDamageUp_R_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ExtraAttackDamageUp_R",
      "abilitySpecials": {
        "ExtraAttackDamageUp_MAXLV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ExtraAttackDamageUp_LV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PER_ExtraAttackDamageUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_ExtraAttackDamageUp_R_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_ExtraAttackDamageUp",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_ExtraAttackDamageUp",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "ExtraAttackDamageUp_MAXLV"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_ExtraAttackDamageUp",
                      "overrideMapKey": "ExtraAttackDamageUp_LV"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_ExtraAttackDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_R_ExtraAttackDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "PER_ExtraAttackDamageUp"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "ExtraAttackDamageUp_LV"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Rogue_ExtraAttackDamageUp_R_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_FallingAttackDamageUp_R",
      "abilitySpecials": {
        "FallingAttackDamageUp_MAXLV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "FallingAttackDamageUp_LV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PER_FallingAttackDamageUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_FallingAttackDamageUp_R_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_FallingAttackDamageUp",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_FallingAttackDamageUp",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "FallingAttackDamageUp_MAXLV"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_FallingAttackDamageUp",
                      "overrideMapKey": "FallingAttackDamageUp_LV"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_FallingAttackDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_R_FallingAttackDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "FallingAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "PER_FallingAttackDamageUp"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "FallingAttackDamageUp_LV"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Rogue_FallingAttackDamageUp_R_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Elemental_ArtDamageUp_R",
      "abilitySpecials": {
        "Elemental_ArtDamageUp_MAXLV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Elemental_ArtDamageUp_LV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PER_Elemental_ArtDamageUp": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_Elemental_ArtDamageUp_R_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_Elemental_ArtDamageUp",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_Elemental_ArtDamageUp",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "Elemental_ArtDamageUp_MAXLV"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_Elemental_ArtDamageUp",
                      "overrideMapKey": "Elemental_ArtDamageUp_LV"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_Elemental_ArtDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_R_Elemental_ArtDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra"
              ],
              "damagePercentageRatio": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "PER_Elemental_ArtDamageUp"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "Elemental_ArtDamageUp_LV"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Rogue_Elemental_ArtDamageUp_R_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_DefenceRatio_R",
      "abilitySpecials": {
        "DefenceRatio_MAXLV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "DefenceRatio_LV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PER_DefenceRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_DefenceRatio_R_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionOnGlobalValueChangeMixin",
              "globalValueKey": "SGV_ROGUE_R_DefenceRatio",
              "actions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "SGV_ROGUE_R_DefenceRatio",
                      "value": {
                        "isFormula": false,
                        "isDynamic": true,
                        "dynamicKey": "DefenceRatio_MAXLV"
                      },
                      "compareType": "LessAndEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
                      "globalValueKey": "SGV_ROGUE_R_DefenceRatio",
                      "overrideMapKey": "DefenceRatio_LV"
                    },
                    {
                      "$type": "MoleMole.Config.RemoveModifier",
                      "modifierName": "Rogue_R_DefenceRatio_Team"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "Rogue_R_DefenceRatio_Team"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "Rogue_R_DefenceRatio_Team": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_R_DefenceRatio_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_R_DefenceRatio_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_DefenceRatio": {
              "isFormula": true,
              "formula": [
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "PER_DefenceRatio"
                },
                {
                  "isOperator": false,
                  "isDynamic": true,
                  "dynamicKey": "DefenceRatio_LV"
                },
                {
                  "isOperator": true,
                  "operation": "Mul"
                }
              ]
            }
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Rogue_DefenceRatio_R_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_HighHp_DamageUp_SR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_HighHp_NormalExtraFalling_DamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_HighHp_NormalExtraFallingDamageUp_SR_Handler"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_HighHp_ElementalArt_DamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_HighHp_ElementalArtDamageUp_SR_Handler"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_HighHp_ElementalBurst_DamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_HighHp_ElementalBurstDamageUp_SR_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "HighHp_Threshold": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HighHp_NormalExtraFallingDamageUp_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HighHp_ElementalArtDamageUp_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "HighHp_ElementalBurstDamageUp_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_HighHp_NormalExtraFallingDamageUp_SR_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_SR_HighHp_NormalExtraFallingDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_SR_HighHp_NormalExtraFallingDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack",
                "FallingAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HighHp_NormalExtraFallingDamageUp_Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "HighHp_Threshold"
                  }
                }
              ]
            }
          ]
        },
        "Rogue_HighHp_ElementalArtDamageUp_SR_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_SR_HighHp_ElementalArtDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_SR_HighHp_ElementalArtDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HighHp_ElementalArtDamageUp_Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "HighHp_Threshold"
                  }
                }
              ]
            }
          ]
        },
        "Rogue_HighHp_ElementalBurstDamageUp_SR_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_SR_HighHp_ElementalBurstDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_SR_HighHp_ElementalBurstDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Burst"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HighHp_ElementalBurstDamageUp_Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "HighHp_Threshold"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_DamageUp_SubHurtDown_SR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_DamageUp_SubHurtDown",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_DamageUp_SubHurtDown_SR_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "SubHurtDown_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "DamageUp_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_DamageUp_SubHurtDown_SR_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_SR_DamageUp_SubHurtDown_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_SR_DamageUp_SubHurtDown_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_SubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDown_Rate"
            },
            "Actor_AddHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "DamageUp_Rate"
            }
          },
          "isLimitedProperties": true
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_LowHp_DamageUp_SR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_LowHp_NormalExtraFalling_DamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_LowHp_NormalExtraFallingDamageUp_SR_Handler"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_LowHp_ElementalArt_DamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_LowHp_ElementalArtDamageUp_SR_Handler"
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_LowHp_ElementalBurst_DamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_LowHp_ElementalBurstDamageUp_SR_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "LowHp_Threshold": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "LowHp_NormalExtraFallingDamageUp_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "LowHp_ElementalArtDamageUp_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "LowHp_ElementalBurstDamageUp_Rate": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_LowHp_NormalExtraFallingDamageUp_SR_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_SR_LowHp_NormalExtraFallingDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_SR_LowHp_NormalExtraFallingDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack",
                "FallingAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "LowHp_NormalExtraFallingDamageUp_Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "logic": "Lesser",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "LowHp_Threshold"
                  }
                }
              ]
            }
          ]
        },
        "Rogue_LowHp_ElementalArtDamageUp_SR_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_SR_LowHp_ElementalArtDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_SR_LowHp_ElementalArtDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "LowHp_ElementalArtDamageUp_Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "logic": "Lesser",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "LowHp_Threshold"
                  }
                }
              ]
            }
          ]
        },
        "Rogue_LowHp_ElementalBurstDamageUp_SR_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Rogue_SR_LowHp_ElementalBurstDamageUp_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_SR_LowHp_ElementalBurstDamageUp_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Burst"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "LowHp_ElementalBurstDamageUp_Rate"
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "logic": "Lesser",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "LowHp_Threshold"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_OtherNumerical_R",
      "abilitySpecials": {
        "NormalAttack_MAXLV": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PER_NormalAttack": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "NormalAttack_LV": {
          "type": "float",
          "dynamicValue": 0.0
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_DownPhysicalSubHurt_SR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_DownPhysicalSubHurt",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_DownPhysicalSubHurt"
          ]
        }
      ],
      "abilitySpecials": {
        "Bufftime": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "PhysicalSubHurt": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_DownPhysicalSubHurt": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_DownPhysicalSubHurt_Avatar"
            }
          ]
        },
        "UNIQUE_Rogue_DownPhysicalSubHurt_Avatar": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Superconductor"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "SelfAttackTarget",
                  "modifierName": "Rogue_ElementReaction_Superconductor_Attack"
                }
              ]
            }
          ]
        },
        "Rogue_ElementReaction_Superconductor_Attack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Bufftime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_PhysicalSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "PhysicalSubHurt"
            }
          }
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_DiePatternSwitch",
      "modifiers": {
        "Activity_Rogue_Monster_DiePatternSwitch": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_DieEffect_ID",
              "defaultGlobalValueOnCreate": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 2.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 3.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 4.0
                },
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 5.0
                }
              ],
              "modifierNameSteps": [
                "Activity_Rogue_Monster_DieEff01",
                "Activity_Rogue_Monster_DieEff02",
                "Activity_Rogue_Monster_DieEff03",
                "Activity_Rogue_Monster_DieEff04",
                "Activity_Rogue_Monster_DieEff05"
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_DieEffect_ID",
              "useLimitRange": true,
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Activity_Rogue_Monster_DieEff01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DiePatternSwitchMixin",
              "hasAnimatorDie": true,
              "dieEndTime": 0.1,
              "dieForceDisappearTime": 2.0,
              "dieDisappearEffect": "Eff_Death_Monster_Rogue_01",
              "startDieEndAtOnce": true,
              "ignoreElementDie": true
            }
          ]
        },
        "Activity_Rogue_Monster_DieEff02": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DiePatternSwitchMixin",
              "hasAnimatorDie": true,
              "dieEndTime": 0.1,
              "dieForceDisappearTime": 2.0,
              "dieDisappearEffect": "Eff_Death_Monster_Rogue_02",
              "startDieEndAtOnce": true,
              "ignoreElementDie": true
            }
          ]
        },
        "Activity_Rogue_Monster_DieEff03": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DiePatternSwitchMixin",
              "hasAnimatorDie": true,
              "dieEndTime": 0.1,
              "dieForceDisappearTime": 2.0,
              "dieDisappearEffect": "Eff_Death_Monster_Rogue_03",
              "startDieEndAtOnce": true,
              "ignoreElementDie": true
            }
          ]
        },
        "Activity_Rogue_Monster_DieEff04": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DiePatternSwitchMixin",
              "hasAnimatorDie": true,
              "dieEndTime": 0.1,
              "dieForceDisappearTime": 2.0,
              "dieDisappearEffect": "Eff_Death_Monster_Rogue_04",
              "startDieEndAtOnce": true,
              "ignoreElementDie": true
            }
          ]
        },
        "Activity_Rogue_Monster_DieEff05": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DiePatternSwitchMixin",
              "hasAnimatorDie": true,
              "dieEndTime": 0.1,
              "dieForceDisappearTime": 2.0,
              "dieDisappearEffect": "Eff_Death_Monster_Rogue_05",
              "startDieEndAtOnce": true,
              "ignoreElementDie": true
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByHasFeatureTag",
              "featureTagIDs": [
                3006
              ]
            }
          ],
          "modifierName": "Activity_Rogue_Monster_DiePatternSwitch"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage1",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage1": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage1"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage2",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage2": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage2"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage3",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage3": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage3"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage4",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage4": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage4"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage5",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage5": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage5"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage6",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage6": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage6"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage7",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage7": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage7"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage8",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "AtkUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage8": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            },
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AtkUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage8"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_HPUp_Stage9",
      "abilitySpecials": {
        "HPUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "AtkUpRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Activity_Rogue_Monster_HPUp_Stage9": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_MaxHPRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "HPUpRatio"
            },
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AtkUpRatio"
            }
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Activity_Rogue_Monster_HPUp_Stage9"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Monster_SelfHeal",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_MONSTER_Activity_Rogue_Monster_SelfHeal_Times",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Activity_Rogue_Monster_SelfHeal_Manager",
            "Blank"
          ]
        }
      ],
      "abilitySpecials": {
        "Threshold": {
          "type": "float",
          "dynamicValue": 0.1
        },
        "HealLatency": {
          "type": "float",
          "dynamicValue": 1.0
        },
        "HealRatio": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Blank": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "Activity_Rogue_Monster_SelfHeal_Manager": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachModifierToHPPercentMixin",
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": true,
                  "dynamicKey": "Threshold"
                }
              ],
              "modifierNameSteps": [
                "Blank",
                "Activity_Rogue_Monster_SelfHeal_Trigger"
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SelfHeal_FootCircle"
              }
            }
          ]
        },
        "Activity_Rogue_Monster_SelfHeal_Trigger": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "Activity_Rogue_Monster_SelfHeal_Latency"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_Activity_Rogue_Monster_SelfHeal_Times",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "Activity_Rogue_Monster_SelfHeal_Latency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "HealLatency"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SelfHeal_Alert"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.HealHP",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityIsAlive"
                }
              ],
              "amountByTargetMaxHPRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "HealRatio"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityIsAlive"
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SelfHeal_HealEffect"
              }
            }
          ]
        }
      },
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "Activity_Rogue_Monster_SelfHeal_Manager"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "Activity_Rogue_Monster_SelfHeal_Latency"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_Elemental_ArtDamageUp_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_Elemental_ArtDamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_Elemental_ArtDamageUp_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "PER_Elemental_ArtDamageUp": {
          "type": "float",
          "dynamicValue": 0.2
        },
        "Elemental_ArtDamageUp_LV": {
          "type": "float",
          "dynamicValue": 1.0
        }
      },
      "modifiers": {
        "Rogue_Elemental_ArtDamageUp_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_Elemental_ArtDamageUp_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_Elemental_ArtDamageUp_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra"
              ],
              "damagePercentageRatio": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "PER_Elemental_ArtDamageUp"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "Elemental_ArtDamageUp_LV"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ExtraAttackDamageUp_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ExtraAttackDamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ExtraAttackDamageUp_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "PER_ExtraAttackDamageUp": {
          "type": "float",
          "dynamicValue": 0.2
        },
        "ExtraAttackDamageUp_LV": {
          "type": "float",
          "dynamicValue": 1.0
        }
      },
      "modifiers": {
        "Rogue_ExtraAttackDamageUp_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ExtraAttackDamageUp_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ExtraAttackDamageUp_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "damagePercentageRatio": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "PER_ExtraAttackDamageUp"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "ExtraAttackDamageUp_LV"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_NormalAttackDamageUp_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_NormalAttackDamageUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_NormalAttackDamageUp_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "PER_NormalAttackDamageUp": {
          "type": "float",
          "dynamicValue": 0.2
        }
      },
      "modifiers": {
        "Rogue_NormalAttackDamageUp_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_NormalAttackDamageUp_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_NormalAttackDamageUp_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06"
              ],
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "PER_NormalAttackDamageUp"
              }
            }
          ]
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_AtkSpeedUp_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_AtkSpeedUp",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_AtkSpeedUp_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "AtkSpeed": {
          "type": "float",
          "dynamicValue": 0.2
        }
      },
      "modifiers": {
        "Rogue_AtkSpeedUp_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_AtkSpeedUp_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_AtkSpeedUp_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Animator_AttackSpeedRatio": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "AtkSpeed"
            }
          },
          "state": "AttackUp"
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_SprintAreaAttack_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_SprintAreaAttack",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_SprintAreaAttack_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "LevelEntity_RogueBUFF_CD_P1": {
          "type": "float",
          "dynamicValue": 10.0
        },
        "LevelEntity_RogueBUFF_MaxCount_P2": {
          "type": "float",
          "dynamicValue": 3.0
        }
      },
      "modifiers": {
        "Rogue_SprintAreaAttack_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "Rogue_SprintAreaAttack_SSR_Effect"
            }
          ]
        },
        "Rogue_SprintAreaAttack_SSR_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToStateIDMixin",
              "stateIDs": [
                "SprintBS"
              ],
              "modifierName": "LevelEntity_RogueBUFF_SprintAreaAttack_Check"
            }
          ]
        },
        "LevelEntity_RogueBUFF_SprintAreaAttack_Check": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Team",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "_IS_RogueBUFF_SPRINTAREAATTACK_CD",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.0
                  },
                  "compareType": "LessAndEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "UNIQUE_LevelEntity_RogueBUFF_SprintAreaAttack_Check"
                }
              ]
            }
          ]
        },
        "UNIQUE_LevelEntity_RogueBUFF_SprintAreaAttack_Check": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "LevelEntity_RogueBUFF_SprintAreaAttack"
            }
          ]
        },
        "LevelEntity_RogueBUFF_SprintAreaAttack": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_IS_RogueBUFF_SPRINTAREAATTACK_CD",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "LevelEntity_RogueBUFF_MaxCount_P2"
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "modifierName": "LevelEntity_RogueBUFF_CD_Handle"
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              },
              "gadgetID": 44000310,
              "campID": 1001,
              "campTargetType": "Enemy"
            }
          ]
        },
        "LevelEntity_RogueBUFF_CD_ModifierDelay": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.01
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "modifierName": "LevelEntity_RogueBUFF_CD_Handle"
            }
          ]
        },
        "LevelEntity_RogueBUFF_CD_Handle": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "LevelEntity_RogueBUFF_CD_P1"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "target": "Team",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_IS_RogueBUFF_SPRINTAREAATTACK_CD",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "LevelEntity_RogueBUFF_MaxCount_P2"
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Team",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_IS_RogueBUFF_SPRINTAREAATTACK_CD",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "MoreThan"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "LevelEntity_RogueBUFF_CD_ModifierDelay"
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "target": "Team",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "key": "_IS_RogueBUFF_SPRINTAREAATTACK_CD",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "LevelEntity_RogueBUFF_MaxCount_P2"
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_ShieldOnBeingHitDoDamage_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ShieldOnBeingHitDoDamage",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ShieldOnBeingHitDoDamage_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "LevelEntity_RogueBuff_Damage": {
          "type": "float",
          "dynamicValue": 9.98
        },
        "LevelEntity_RogueBuff_Damage_CD": {
          "type": "float",
          "dynamicValue": 2.0
        },
        "LevelEntity_RogueBuff_SystemValue": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_ShieldOnBeingHitDoDamage_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ShieldOnBeingHitDoDamage_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ShieldOnBeingHitDoDamage_SSR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Other",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "_Is_ShieldOnBeingHitDoDamage_Ver_1_15_CD",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByHasShield",
                  "target": "Self",
                  "type": "All"
                }
              ],
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster",
                    "Gadget"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitDamage",
                  "damage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "useOriginDamage": true
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "RogueBuff_ShieldOnBeingHitDoDamage"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "UNIQUE_ShieldOnBeingHitDoDamage_Ver_1_15_CD"
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "target": "Target",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByEntityTypes",
                      "entityTypes": [
                        "Bullet"
                      ]
                    },
                    {
                      "$type": "MoleMole.Config.ByHitDamage",
                      "damage": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "useOriginDamage": true
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "target": "TargetOriginOwner",
                      "modifierName": "RogueBuff_ShieldOnBeingHitDoDamage"
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "target": "Team",
                      "modifierName": "UNIQUE_ShieldOnBeingHitDoDamage_Ver_1_15_CD"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "RogueBuff_ShieldOnBeingHitDoDamage": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_ShieldOnBeingHit"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "target": "Applier",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 10.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 0.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "LevelEntity_RogueBuff_Damage"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "LevelEntity_RogueBuff_SystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true,
                    "ignoreModifyDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "",
                    "hitImpulseType": "LV2",
                    "hitHaltTimeScale": 0.05
                  },
                  "cameraShake": {}
                }
              },
              "targetType": "Enemy"
            }
          ]
        },
        "UNIQUE_ShieldOnBeingHitDoDamage_Ver_1_15_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "LevelEntity_RogueBuff_Damage_CD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_Is_ShieldOnBeingHitDoDamage_Ver_1_15_CD",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ClearGlobalValue",
              "key": "_Is_ShieldOnBeingHitDoDamage_Ver_1_15_CD"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "LevelEntity_RogueBuff_SystemValue",
          "type": "ElementLevelCo"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_OnGainEnergyByBall_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_OnGainEnergyByBall",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_OnGainEnergyByBall_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "CDTime": {
          "type": "float",
          "dynamicValue": 4.0
        },
        "DamageSystemValue": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Damage_Rate": {
          "type": "float",
          "dynamicValue": 24.95
        }
      },
      "modifiers": {
        "Rogue_OnGainEnergyByBall_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixin",
              "modifierName": "UNIQUE_TowerBuff_OnGainEnergyByBall_TriggerAoe"
            }
          ]
        },
        "UNIQUE_TowerBuff_OnGainEnergyByBall_TriggerAoe": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByEnergyChangeMixin",
              "elementTypes": [
                "Electric",
                "Fire",
                "Water",
                "Grass",
                "Ice",
                "Wind",
                "Rock"
              ],
              "doWhenEnergyMax": true,
              "onGainEnergyByBall": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "target": "Team",
                  "targetPredicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "_TowerBuff_OnGainEnergyByBall_CD",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "UNIQUE_TowerBuff_OnGainEnergyByBall_TriggerAoe_Avatar"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "UNIQUE_TowerBuff_OnGainEnergyByBall_TriggerAoe_Avatar": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_EnergyDisk_ElementalBurst_Wave_R40"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "ignoreAttackerProperty": true,
                    "enBreak": 25.0,
                    "attackType": "Melee",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "Damage_Rate"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "DamageSystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true,
                    "ignoreModifyDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2",
                    "hitHaltTimeScale": 0.02
                  }
                }
              },
              "targetType": "Enemy"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "modifierName": "UNIQUE_TowerBuff_OnGainEnergyByBall_TriggerAoe_CD"
            }
          ]
        },
        "UNIQUE_TowerBuff_OnGainEnergyByBall_TriggerAoe_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "CDTime"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_TowerBuff_OnGainEnergyByBall_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_TowerBuff_OnGainEnergyByBall_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_TEST4_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_HitCritical",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_HitCritical_SSR"
          ]
        }
      ],
      "abilitySpecials": {
        "LevelEntity_RogueBuff_RogueBuff_CD_P1": {
          "type": "float",
          "dynamicValue": 5.0
        }
      },
      "modifiers": {
        "Rogue_HitCritical_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_HitCritical_SSR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_HitCritical_SSR_Effect": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Other",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitCritical"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Team",
                  "key": "RogueHitCritical_Dungeon_Sub_CD",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.CreateGadget",
                  "target": "CurLocalAvatar",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornByTarget"
                  },
                  "gadgetID": 44000311,
                  "campID": 1001,
                  "campTargetType": "Enemy"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "modifierName": "UNIQUE_RogueHitCritical_Dungeon_Sub_CD"
                }
              ]
            }
          ]
        },
        "UNIQUE_RogueHitCritical_Dungeon_Sub_CD": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "LevelEntity_RogueBuff_RogueBuff_CD_P1"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "RogueHitCritical_Dungeon_Sub_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "RogueHitCritical_Dungeon_Sub_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_DashStaminaReduction_SR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_DashStaminaReduction",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_DashStaminaReduction"
          ]
        }
      ],
      "modifiers": {
        "Rogue_DashStaminaReduction": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "CurTeamAvatars",
              "doOffStage": true,
              "modifierName": "UNIQUE_DashStaminaReduction"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "doOffStage": true,
              "modifierName": "Razor_DashStaminaReduction_Handler"
            }
          ]
        },
        "Razor_DashStaminaReduction_Handler": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "CurTeamAvatars",
              "doOffStage": true,
              "modifierName": "UNIQUE_DashStaminaReduction"
            }
          ]
        },
        "UNIQUE_DashStaminaReduction": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToStateIDMixin",
              "stateIDs": [
                "Sprint",
                "SprintBS"
              ],
              "modifierName": "DashStamina_Reduction"
            }
          ]
        },
        "DashStamina_Reduction": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_CostStaminaRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            }
          }
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_TEST6_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ExtraAttack",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ExtraAttack_SSR"
          ]
        }
      ],
      "modifiers": {
        "Rogue_ExtraAttack_SSR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_SERVER_Stamina_ExtraAttack_Dungeon"
            }
          ]
        },
        "UNIQUE_SERVER_Stamina_ExtraAttack_Dungeon": {
          "stacking": "Multiple",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachToStateIDMixin",
              "stateIDs": [
                "Attack01",
                "Attack02",
                "Attack03",
                "Attack04",
                "Attack05",
                "Attack06",
                "ExtraAttack_BS",
                "ExtraAttack_Charge",
                "ExtraAttack",
                "ExtraAttack_AS",
                "ExtraAttack1",
                "ExtraAttack2",
                "ExtraAttack3",
                "Katana_ExtraAttack",
                "Gandalfr_ExtraAttack"
              ],
              "modifierName": "Stamina_ExtraAttack_Dungeon_Sub"
            }
          ]
        },
        "Stamina_ExtraAttack_Dungeon_Sub": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_CostStaminaRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            }
          }
        }
      }
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_TEST7_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SR_PickupTriggerAOE",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_PickupTriggerAOE_SR"
          ]
        }
      ],
      "abilitySpecials": {
        "Value_AreaAttackCD": {
          "type": "float",
          "dynamicValue": 5.0
        },
        "Value_DamageRate": {
          "type": "float",
          "dynamicValue": 8.32
        },
        "Value_DamageSystemValue": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_PickupTriggerAOE_SR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "Rogue_PickupTriggerAOE_SR_Effect"
            }
          ]
        },
        "Rogue_PickupTriggerAOE_SR_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
              "elementTypes": [
                "Fire",
                "Water",
                "Electric",
                "Ice"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Team",
                      "key": "_ActivityAbility_SuperTrial_GainShieldAttack_CD",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "TriggerGainShieldAreaAttack"
                }
              ]
            }
          ]
        },
        "TriggerGainShieldAreaAttack": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "modifierName": "UNIQUE_ActivityAbility_SuperTrial_GainShieldAttack_TeamCD"
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_GainWave_01"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "target": "Applier",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      }
                    },
                    "onGround": true
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "ignoreAttackerProperty": true,
                    "enBreak": 0.0,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "Value_DamageRate"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "Value_DamageSystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true,
                    "ignoreModifyDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "",
                    "hitImpulseType": "LV1"
                  }
                }
              },
              "targetType": "Enemy"
            }
          ]
        },
        "UNIQUE_ActivityAbility_SuperTrial_GainShieldAttack_TeamCD": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Value_AreaAttackCD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_ActivityAbility_SuperTrial_GainShieldAttack_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ClearGlobalValue",
              "key": "_ActivityAbility_SuperTrial_GainShieldAttack_CD"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "Value_DamageSystemValue",
          "type": "ElementLevelCo"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Activity_Rogue_TEST8_SSR",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin",
          "globalValueKey": "SGV_ROGUE_SSR_ExtraAreaAttack",
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "Rogue_ExtraAreaAttack_SR"
          ]
        }
      ],
      "abilitySpecials": {
        "LevelEntity_TowerBuff_CD_P1": {
          "type": "float",
          "dynamicValue": 0.1
        },
        "LevelEntity_TowerBuff_Damage_P2": {
          "type": "float",
          "dynamicValue": 8.32
        },
        "LevelEntity_AvatarDot_SystemValue": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "Rogue_ExtraAreaAttack_SR": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.LocalAvatarsMixin",
              "modifierName": "UNIQUE_Rogue_ExtraAreaAttack_SR_Effect"
            }
          ]
        },
        "UNIQUE_Rogue_ExtraAreaAttack_SR_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_LevelEntity_TowerBuff_ExtraAreaAttack"
            },
            {
              "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
              "key": "LevelEntity_AvatarDot_SystemValue",
              "type": "ElementLevelCo"
            }
          ]
        },
        "UNIQUE_LevelEntity_TowerBuff_ExtraAreaAttack": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Other",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "ExtraAttack"
                  ]
                }
              ],
              "modifierName": "LevelEntity_TowerBuff_ExtraAreaAttack_02"
            }
          ]
        },
        "LevelEntity_TowerBuff_ExtraAreaAttack_01": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "LevelEntity_TowerBuff_ExtraAreaAttack_02"
            }
          ]
        },
        "LevelEntity_TowerBuff_ExtraAreaAttack_02": {
          "stacking": "Multiple",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onKill": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Stages_GainWave_01"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "target": "Caster",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackSphere",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementRank": 3.0,
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 25.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Pierce",
                    "enBreak": 7.22,
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "LevelEntity_TowerBuff_Damage_P2"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "LevelEntity_AvatarDot_SystemValue"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    },
                    "trueDamage": true,
                    "ignoreModifyDamage": true
                  },
                  "hitPattern": {
                    "onHitEffectName": "",
                    "hitImpulseType": "LV2",
                    "hitHaltTimeScale": 0.05
                  },
                  "cameraShake": {},
                  "canBeModifiedBy": "OriginOwner"
                }
              },
              "targetType": "Enemy"
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_HoundStrikeHeight_ForRogue",
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_ROUGUE_HOUNDSTRIKE_TAG_",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "isDynamicAbility": true
    }
  }
]