[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_WhiteBox_Thorns",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToGadgetStateMixin",
          "isUnique": true,
          "gadgetState": 201,
          "modifierName": "UNIQUE_MonsterAffix_WhiteBox_Thorns_ForGadget"
        }
      ],
      "modifiers": {
        "UNIQUE_MonsterAffix_WhiteBox_Thorns": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WhiteBox_Thorns_Recover"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "ExplodeDamage"
                  ]
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_WhiteBox_Thorns"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WhiteBox_Thorns_Active"
            }
          ]
        },
        "MonsterAffix_WhiteBox_Thorns_Active": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Electric_ElementShield_BS"
              }
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.DamageByAttackValue",
              "target": "Target",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTERAFFIX_WHITEBOX_THORNS_COOLDOWN",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "forceByCaster": true,
                  "compareType": "NoneOrEqual"
                }
              ],
              "attackInfo": {
                "attackTag": "",
                "attenuationTag": "",
                "attenuationGroup": "default",
                "attackProperty": {
                  "damagePercentage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.5
                  },
                  "damagePercentageRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "elementType": "Electric",
                  "elementDurability": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 25.0
                  },
                  "enBreak": 0.0
                },
                "hitPattern": {
                  "onHitEffectName": "none",
                  "hitImpulseType": "LV0"
                }
              }
            },
            {
              "$type": "MoleMole.Config.DamageByAttackValue",
              "target": "TargetOwner",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTERAFFIX_WHITEBOX_THORNS_COOLDOWN",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "forceByCaster": true,
                  "compareType": "NoneOrEqual"
                }
              ],
              "attackInfo": {
                "attackTag": "",
                "attenuationTag": "",
                "attenuationGroup": "default",
                "attackProperty": {
                  "damagePercentage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.5
                  },
                  "damagePercentageRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "elementType": "Electric",
                  "elementDurability": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 25.0
                  },
                  "enBreak": 0.0
                },
                "hitPattern": {
                  "onHitEffectName": "none",
                  "hitImpulseType": "LV0"
                }
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTERAFFIX_WHITEBOX_THORNS_COOLDOWN",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -9.0
              },
              "key": "_MONSTERAFFIX_WHITEBOX_THORNS_COOLDOWN",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "MonsterAffix_WhiteBox_Thorns_Recover": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 30.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_MonsterAffix_WhiteBox_Thorns"
            }
          ]
        },
        "UNIQUE_MonsterAffix_WhiteBox_Thorns_ForGadget": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_MonsterAffix_WhiteBox_Thorns"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_MonsterAffix_WhiteBox_Thorns"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_WhiteBox_RandomThunder",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToGadgetStateMixin",
          "isUnique": true,
          "gadgetState": 201,
          "modifierName": "UNIQUE_MonsterAffix_WhiteBox_RandomThunder_ForGadget"
        }
      ],
      "modifiers": {
        "UNIQUE_MonsterAffix_WhiteBox_RandomThunder": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Electric_ElementShield_BS"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WhiteBox_RandomThunder_Recover"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "SuperconductorDamage"
                  ]
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_WhiteBox_RandomThunder"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "topLimit": 1,
                "sortType": "Random",
                "shapeName": "CircleR10",
                "campTargetType": "Enemy",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Avatar"
                  ]
                }
              ],
              "modifierName": "MonsterAffix_WhiteBox_RandomThunder_HitLatency"
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Follow_AlertCircle_20"
              }
            }
          ]
        },
        "MonsterAffix_WhiteBox_RandomThunder_HitLatency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WhiteBox_RandomThunder_Hit"
            }
          ]
        },
        "MonsterAffix_WhiteBox_RandomThunder_Hit": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Fatuus_Summoner_ThunderDrop"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "onGround": true,
                "alongGround": true
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      }
                    },
                    "onGround": true,
                    "alongGround": true
                  },
                  "height": 1.0,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 1.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Electric",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "strikeType": "Default",
                    "enBreak": 100.0
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV4",
                    "hitHaltTimeScale": 0.05
                  },
                  "forceCameraShake": true,
                  "cameraShake": {
                    "shakeType": "CustomVector",
                    "shakeRange": 0.04,
                    "shakeTime": 0.09,
                    "shakeDir": {
                      "y": 1.0
                    }
                  }
                }
              },
              "targetType": "All"
            }
          ]
        },
        "MonsterAffix_WhiteBox_RandomThunder_Recover": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 30.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_MonsterAffix_WhiteBox_RandomThunder"
            }
          ]
        },
        "UNIQUE_MonsterAffix_WhiteBox_RandomThunder_ForGadget": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_MonsterAffix_WhiteBox_RandomThunder"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_MonsterAffix_WhiteBox_RandomThunder"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_FireDebuff_LoseHP",
      "abilitySpecials": {
        "MonsterAffix_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "EnergyLeakage_DamageRatio": {
          "type": "float",
          "dynamicValue": 0.6
        }
      },
      "modifiers": {
        "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByStateIDMixin",
              "stateIDs": [
                "BeHitThrow",
                "Struggle"
              ],
              "enterActions": [
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_FireDebuff_LoseHP_Area"
                }
              ],
              "exitActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_FireDebuff_LoseHP_Area"
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_FootCircle_Fire"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_Area"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_Area"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_Impulse_Fire"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_Impulse1"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_Impulse2"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_Impulse3"
            }
          ]
        },
        "MonsterAffix_FireDebuff_LoseHP_Area": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_ImpulseArea_Fire"
              }
            }
          ]
        },
        "MonsterAffix_FireDebuff_LoseHP_Impulse1": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_FireDebuff_LoseHP_Impulse2": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 10.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_FireDebuff_LoseHP_Impulse3": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_FireDebuff_LoseHP_TeamSearcher"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "MonsterAffix_FireDebuff_LoseHP_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Team"
            }
          ]
        },
        "MonsterAffix_FireDebuff_LoseHP_TeamRemover": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Team"
            }
          ]
        },
        "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixin",
              "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Slave"
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_FireDebuff_LoseHP"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_FireDebuff_LoseHP_OnAdded"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Slave"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "CurTeamAvatars",
              "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Slave"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.DamageByAttackValue",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "attackInfo": {
                "attackTag": "",
                "attenuationTag": "",
                "attenuationGroup": "default",
                "attackProperty": {
                  "damagePercentageRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "elementType": "Fire",
                  "elementDurability": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "ignoreAttackerProperty": true,
                  "enBreak": 0.0,
                  "damageExtra": {
                    "isFormula": true,
                    "formula": [
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "EnergyLeakage_DamageRatio"
                      },
                      {
                        "isOperator": false,
                        "isDynamic": true,
                        "dynamicKey": "MonsterAffix_ElementLevelCo"
                      },
                      {
                        "isOperator": true,
                        "operation": "Mul"
                      }
                    ]
                  }
                },
                "hitPattern": {
                  "onHitEffectName": "",
                  "hitImpulseType": "LV0",
                  "retreatType": "ByHitDirection"
                }
              }
            }
          ]
        },
        "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Slave": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Fire",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 25.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "target": "Self",
                      "element": "Fire"
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Team"
            }
          ],
          "buffID": 90002
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Host"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "MonsterAffix_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "AllPlayerAvatars",
          "modifierName": "MonsterAffix_FireDebuff_LoseHP_TeamRemover"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_MonsterAffix_FireDebuff_LoseHP_Host"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_IceDebuff_ExtraStaminaCost",
      "abilitySpecials": {
        "MonsterAffix_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "CoolDownIncrease_DamageRatio": {
          "type": "float",
          "dynamicValue": 0.3
        }
      },
      "modifiers": {
        "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByStateIDMixin",
              "stateIDs": [
                "BeHitThrow",
                "Struggle"
              ],
              "enterActions": [
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_Area"
                }
              ],
              "exitActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_Area"
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_FootCircle_Ice"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_Area"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_Area"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_Impulse_Ice"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_Impulse1"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_Impulse2"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_Impulse3"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ExtraStaminaCost_Area": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_ImpulseArea_Ice"
              }
            }
          ]
        },
        "MonsterAffix_IceDebuff_ExtraStaminaCost_Impulse1": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ExtraStaminaCost_Impulse2": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 10.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ExtraStaminaCost_Impulse3": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_TeamSearcher"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "MonsterAffix_IceDebuff_ExtraStaminaCost_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Team"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ExtraStaminaCost_TeamRemover": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Team"
            }
          ]
        },
        "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixin",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Slave"
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_IceDebuff_ExtraStaminaCost"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_IceDebuff_ExtraStaminaCost_OnAdded"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Slave"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "CurTeamAvatars",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Slave"
            }
          ]
        },
        "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Slave": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Ice",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 25.0
          },
          "properties": {
            "Actor_CostStaminaRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "element": "Ice"
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Team"
            }
          ],
          "buffID": 90003
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Host"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "MonsterAffix_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "AllPlayerAvatars",
          "modifierName": "MonsterAffix_IceDebuff_ExtraStaminaCost_TeamRemover"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ExtraStaminaCost_Host"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery",
      "modifiers": {
        "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByStateIDMixin",
              "stateIDs": [
                "BeHitThrow",
                "Struggle"
              ],
              "enterActions": [
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Area"
                }
              ],
              "exitActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Area"
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_FootCircle_Ice"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Area"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Area"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_Impulse_Ice"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Impulse1"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Impulse2"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Impulse3"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Area": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_ImpulseArea_Ice"
              }
            }
          ]
        },
        "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Impulse1": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Impulse2": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 10.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ForbidStaminaRecovery_Impulse3": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_TeamSearcher"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "MonsterAffix_IceDebuff_ForbidStaminaRecovery_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Team"
            }
          ]
        },
        "MonsterAffix_IceDebuff_ForbidStaminaRecovery_TeamRemover": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Team"
            }
          ]
        },
        "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixin",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Slave"
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_IceDebuff_ExtraStaminaCost"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_IceDebuff_ExtraStaminaCost_OnAdded"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Slave"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "CurTeamAvatars",
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Slave"
            }
          ]
        },
        "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Slave": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Ice",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 25.0
          },
          "properties": {
            "Actor_RecoverStaminaRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -9.0
            }
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "element": "Ice"
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Team"
            }
          ],
          "buffID": 90003
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Host"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "MonsterAffix_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "AllPlayerAvatars",
          "modifierName": "MonsterAffix_IceDebuff_ForbidStaminaRecovery_TeamRemover"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_MonsterAffix_IceDebuff_ForbidStaminaRecovery_Host"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_WaterDebuff_CoolDownIncrement",
      "abilitySpecials": {
        "MonsterAffix_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "EnergyLeakage_DamageRatio": {
          "type": "float",
          "dynamicValue": 0.3
        }
      },
      "modifiers": {
        "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByStateIDMixin",
              "stateIDs": [
                "BeHitThrow",
                "Struggle"
              ],
              "enterActions": [
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_Area"
                }
              ],
              "exitActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_Area"
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_FootCircle_Water"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_Area"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_Area"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_Impulse_Water"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_Impulse1"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_Impulse2"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_Impulse3"
            }
          ]
        },
        "MonsterAffix_WaterDebuff_CoolDownIncrement_Area": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_ImpulseArea_Water"
              }
            }
          ]
        },
        "MonsterAffix_WaterDebuff_CoolDownIncrement_Impulse1": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_WaterDebuff_CoolDownIncrement_Impulse2": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 10.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_WaterDebuff_CoolDownIncrement_Impulse3": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_TeamSearcher"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "MonsterAffix_WaterDebuff_CoolDownIncrement_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Team"
            }
          ]
        },
        "MonsterAffix_WaterDebuff_CoolDownIncrement_TeamRemover": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Team"
            }
          ]
        },
        "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixin",
              "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Slave"
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_WaterDebuff_CoolDownIncrement"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_WaterDebuff_CoolDownIncrement_OnAdded"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Slave"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "CurTeamAvatars",
              "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Slave"
            }
          ]
        },
        "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Slave": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Water",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 25.0
          },
          "properties": {
            "Actor_SkillCDMinusRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -1.0
            }
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "target": "Self",
                      "element": "Water"
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Team"
            }
          ],
          "buffID": 90004
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Host"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "MonsterAffix_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "AllPlayerAvatars",
          "modifierName": "MonsterAffix_WaterDebuff_CoolDownIncrement_TeamRemover"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_MonsterAffix_WaterDebuff_CoolDownIncrement_Host"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_ElecDebuff_LoseEnergy",
      "abilitySpecials": {
        "MonsterAffix_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "EnergyLeakage_DamageRatio": {
          "type": "float",
          "dynamicValue": 0.3
        }
      },
      "modifiers": {
        "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByStateIDMixin",
              "stateIDs": [
                "BeHitThrow",
                "Struggle"
              ],
              "enterActions": [
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_Area"
                }
              ],
              "exitActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_GENERALSKILL_IMPULSE_TRIGGER",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_Area"
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_FootCircle_Elec"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_Area"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_Area"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_Impulse_Elec"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_Impulse1"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_Impulse2"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_Impulse3"
            }
          ]
        },
        "MonsterAffix_ElecDebuff_LoseEnergy_Area": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_ImpulseArea_Elec"
              }
            }
          ]
        },
        "MonsterAffix_ElecDebuff_LoseEnergy_Impulse1": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 5.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_ElecDebuff_LoseEnergy_Impulse2": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 10.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_TeamSearcher"
            }
          ]
        },
        "MonsterAffix_ElecDebuff_LoseEnergy_Impulse3": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "LesserOrEqual",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                }
              ],
              "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_TeamSearcher"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_GENERALSKILL_IMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "MonsterAffix_ElecDebuff_LoseEnergy_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Team"
            }
          ]
        },
        "MonsterAffix_ElecDebuff_LoseEnergy_TeamRemover": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Team"
            }
          ]
        },
        "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixin",
              "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Slave"
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_ElecDebuff_LoseEnergy"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_CommonSkill_ElecDebuff_LoseEnergy_OnAdded"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "CurLocalAvatar",
              "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Slave"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "CurTeamAvatars",
              "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Slave"
            }
          ]
        },
        "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Slave": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Electric",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 25.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ReviveElemEnergyMixin",
              "period": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 3.0
              },
              "baseEnergy": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -5.0
              },
              "ratio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByNot",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByHasElement",
                      "target": "Self",
                      "element": "Electric"
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Team"
            }
          ],
          "buffID": 90001
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Host"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "MonsterAffix_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "target": "AllPlayerAvatars",
          "modifierName": "MonsterAffix_ElecDebuff_LoseEnergy_TeamRemover"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_MonsterAffix_ElecDebuff_LoseEnergy_Host"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_IceDamage_Prison",
      "modifiers": {
        "UNIQUE_GeneralSkill_IceDamage_Prison_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 12.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_IceDamage_FootCircle"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "SelfAttackTarget",
              "modifierName": "GeneralSkill_IceDamage_Prison_TeamSearcher"
            }
          ]
        },
        "GeneralSkill_IceDamage_Prison_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_IceDamage_Prison_Team"
            }
          ]
        },
        "UNIQUE_GeneralSkill_IceDamage_Prison_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.6
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_GeneralSkill_IceDamage_Prison_Creator"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "modifierName": "UNIQUE_GeneralSkill_IceDamage_Prison_Creator"
            },
            {
              "$type": "MoleMole.Config.KillGadget",
              "gadgetInfo": {
                "sortType": "Reversed",
                "configID": 49001001
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_IceDamage_Prison_Creator": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.8
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.6
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_IceDamage_Alert"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 49001001,
              "campID": 4001
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_IceDamage_Prison_Host"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_IceDamage_Prison_Host"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "SelfAttackTarget",
          "modifierName": "GeneralSkill_IceDamage_Prison_TeamSearcher"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "target": "AllTeams",
          "modifierName": "UNIQUE_GeneralSkill_IceDamage_Prison_Team"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_IceDamage_Prison_Center",
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_IceDamage_Prison": {
          "type": "float",
          "dynamicValue": 4.0
        }
      },
      "modifiers": {
        "GeneralSkill_IceDamage_Prison_Effect": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 2.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_IceDamage_Prison"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SendEffectTrigger",
              "parameter": "Prison_Die",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_IceDamage_Prison"
              }
            },
            {
              "$type": "MoleMole.Config.EnablePushColliderName",
              "pushColliderNames": [
                "Collider"
              ]
            }
          ]
        },
        "GeneralSkill_IceDamage_Prison_EnableCollider": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.25
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.EnablePushColliderName",
              "pushColliderNames": [
                "Collider"
              ]
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.EnablePushColliderName",
              "pushColliderNames": [
                "Collider"
              ],
              "setEnable": true
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_IceDamage_Prison_EnableCollider"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_IceDamage_Prison_Effect"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "doOffStage": true,
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackBox",
              "triggerType": "TriggerNoRepeat",
              "checkHitLayerType": "Both",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByCollisionPoint"
              },
              "size": {
                "x": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.4
                },
                "y": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.4
                },
                "z": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.4
                }
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "MonsterAffix_IceDamage_Prison",
              "attenuationGroup": "MonsterAffix_GeneralSkill_IceDamage_Prison",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Ice",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 25.0
                },
                "ignoreAttackerProperty": true,
                "strikeType": "Default",
                "damageExtra": {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_ElementLevelCo"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_IceDamage_Prison"
                    },
                    {
                      "isOperator": true,
                      "operation": "Mul"
                    }
                  ]
                }
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitImpulseType": "LV3"
              }
            }
          },
          "targetType": "Enemy"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_IceDamage_Prison_Effect"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WindDamage_Vortex",
      "modifiers": {
        "UNIQUE_GeneralSkill_WindDamage_Vortex_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 12.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_WindDamage_FootCircle"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "SelfAttackTarget",
              "modifierName": "GeneralSkill_WindDamage_Vortex_TeamSearcher"
            }
          ]
        },
        "GeneralSkill_WindDamage_Vortex_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_WindDamage_Vortex_Team"
            }
          ]
        },
        "UNIQUE_GeneralSkill_WindDamage_Vortex_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 2.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_GeneralSkill_WindDamage_Vortex_Creator"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "modifierName": "UNIQUE_GeneralSkill_WindDamage_Vortex_Creator"
            },
            {
              "$type": "MoleMole.Config.KillGadget",
              "gadgetInfo": {
                "sortType": "Reversed",
                "configID": 49001002
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_WindDamage_Vortex_Creator": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.7
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_WindDamage_Vortex_Alert"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "GeneralSkill_WindDamage_Vortex_Alert"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 49001002,
              "campID": 4001
            }
          ]
        },
        "GeneralSkill_WindDamage_Vortex_Alert": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_WindDamage_Alert"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_WindDamage_Vortex_Host"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_WindDamage_Vortex_Host"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "SelfAttackTarget",
          "modifierName": "GeneralSkill_WindDamage_Vortex_TeamSearcher"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "target": "AllTeams",
          "modifierName": "UNIQUE_GeneralSkill_WindDamage_Vortex_Team"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WindDamage_Vortex_WindZone",
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_WindDamage_Vortex_WindZone": {
          "type": "float",
          "dynamicValue": 1.0
        }
      },
      "modifiers": {
        "VortexWindZone": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.4
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.WindZoneMixin",
              "shapeName": "CircleR7.5H6",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf"
              },
              "strength": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              },
              "attenuation": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.2
              },
              "innerRadius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.5
              },
              "targetType": "Enemy",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  }
                }
              ],
              "modifierName": ""
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_WindDamage_Vortex"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_WindDamage_Vortex_Explode_Latency"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      }
                    }
                  },
                  "height": 3.0,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "Group1",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Wind",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 25.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_ElementLevelCo"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_WindDamage_Vortex_WindZone"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2"
                  }
                }
              },
              "targetType": "Enemy"
            }
          ]
        },
        "GeneralSkill_WindDamage_Vortex_Explode_Latency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.WindZoneMixin",
              "shapeName": "CircleR7.5H6",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf"
              },
              "strength": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 5.0
              },
              "attenuation": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.2
              },
              "innerRadius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.5
              },
              "targetType": "Enemy",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetWeight",
                  "logic": "LesserOrEqual",
                  "weight": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  }
                }
              ],
              "modifierName": ""
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_WindDamage_Vortex_Explode"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "abilityName": "GeneralSkill_WindDamage_Vortex_Explode"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "VortexWindZone"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WindDamage_Vortex_Explode",
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_WindDamage_Vortex_Explode": {
          "type": "float",
          "dynamicValue": 3.0
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        },
        {
          "$type": "MoleMole.Config.DamageByAttackValue",
          "otherTargets": {
            "$type": "MoleMole.Config.SelectTargetsByShape",
            "shapeName": "CircleR7.5H6",
            "campTargetType": "Enemy",
            "sizeRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          },
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.6
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          },
          "attackInfo": {
            "attackTag": "",
            "attenuationTag": "",
            "attenuationGroup": "default",
            "attackProperty": {
              "damagePercentage": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "damagePercentageRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "elementType": "Wind",
              "elementDurability": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 50.0
              },
              "ignoreAttackerProperty": true,
              "strikeType": "Default",
              "enBreak": 200.0,
              "damageExtra": {
                "isFormula": true,
                "formula": [
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "GeneralSkill_ElementLevelCo"
                  },
                  {
                    "isOperator": false,
                    "isDynamic": true,
                    "dynamicKey": "GeneralSkill_WindDamage_Vortex_Explode"
                  },
                  {
                    "isOperator": true,
                    "operation": "Mul"
                  }
                ]
              }
            },
            "hitPattern": {
              "onHitEffectName": "default",
              "hitImpulseType": "LV5"
            }
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_RockDamage_LowWave",
      "modifiers": {
        "UNIQUE_GeneralSkill_RockDamage_LowWave_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_RockDamage_FootCircle"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "SelfAttackTarget",
              "modifierName": "GeneralSkill_RockDamage_LowWave_TeamSearcher"
            }
          ]
        },
        "GeneralSkill_RockDamage_LowWave_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_RockDamage_LowWave_Team"
            }
          ]
        },
        "UNIQUE_GeneralSkill_RockDamage_LowWave_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 6.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_GeneralSkill_RockDamage_LowWave_Creator"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "modifierName": "UNIQUE_GeneralSkill_RockDamage_LowWave_Creator"
            },
            {
              "$type": "MoleMole.Config.KillGadget",
              "gadgetInfo": {
                "sortType": "Reversed",
                "configID": 49001003
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_RockDamage_LowWave_Creator": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_RockDamage_Alert"
              }
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 8.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 49001003,
              "campID": 4001
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_RockDamage_Alert"
              }
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 2.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 8.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 49001003,
              "campID": 4001
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_RockDamage_LowWave_Host"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_RockDamage_LowWave_Host"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "SelfAttackTarget",
          "modifierName": "GeneralSkill_RockDamage_LowWave_TeamSearcher"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "target": "AllTeams",
          "modifierName": "UNIQUE_GeneralSkill_RockDamage_LowWave_Team"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_RockDamage_LowWave_Emitter",
      "modifiers": {
        "BarrageWave1": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.9
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_OFFSET_RANDOM_Z",
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -0.5
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "globalValueKey": "_OFFSET_RANDOM_Z",
              "overrideMapKey": "offset_random_z"
            },
            {
              "$type": "MoleMole.Config.TriggerBullet",
              "bulletID": 49001004,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.75
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "offset_random_z"
                  }
                },
                "onGround": true,
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
                  "attachPointName": "BarrageAttachPoint1",
                  "attachPointTargetType": "Self"
                },
                "attachPointName": "BarrageAttachPoint1"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_OFFSET_RANDOM_Z",
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -0.5
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "globalValueKey": "_OFFSET_RANDOM_Z",
              "overrideMapKey": "offset_random_z"
            },
            {
              "$type": "MoleMole.Config.TriggerBullet",
              "bulletID": 49001004,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.75
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "offset_random_z"
                  }
                },
                "onGround": true,
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
                  "attachPointName": "BarrageAttachPoint2",
                  "attachPointTargetType": "Self"
                },
                "attachPointName": "BarrageAttachPoint2"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_OFFSET_RANDOM_Z",
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -0.5
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "globalValueKey": "_OFFSET_RANDOM_Z",
              "overrideMapKey": "offset_random_z"
            },
            {
              "$type": "MoleMole.Config.TriggerBullet",
              "bulletID": 49001004,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.75
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "offset_random_z"
                  }
                },
                "onGround": true,
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
                  "attachPointName": "BarrageAttachPoint3",
                  "attachPointTargetType": "Self"
                },
                "attachPointName": "BarrageAttachPoint3"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_OFFSET_RANDOM_Z",
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -0.5
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "globalValueKey": "_OFFSET_RANDOM_Z",
              "overrideMapKey": "offset_random_z"
            },
            {
              "$type": "MoleMole.Config.TriggerBullet",
              "bulletID": 49001004,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.75
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "offset_random_z"
                  }
                },
                "onGround": true,
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
                  "attachPointName": "BarrageAttachPoint4",
                  "attachPointTargetType": "Self"
                },
                "attachPointName": "BarrageAttachPoint4"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_OFFSET_RANDOM_Z",
              "randomInRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.5
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -0.5
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "globalValueKey": "_OFFSET_RANDOM_Z",
              "overrideMapKey": "offset_random_z"
            },
            {
              "$type": "MoleMole.Config.TriggerBullet",
              "bulletID": 49001004,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.75
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": true,
                    "dynamicKey": "offset_random_z"
                  }
                },
                "onGround": true,
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByAttachPoint",
                  "attachPointName": "BarrageAttachPoint5",
                  "attachPointTargetType": "Self"
                },
                "attachPointName": "BarrageAttachPoint5"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "BarrageWave1"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "BarrageWave1"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_RockDamage_LowWave_SingleBullet",
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_RockDamage_LowWave": {
          "type": "float",
          "dynamicValue": 2.0
        }
      },
      "modifiers": {
        "BulletTrigger": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.25
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.EnableBulletCollisionPluginTrigger"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.EnableBulletCollisionPluginTrigger",
              "setEnable": true
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_GeneralSkill_RockDamage_Bullet"
          }
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "BulletTrigger"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackSphere",
              "triggerType": "TriggerNoRepeat",
              "ignoreMassive": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByCollisionPoint"
              },
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.25
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Rock",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 25.0
                },
                "ignoreAttackerProperty": true,
                "strikeType": "Blunt",
                "enBreak": 1.0,
                "damageExtra": {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_ElementLevelCo"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_RockDamage_LowWave"
                    },
                    {
                      "isOperator": true,
                      "operation": "Mul"
                    }
                  ]
                }
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitImpulseType": "LV2"
              },
              "cameraShake": {
                "shakeRange": 0.06,
                "shakeTime": 0.09
              }
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_ElecDamage_Arc",
      "modifiers": {
        "UNIQUE_GeneralSkill_ElecDamage_Arc_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 12.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_FootCircle"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "SelfAttackTarget",
              "modifierName": "GeneralSkill_ElecDamage_Arc_TeamSearcher"
            }
          ]
        },
        "GeneralSkill_ElecDamage_Arc_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_Arc_Team"
            }
          ]
        },
        "UNIQUE_GeneralSkill_ElecDamage_Arc_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_Alert"
              }
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 7.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 49001012,
              "campID": 4001
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.464
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                },
                "onGround": true
              },
              "gadgetID": 49001005,
              "campID": 4001
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "CurLocalAvatar",
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -3.464
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              },
              "gadgetID": 49001005,
              "campID": 4001
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.KillGadget",
              "gadgetInfo": {
                "sortType": "Reversed",
                "configID": 49001005
              }
            },
            {
              "$type": "MoleMole.Config.KillGadget",
              "gadgetInfo": {
                "sortType": "Reversed",
                "configID": 49001012
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_ElecDamage_Arc_Host"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_ElecDamage_Arc_Host"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "SelfAttackTarget",
          "modifierName": "GeneralSkill_ElecDamage_Arc_TeamSearcher"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "target": "AllTeams",
          "modifierName": "UNIQUE_GeneralSkill_ElecDamage_Arc_Team"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_ElecDamage_Arc_Charge",
      "modifiers": {
        "GeneralSkill_ElecDamage_TriggerLatency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_ElecDamage_Arc_ChargeEffect"
            }
          ]
        },
        "GeneralSkill_ElecDamage_Arc_ChargeEffect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_Arc_Charge"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_ElecDamage_TriggerLatency"
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_Arc_Charge_BS"
          }
        },
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_GENERALSKILL_ELECDAMAGE_ARC_DES",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_Arc_Charge_BS"
          }
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_ElecDamage_Arc_ChargeEffect"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_ElecDamage_Arc_CenterCharge",
      "modifiers": {
        "GeneralSkill_ElecDamage_TriggerLatency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_ElecDamage_Arc_ArcTrigger"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_ElecDamage_Arc_CenterChargeEffect"
            }
          ]
        },
        "GeneralSkill_ElecDamage_Arc_CenterChargeEffect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_Arc_Charge"
              }
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_Arc_Current"
              }
            }
          ]
        },
        "GeneralSkill_ElecDamage_Arc_ArcTrigger": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR15",
                "campTargetType": "SelfCamp",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetType",
                  "isTarget": false
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_GENERALSKILL_ELECDAMAGE_ARC_DES",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.SetSelfAttackTarget",
                  "target": "Target"
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValueByTargetDistance",
                  "target": "Target",
                  "key": "_GENERALSKILL_ELECDAMAGE_ARC_CENTER_DISTANCE"
                },
                {
                  "$type": "MoleMole.Config.TriggerBullet",
                  "bulletID": 49001006,
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                    "direction": {
                      "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
                    },
                    "attachPointName": "RootNode"
                  }
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.FireEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_Arc_Charge_BS"
          }
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_ElecDamage_TriggerLatency"
        },
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_GENERALSKILL_ELECDAMAGE_ARC_CENTER",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_ElecDamage_Arc_ArcTrigger"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_ElecDamage_Arc_CenterChargeEffect"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_ElecDamage_Arc_TriggerBullet",
      "abilitySpecials": {
        "DischargeTargetDistance": {
          "type": "float",
          "dynamicValue": 10.0
        },
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_ElecDamage_Arc": {
          "type": "float",
          "dynamicValue": 0.6
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "isFromOwner": true,
          "globalValueKey": "_GENERALSKILL_ELECDAMAGE_ARC_CENTER_DISTANCE",
          "overrideMapKey": "DischargeTargetDistance"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        },
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackBox",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
                }
              },
              "size": {
                "x": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.6
                },
                "y": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.2
                },
                "z": {
                  "isFormula": false,
                  "isDynamic": true,
                  "dynamicKey": "DischargeTargetDistance"
                }
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Electric",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 25.0
                },
                "ignoreAttackerProperty": true,
                "strikeType": "Default",
                "damageExtra": {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_ElementLevelCo"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_ElecDamage_Arc"
                    },
                    {
                      "isOperator": true,
                      "operation": "Mul"
                    }
                  ]
                }
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitImpulseType": "LV1",
                "retreatType": "ByOriginOwner"
              }
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_FireDamage_TracingImpulse",
      "modifiers": {
        "UNIQUE_GeneralSkill_FireDamage_TracingImpulse_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 20.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_FireDamage_FootCircle"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_FireDamage_TracingImpulse_Trigger"
            }
          ]
        },
        "GeneralSkill_FireDamage_TracingImpulse_Trigger": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 7.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERSKILL_FIREDAMAGE_TRACINGIMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.TriggerBullet",
              "bulletID": 49001008,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.7
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.5
                  }
                },
                "onGround": true,
                "direction": {
                  "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
                },
                "alongGround": true
              },
              "ownerIs": "Caster",
              "lifeByOwnerIsAlive": true
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_GENERSKILL_FIREDAMAGE_TRACINGIMPULSE_TRIGGER",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_FireDamage_TracingImpulse_Host"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_FireDamage_TracingImpulse_Host"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_FireDamage_TracingImpulse_Bullet",
      "modifiers": {
        "GeneralSkill_FireDamage_TracingImpulse_Bullet_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_FireDamage_TracingBullet"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_FireDamage_TracingImpulse_Bullet_Effect"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.KillSelf"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_FireDamage_TracingImpulse_Bullet_Effect"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_FireDamage_TracingImpulse_Bullet_Die",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.CreateGadget",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetHPRatio",
              "target": "OriginOwner",
              "HPRatio": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "ownerIs": "OriginOwner",
          "lifeByOwnerIsAlive": true,
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            "onGround": true
          },
          "gadgetID": 49001009,
          "campID": 4001
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_FireDamage_TracingImpulse_DamageGadget",
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_FireDamage_TracingImpulse": {
          "type": "float",
          "dynamicValue": 1.5
        }
      },
      "modifiers": {
        "GeneralSkill_FireDamage_TracingImpulse_DamageGadget_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_FireDamage_DamageGadget"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.7
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                },
                "onGround": true
              }
            }
          ]
        },
        "FireImpulse_Trigger": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.6
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.7
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_FireDamage_DamageImpulse"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      }
                    }
                  },
                  "height": 3.0,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.75
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Fire",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "attackType": "Range",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_ElementLevelCo"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_FireDamage_TracingImpulse"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV1"
                  },
                  "forceCameraShake": true,
                  "cameraShake": {
                    "shakeType": "CustomVector",
                    "shakeRange": 0.04,
                    "shakeTime": 0.12,
                    "shakeDir": {
                      "y": 1.0
                    },
                    "extension": {}
                  }
                }
              },
              "targetType": "Enemy"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_FireDamage_DamageImpulse"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      }
                    }
                  },
                  "height": 3.0,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.75
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Fire",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "attackType": "Range",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_ElementLevelCo"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_FireDamage_TracingImpulse"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV1"
                  },
                  "forceCameraShake": true,
                  "cameraShake": {
                    "shakeType": "CustomVector",
                    "shakeRange": 0.04,
                    "shakeTime": 0.12,
                    "shakeDir": {
                      "y": 1.0
                    },
                    "extension": {}
                  }
                }
              },
              "targetType": "Enemy"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "FireImpulse_Trigger"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_FireDamage_TracingImpulse_DamageGadget_Effect"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_FireDamage_TracingImpulse_DamageGadget_Effect"
        },
        {
          "$type": "MoleMole.Config.SetSelfAttackTarget",
          "otherTargets": {
            "$type": "MoleMole.Config.SelectTargetsByShape",
            "topLimit": 1,
            "entityTypePriority": [
              "Avatar"
            ],
            "sortType": "Nearest",
            "shapeName": "CircleR15",
            "campTargetType": "Enemy",
            "sizeRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "OriginOwner",
              "key": "_GENERSKILL_FIREDAMAGE_TRACINGIMPULSE_TRIGGER",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "bulletID": 49001008,
          "born": {
            "$type": "MoleMole.Config.ConfigBornByTarget",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.7
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            "onGround": true,
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
            },
            "alongGround": true
          },
          "ownerIs": "OriginOwner",
          "lifeByOwnerIsAlive": true
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_FireDamage_TracingImpulse_DamageGadget_NextRound",
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.SetSelfAttackTarget",
          "otherTargets": {
            "$type": "MoleMole.Config.SelectTargetsByShape",
            "topLimit": 1,
            "entityTypePriority": [
              "Avatar"
            ],
            "sortType": "Nearest",
            "shapeName": "CircleR15",
            "campTargetType": "Enemy",
            "sizeRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.0
            }
          }
        },
        {
          "$type": "MoleMole.Config.TriggerBullet",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "OriginOwner",
              "key": "_GENERSKILL_FIREDAMAGE_TRACINGIMPULSE_TRIGGER",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "bulletID": 49001008,
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.7
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            "onGround": true,
            "direction": {
              "$type": "MoleMole.Config.ConfigDirectionByAttackTarget"
            },
            "alongGround": true
          },
          "ownerIs": "OriginOwner",
          "lifeByOwnerIsAlive": true
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WaterDamage_Bubble",
      "modifiers": {
        "UNIQUE_GeneralSkill_WaterDamage_Bubble_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 12.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_WaterDamage_FootCircle"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "SelfAttackTarget",
              "modifierName": "GeneralSkill_WaterDamage_Bubble_TeamSearcher"
            }
          ]
        },
        "GeneralSkill_WaterDamage_Bubble_TeamSearcher": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Team",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Caster",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_WaterDamage_Bubble_Team"
            }
          ]
        },
        "UNIQUE_GeneralSkill_WaterDamage_Bubble_Team": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_WaterDamage_Alert"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Caster",
              "modifierName": "UNIQUE_GeneralSkill_WaterDamage_Bubble_Creator"
            }
          ]
        },
        "UNIQUE_GeneralSkill_WaterDamage_Bubble_Creator": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "Applier",
              "lifeByOwnerIsAlive": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "gadgetID": 49001010,
              "campID": 4001
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "Applier",
              "lifeByOwnerIsAlive": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.2
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "gadgetID": 49001011,
              "campID": 4001
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "Applier",
              "lifeByOwnerIsAlive": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -3.2
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "gadgetID": 49001011,
              "campID": 4001
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "Applier",
              "lifeByOwnerIsAlive": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": -3.2
                  }
                }
              },
              "gadgetID": 49001011,
              "campID": 4001
            },
            {
              "$type": "MoleMole.Config.CreateGadget",
              "target": "Applier",
              "lifeByOwnerIsAlive": true,
              "born": {
                "$type": "MoleMole.Config.ConfigBornByTarget",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.2
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 3.2
                  }
                }
              },
              "gadgetID": 49001011,
              "campID": 4001
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_WaterDamage_Bubble_Host"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_WaterDamage_Bubble_Host"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "SelfAttackTarget",
          "modifierName": "GeneralSkill_WaterDamage_Bubble_TeamSearcher"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "target": "AllTeams",
          "modifierName": "UNIQUE_GeneralSkill_WaterDamage_Bubble_Team"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "UNIQUE_GeneralSkill_WaterDamage_Bubble_Creator"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WaterDamage_Bubble_Center",
      "modifiers": {
        "GeneralSkill_WaterDamage_Bubble_CenterTrigger": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "target": "CurLocalAvatar",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 4.0
                  }
                }
              ],
              "abilityName": "GeneralSkill_WaterDamage_Bubble_Center"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_WaterDamage_Bubble_CenterTrigger"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.CreateGadget",
          "ownerIs": "OriginOwner",
          "lifeByOwnerIsAlive": true,
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.8
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.8
              }
            }
          },
          "gadgetID": 49001011,
          "campID": 4001,
          "campTargetType": "AllExceptSelf"
        },
        {
          "$type": "MoleMole.Config.CreateGadget",
          "ownerIs": "OriginOwner",
          "lifeByOwnerIsAlive": true,
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -4.8
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.8
              }
            }
          },
          "gadgetID": 49001011,
          "campID": 4001,
          "campTargetType": "AllExceptSelf"
        },
        {
          "$type": "MoleMole.Config.CreateGadget",
          "ownerIs": "OriginOwner",
          "lifeByOwnerIsAlive": true,
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 4.8
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -4.8
              }
            }
          },
          "gadgetID": 49001011,
          "campID": 4001,
          "campTargetType": "AllExceptSelf"
        },
        {
          "$type": "MoleMole.Config.CreateGadget",
          "ownerIs": "OriginOwner",
          "lifeByOwnerIsAlive": true,
          "born": {
            "$type": "MoleMole.Config.ConfigBornBySelf",
            "offset": {
              "x": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -4.8
              },
              "y": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.2
              },
              "z": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -4.8
              }
            }
          },
          "gadgetID": 49001011,
          "campID": 4001,
          "campTargetType": "AllExceptSelf"
        },
        {
          "$type": "MoleMole.Config.KillSelf"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WaterDamage_Bubble_Single",
      "modifiers": {
        "UNIQUE_Bubble_Loop": {
          "modifierName": "",
          "isUnique": true,
          "elementType": "Water",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Abyss_Water_Bubble_Missle_Float"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.KillSelf"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByHitImpulse",
                  "hitImpulse": 0.0
                }
              ],
              "abilityName": "GeneralSkill_WaterDamage_Bubble_SingleExplode"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Bubble_Loop"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WaterDamage_Bubble_SingleExplode",
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_WaterDamage_Bubble_Explode": {
          "type": "float",
          "dynamicValue": 3.0
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_Bubble_Loop"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_Gather_Bubble_Loop"
        },
        {
          "$type": "MoleMole.Config.FireEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_Abyss_Water_Bubble_Missle_Float_AS"
          },
          "born": {
            "$type": "MoleMole.Config.ConfigBornByAttachPoint",
            "attachPointName": "RootNode"
          }
        },
        {
          "$type": "MoleMole.Config.TriggerAttackEvent",
          "attackEvent": {
            "attackPattern": {
              "$type": "MoleMole.Config.ConfigAttackSphere",
              "triggerType": "TriggerNoRepeat",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "radius": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.5
              }
            },
            "attackInfo": {
              "attackTag": "",
              "attenuationTag": "",
              "attenuationGroup": "default",
              "attackProperty": {
                "damagePercentage": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "damagePercentageRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.0
                },
                "elementType": "Water",
                "elementDurability": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 50.0
                },
                "ignoreAttackerProperty": true,
                "strikeType": "Default",
                "enBreak": 100.0,
                "attackType": "Range",
                "damageExtra": {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_ElementLevelCo"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "GeneralSkill_WaterDamage_Bubble_Explode"
                    },
                    {
                      "isOperator": true,
                      "operation": "Mul"
                    }
                  ]
                }
              },
              "hitPattern": {
                "onHitEffectName": "default",
                "hitImpulseType": "LV2"
              }
            }
          },
          "targetType": "Enemy"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WaterDamage_Bubble_SingleSurround",
      "modifiers": {
        "Bubble_Surround_Reject": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Owner",
              "modifierName": "Bubble_Surround"
            }
          ]
        },
        "Bubble_AntiGravity": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.3
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AddGravityScale": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -7.5
            }
          }
        },
        "Bubble_Surround": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 5.0
          },
          "elementType": "Water",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AddGravityScale": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -2.0
            }
          },
          "state": "Struggle",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "Bubble_AntiGravity"
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Abyss_Water_Bubble"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_Abyss_Water_Bubble_AS"
              },
              "born": {
                "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                "attachPointName": "RootNode"
              }
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetType",
                  "isTarget": false
                },
                {
                  "$type": "MoleMole.Config.ByHitImpulse",
                  "hitImpulse": 0.0
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.RemoveModifier",
                  "modifierName": "Bubble_Surround"
                }
              ]
            }
          ],
          "onKill": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "Bubble_Surround"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.Predicated",
          "target": "Target",
          "targetPredicates": [
            {
              "$type": "MoleMole.Config.ByAny",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Gadget"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetWeight",
                  "weight": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 100.0
                  }
                }
              ]
            }
          ],
          "successActions": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "abilityName": "GeneralSkill_WaterDamage_Bubble_SingleExplode"
            }
          ],
          "failActions": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "abilityName": "GeneralSkill_WaterDamage_Bubble_SingleExplode"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Target",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Equip",
                    "MonsterEquip"
                  ]
                }
              ],
              "modifierName": "Bubble_Surround_Reject"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Target",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityTypes",
                  "entityTypes": [
                    "Avatar",
                    "Monster"
                  ]
                }
              ],
              "modifierName": "Bubble_Surround"
            }
          ]
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "MonsterAffix_Dvalin_S04_FirstSight",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_DVALIN_S04_FIRSTSIGHT_",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          }
        },
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": -1.0
          },
          "key": "_DVALIN_S04_FIRSTSIGHT_SHIELD",
          "useLimitRange": true,
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": -1.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": -1.0
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_LowImpulse_Water",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToAIAlertnessMixin",
          "alertness": [
            1,
            2
          ],
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Water"
        }
      ],
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_LowImpulse": {
          "type": "float",
          "dynamicValue": 4.0
        }
      },
      "modifiers": {
        "UNIQUE_GeneralSkill_LowImpulse_Water_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_FootCircle"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_LowImpulse_Tag",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_LowImpulse_Water": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_LowImpulse_Water_Alert"
            }
          ]
        },
        "GeneralSkill_LowImpulse_Water_Alert": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Water_Alert"
              }
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Water_Area"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Water_DamageWave"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "height": 1.2,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Water",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 100.0,
                    "attackType": "Range",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_ElementLevelCo"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_LowImpulse"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2"
                  }
                }
              },
              "targetType": "Enemy"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Water_Effect"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Water"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Water_Effect"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_LowImpulse_Water_Alert"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_LowImpulse_Ice",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToAIAlertnessMixin",
          "alertness": [
            1,
            2
          ],
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Ice"
        }
      ],
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_LowImpulse": {
          "type": "float",
          "dynamicValue": 4.0
        }
      },
      "modifiers": {
        "UNIQUE_GeneralSkill_LowImpulse_Ice_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_FootCircle"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_LowImpulse_Tag",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_LowImpulse_Ice": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_LowImpulse_Ice_Alert"
            }
          ]
        },
        "GeneralSkill_LowImpulse_Ice_Alert": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Ice_Alert"
              }
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Ice_Area"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Ice_DamageWave"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "height": 1.2,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Ice",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 100.0,
                    "attackType": "Range",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_ElementLevelCo"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_LowImpulse"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2"
                  }
                }
              },
              "targetType": "Enemy"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Ice_Effect"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Ice"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Ice_Effect"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_LowImpulse_Ice_Alert"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_WaterEnhance_SelfHeal",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_MONSTER_GeneralSkill_WaterEnhance_SelfHeal_Times",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 1.5
            }
          ],
          "modifierNameSteps": [
            "GeneralSkill_WaterEnhance_SelfHeal_Manager",
            "Blank"
          ]
        }
      ],
      "abilitySpecials": {
        "GeneralSkill_WaterEnhance_SelfHeal": {
          "type": "float",
          "dynamicValue": 0.5
        }
      },
      "modifiers": {
        "Blank": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "GeneralSkill_WaterEnhance_SelfHeal_Manager": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachModifierToHPPercentMixin",
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 0.15
                }
              ],
              "modifierNameSteps": [
                "Blank",
                "GeneralSkill_WaterEnhance_SelfHeal_Trigger"
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SelfHeal_FootCircle"
              }
            }
          ]
        },
        "GeneralSkill_WaterEnhance_SelfHeal_Trigger": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "GeneralSkill_WaterEnhance_SelfHeal_Latency"
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_GeneralSkill_WaterEnhance_SelfHeal_Times",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "GeneralSkill_WaterEnhance_SelfHeal_Latency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 6.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SelfHeal_Alert"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.HealHP",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityIsAlive"
                }
              ],
              "amountByTargetMaxHPRatio": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "GeneralSkill_WaterEnhance_SelfHeal"
              }
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByEntityIsAlive"
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SelfHeal_HealEffect"
              }
            }
          ]
        }
      },
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_WaterEnhance_SelfHeal_Manager"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_WaterEnhance_SelfHeal_Latency"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_RockDamage_DeathRattleCrystal",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.ServerCreateGadgetOnKillMixin",
          "gadgetIDList": [
            49001013
          ],
          "campID": 4001,
          "campTargetType": "Enemy"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget",
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_RockDamage_DeathRattleCrystal": {
          "type": "float",
          "dynamicValue": 8.0
        },
        "LifeTimeRatio": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ExtraTimes": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_ExtraTimes": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_RockDamage_DeathRattleCrystal_ExtraTimes",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onKill": [
            {
              "$type": "MoleMole.Config.CreateGadget",
              "born": {
                "$type": "MoleMole.Config.ConfigBornBySelf",
                "offset": {
                  "x": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "y": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.3
                  },
                  "z": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              },
              "gadgetID": 49001013,
              "campID": 4001,
              "campTargetType": "Enemy"
            }
          ]
        },
        "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget": {
          "modifierName": "",
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 30.0
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "LifeTimeRatio"
              },
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 30.0
              },
              {
                "isOperator": true,
                "operation": "Mul"
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SendEffectTrigger",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_GENERALSKILL_RockDamage_DeathRattleCrystal_ExtraTimes",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "parameter": "SingleExplode",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_DeathRattleCrystal"
              }
            },
            {
              "$type": "MoleMole.Config.SendEffectTrigger",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_GENERALSKILL_RockDamage_DeathRattleCrystal_ExtraTimes",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "parameter": "DoubleExplode",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_DeathRattleCrystal"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_Active"
            }
          ]
        },
        "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_Active": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.2
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SendEffectTrigger",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_GENERALSKILL_RockDamage_DeathRattleCrystal_ExtraTimes",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "parameter": "Disappear",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_DeathRattleCrystal"
              }
            },
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_AreaEffect"
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf",
                    "offset": {
                      "x": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "y": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "z": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      }
                    }
                  },
                  "height": 3.0,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 6.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Rock",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 100.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "attackType": "Range",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_ElementLevelCo"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_RockDamage_DeathRattleCrystal"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV1"
                  },
                  "forceCameraShake": true,
                  "cameraShake": {
                    "shakeType": "CustomVector",
                    "shakeRange": 0.04,
                    "shakeTime": 0.12,
                    "shakeDir": {
                      "y": 1.0
                    },
                    "extension": {}
                  }
                }
              },
              "targetType": "Enemy"
            },
            {
              "$type": "MoleMole.Config.KillSelf",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_GENERALSKILL_RockDamage_DeathRattleCrystal_ExtraTimes",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "duration": 1.0
            },
            {
              "$type": "MoleMole.Config.KillSelf",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_GENERALSKILL_RockDamage_DeathRattleCrystal_ExtraTimes",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "duration": 2.0
            }
          ]
        },
        "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_DeathRattleCrystal"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_AreaEffect_Latency"
            }
          ]
        },
        "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_AreaEffect_Latency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 2.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_AreaEffect"
            }
          ]
        },
        "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_AreaEffect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_DeathRattleCrystal_Area"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        },
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_GeneralSkill_RockDamage_DeathRattleCrystal_LifeTimeRatio",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "value": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "key": "_MONSTER_GeneralSkill_RockDamage_DeathRattleCrystal_LifeTimeRatio",
          "maxValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          },
          "minValue": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.0
          }
        },
        {
          "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
          "globalValueKey": "_MONSTER_GeneralSkill_RockDamage_DeathRattleCrystal_LifeTimeRatio",
          "overrideMapKey": "LifeTimeRatio"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByTargetGlobalValue",
              "target": "Owner",
              "key": "_MONSTER_GeneralSkill_RockDamage_DeathRattleCrystal_ExtraTimes",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              }
            }
          ],
          "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_ExtraTimes"
        },
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget_Effect"
        }
      ],
      "onFieldEnter": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_RockDamage_DeathRattleCrystal_DamageGadget"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_Sovereign_Master",
      "modifiers": {
        "GeneralSkill_Sovereign_Master_Latency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onRemoved": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_Sovereign_Master"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_GENERALSKILL_LowImpulse_Tag",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "modifierName": "GeneralSkill_Sovereign_MasterEff"
            }
          ]
        },
        "GeneralSkill_Sovereign_Master": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_GeneralSkill_Sovereign_Master",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "GeneralSkill_Sovereign_MasterEff": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_Sovereign_Master_FootCircle"
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_Sovereign_Master_Latency"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_Sovereign_Master"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_Sovereign_MasterEff"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_Sovereign_Slave",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToAIAlertnessMixin",
          "alertness": [
            0
          ],
          "modifierName": "GeneralSkill_Sovereign_Slave_Remover"
        },
        {
          "$type": "MoleMole.Config.AttachToAIAlertnessMixin",
          "alertness": [
            1,
            2
          ],
          "modifierName": "GeneralSkill_Sovereign_FindMaster_Reset"
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_HAS_Sovereign_Master",
          "defaultGlobalValueOnCreate": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "valueSteps": [
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": -0.5
            },
            {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.5
            }
          ],
          "modifierNameSteps": [
            "GeneralSkill_Sovereign_FindMaster"
          ]
        }
      ],
      "modifiers": {
        "GeneralSkill_Sovereign_Slave_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_Sovereign_Slave_FootCircle"
              }
            }
          ]
        },
        "GeneralSkill_Sovereign_Slave_Remover": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "GeneralSkill_Sovereign_Slave"
            }
          ]
        },
        "GeneralSkill_Sovereign_FindMaster_Reset": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_HAS_Sovereign_Master",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "GeneralSkill_Sovereign_FindMaster": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.4
          },
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_TEMP_FindMaster",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "sortType": "Nearest",
                "shapeName": "CircleR60",
                "campTargetType": "Alliance",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_GeneralSkill_Sovereign_Master",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "GeneralSkill_Sovereign_Slave"
                },
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "_TEMP_FindMaster",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_TEMP_FindMaster",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_HAS_Sovereign_Master",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "GeneralSkill_Sovereign_Slave": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 12.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "sortType": "Nearest",
                "shapeName": "CircleR60",
                "campTargetType": "Alliance",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_GeneralSkill_Sovereign_Master",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_GeneralSkill_Sovereign_AtkUp",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "GeneralSkill_Sovereign_AtkUp"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "sortType": "Nearest",
                "shapeName": "CircleR60",
                "campTargetType": "Alliance",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_GeneralSkill_Sovereign_Master",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "modifierName": "GeneralSkill_Sovereign_DefenceUp"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "HealLatency"
            }
          ]
        },
        "HealLatency": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_Sovereign_Slave_Alert"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "sortType": "Nearest",
                "shapeName": "CircleR60",
                "campTargetType": "Alliance",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_GeneralSkill_Sovereign_Master",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "modifierName": "UNIQUE_GeneralSkill_Sovereign_Master_Heal_Effect"
                },
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "target": "Target",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_Monster_GeneralSkill_Sovereign_Slave_LifeLine"
                  },
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornByAttachPoint",
                    "attachPointName": "RootNode",
                    "attachPointTargetType": "Caster"
                  }
                },
                {
                  "$type": "MoleMole.Config.HealHP",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "target": "Self",
                      "key": "_MONSTER_GeneralSkill_Sovereign_ExtraHeal",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "compareType": "NoneOrEqual"
                    }
                  ],
                  "amountByTargetMaxHPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.05
                  }
                },
                {
                  "$type": "MoleMole.Config.HealHP",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetGlobalValue",
                      "key": "_MONSTER_GeneralSkill_Sovereign_ExtraHeal",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 1.0
                      }
                    }
                  ],
                  "amountByTargetMaxHPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.1
                  }
                }
              ]
            }
          ]
        },
        "UNIQUE_GeneralSkill_Sovereign_Master_Heal_Effect": {
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.5
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.6
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_Sovereign_Master_Heal"
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_Sovereign_Master_Heal"
              }
            }
          ]
        },
        "GeneralSkill_Sovereign_DefenceUp": {
          "stacking": "Multiple",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_PhysicalSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            },
            "Actor_FireSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            },
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            },
            "Actor_IceSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            },
            "Actor_WaterSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            },
            "Actor_GrassSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            },
            "Actor_WindSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            },
            "Actor_RockSubHurtDelta": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            }
          },
          "state": "DefenseUp"
        },
        "GeneralSkill_Sovereign_AtkUp": {
          "stacking": "Multiple",
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_AttackRatio": {
              "isFormula": false,
              "isDynamic": false,
              "fixedValue": 0.1
            }
          },
          "state": "AttackUp"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "GeneralSkill_Sovereign_Slave_Effect"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_Sovereign_Slave"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_Sovereign_Slave_Effect"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_Sovereign_EffGadget",
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachEffect",
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_GeneralSkill_Sovereign_Slave_LifeLine_Bullet"
          }
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_LowImpulse_Electric",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachToAIAlertnessMixin",
          "alertness": [
            1,
            2
          ],
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Electric"
        }
      ],
      "abilitySpecials": {
        "GeneralSkill_ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "GeneralSkill_LowImpulse": {
          "type": "float",
          "dynamicValue": 4.0
        }
      },
      "modifiers": {
        "UNIQUE_GeneralSkill_LowImpulse_Electric_Effect": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_FootCircle"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_LowImpulse_Tag",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_LowImpulse_Electric": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 15.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_FootCircle"
              }
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_GENERALSKILL_LowImpulse_Tag",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_LowImpulse_Electric_Alert"
            }
          ]
        },
        "GeneralSkill_LowImpulse_Electric_Alert": {
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 4.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Electric_Alert"
              }
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Electric_Area"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_LowImpulse_Electric_DamageWave"
              }
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetHPRatio",
                  "target": "Self",
                  "HPRatio": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "attackEvent": {
                "attackPattern": {
                  "$type": "MoleMole.Config.ConfigAttackCircle",
                  "triggerType": "TriggerNoRepeat",
                  "born": {
                    "$type": "MoleMole.Config.ConfigBornBySelf"
                  },
                  "height": 1.2,
                  "radius": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 15.0
                  }
                },
                "attackInfo": {
                  "attackTag": "",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "damagePercentage": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "damagePercentageRatio": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 0.0
                    },
                    "elementType": "Electric",
                    "elementDurability": {
                      "isFormula": false,
                      "isDynamic": false,
                      "fixedValue": 50.0
                    },
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 100.0,
                    "attackType": "Range",
                    "damageExtra": {
                      "isFormula": true,
                      "formula": [
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_ElementLevelCo"
                        },
                        {
                          "isOperator": false,
                          "isDynamic": true,
                          "dynamicKey": "GeneralSkill_LowImpulse"
                        },
                        {
                          "isOperator": true,
                          "operation": "Mul"
                        }
                      ]
                    }
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV2"
                  }
                }
              },
              "targetType": "Enemy"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Electric_Effect"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "GeneralSkill_ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Electric"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_LowImpulse_Electric_Effect"
        },
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "modifierName": "GeneralSkill_LowImpulse_Electric_Alert"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_ElecDamage_ThunderArea",
      "abilitySpecials": {
        "ElementLevelCo": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "ThunderArea_Ratio": {
          "type": "float",
          "dynamicValue": 4.0
        }
      },
      "modifiers": {
        "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Host": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.25
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTESR_GeneralSkill_ElecDamage_ThunderArea_OwnerTag",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_ThunderArea_FootCircle"
              }
            },
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_ElecDamage_ThunderArea_InnerCircle"
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_MONSTESR_GeneralSkill_ElecDamage_ThunderArea_OwnerTag",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllTeams",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 8.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "logic": "Lesser",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 20.0
                  }
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_DamageTrigger"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAny",
                  "predicates": [
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "LesserOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 8.0
                      }
                    },
                    {
                      "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                      "logic": "GreaterOrEqual",
                      "value": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 20.0
                      }
                    }
                  ]
                }
              ],
              "modifierName": "GeneralSkill_ElecDamage_ThunderArea_TeamRemover"
            }
          ]
        },
        "GeneralSkill_ElecDamage_ThunderArea_TeamRemover": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 0.1
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Team",
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Team"
            }
          ]
        },
        "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Team": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 1.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_SceneObj_ThunderStorm_Gathering"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_DamageMask"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasEffect",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_DamageMask"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasEffect",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasOwner",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR20",
                "centerBasedOn": "CurLocalAvatar",
                "campTargetType": "Alliance",
                "campBasedOn": "Caster",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTESR_GeneralSkill_ElecDamage_ThunderArea_OwnerTag",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasOwner",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasOwner",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Team"
            }
          ]
        },
        "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_DamageMask": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 2.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_DamageMask",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_DamageMask",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_DamageTrigger": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 2.0
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_MONSTESR_GeneralSkill_ElecDamage_ThunderArea_HasEffect",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "target": "Applier",
                  "logic": "Lesser",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 20.0
                  }
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Team"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": -1.0
              },
              "key": "_MONSTESR_GeneralSkill_ElecDamage_ThunderArea_HasOwner",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "MoleMole.Config.SelectTargetsByShape",
                "shapeName": "CircleR20",
                "centerBasedOn": "CurLocalAvatar",
                "campTargetType": "Alliance",
                "campBasedOn": "Caster",
                "sizeRatio": {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": 1.0
                }
              },
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_DamageMask",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasEffect",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                }
              ],
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTESR_GeneralSkill_ElecDamage_ThunderArea_OwnerTag",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  }
                },
                {
                  "$type": "MoleMole.Config.ByTargetPositionToSelfPosition",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 8.0
                  }
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.DamageByAttackValue",
                  "target": "CurLocalAvatar",
                  "attackInfo": {
                    "attackTag": "",
                    "attenuationTag": "",
                    "attenuationGroup": "default",
                    "attackProperty": {
                      "damagePercentageRatio": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 0.0
                      },
                      "elementType": "Electric",
                      "elementDurability": {
                        "isFormula": false,
                        "isDynamic": false,
                        "fixedValue": 25.0
                      },
                      "ignoreAttackerProperty": true,
                      "enBreak": 0.0,
                      "damageExtra": {
                        "isFormula": true,
                        "formula": [
                          {
                            "isOperator": false,
                            "isDynamic": true,
                            "dynamicKey": "ThunderArea_Ratio"
                          },
                          {
                            "isOperator": false,
                            "isDynamic": true,
                            "dynamicKey": "ElementLevelCo"
                          },
                          {
                            "isOperator": true,
                            "operation": "Mul"
                          }
                        ]
                      }
                    },
                    "hitPattern": {
                      "onHitEffectName": "",
                      "hitImpulseType": "LV0",
                      "retreatType": "ByHitDirection"
                    }
                  }
                },
                {
                  "$type": "MoleMole.Config.FireEffect",
                  "target": "CurLocalAvatar",
                  "effectPattern": {
                    "isDynamic": false,
                    "fixedValue": "Eff_SceneObj_ThunderStorm_Blast"
                  }
                },
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasOwner",
                  "useLimitRange": true,
                  "maxValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 1.0
                  },
                  "minValue": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ]
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasOwner",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_DamageMask",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "target": "Self",
                  "key": "_MONSTER_GeneralSkill_ElecDamage_ThunderArea_HasEffect",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Team"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "predicates": [
            {
              "$type": "MoleMole.Config.ByEntityTypes",
              "entityTypes": [
                "Monster"
              ]
            }
          ],
          "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Host"
        },
        {
          "$type": "MoleMole.Config.SetSystemValueToOverrideMap",
          "key": "ElementLevelCo",
          "type": "ElementLevelCo"
        }
      ],
      "onKill": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_GeneralSkill_ElecDamage_ThunderArea_Host"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_SubHurtDelta_Periodicity",
      "abilitySpecials": {
        "SubHurtDelta_Initialize": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "SubHurtDelta_SingleDown": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "SubHurtDelta_FloorCount": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "Periodicity_Recover": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "GeneralSkill_SubHurtDelta_Periodicity_Controller": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "thinkInterval": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "Periodicity_Recover"
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "doOffStage": true,
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SubHurtDelta_Recover"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "doOffStage": true,
              "modifierName": "GeneralSkill_SubHurtDelta_Periodicity"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "modifierName": "GeneralSkill_SubHurtDelta_Periodicity"
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SubHurtDelta_Recover"
              }
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "GeneralSkill_SubHurtDelta_Periodicity"
            }
          ]
        },
        "GeneralSkill_SubHurtDelta_Periodicity": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_MONSTER_GeneralSkill_SubHurtDelta_SingleDown_Count",
              "defaultGlobalValueOnCreate": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "valueSteps": [
                {
                  "isFormula": false,
                  "isDynamic": false,
                  "fixedValue": -0.5
                },
                {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "SubHurtDelta_FloorCount"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": false,
                      "fixedValue": 0.5
                    },
                    {
                      "isOperator": true,
                      "operation": "Sub"
                    }
                  ]
                },
                {
                  "isFormula": true,
                  "formula": [
                    {
                      "isOperator": false,
                      "isDynamic": true,
                      "dynamicKey": "SubHurtDelta_FloorCount"
                    },
                    {
                      "isOperator": false,
                      "isDynamic": false,
                      "fixedValue": 0.5
                    },
                    {
                      "isOperator": true,
                      "operation": "Add"
                    }
                  ]
                }
              ],
              "modifierNameSteps": [
                "GeneralSkill_SubHurtDelta_Effect",
                "GeneralSkill_SubHurtDelta_Empty"
              ]
            }
          ],
          "properties": {
            "Actor_PhysicalSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            },
            "Actor_FireSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            },
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            },
            "Actor_WaterSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            },
            "Actor_GrassSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            },
            "Actor_WindSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            },
            "Actor_IceSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            },
            "Actor_RockSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_Initialize"
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "doOffStage": true,
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_MONSTER_GeneralSkill_SubHurtDelta_SingleDown_Count",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "MPLevel",
              "doOffStage": true,
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_MONSTER_GeneralSkill_SubHurtDelta_ShowReminder",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ShowReminder",
                  "doOffStage": true,
                  "id": 337280101
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "MPLevel",
                  "doOffStage": true,
                  "modifierName": "GeneralSkill_SubHurtDelta_ShowReminder"
                }
              ]
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "predicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "NormalAttack_01",
                    "NormalAttack_02",
                    "NormalAttack_03",
                    "NormalAttack_04",
                    "NormalAttack_05",
                    "NormalAttack_06"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByHitDamage",
                  "damage": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  }
                }
              ],
              "modifierName": "GeneralSkill_SubHurtDelta_SingleDown"
            }
          ]
        },
        "GeneralSkill_SubHurtDelta_SingleDown": {
          "stacking": "Multiple",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_FloorCount"
            }
          },
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_PhysicalSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            },
            "Actor_FireSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            },
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            },
            "Actor_WaterSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            },
            "Actor_GrassSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            },
            "Actor_WindSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            },
            "Actor_IceSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            },
            "Actor_RockSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "SubHurtDelta_SingleDown"
            }
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_GeneralSkill_SubHurtDelta_SingleDown_Count",
              "useLimitRange": true,
              "maxValue": {
                "isFormula": false,
                "isDynamic": true,
                "dynamicKey": "SubHurtDelta_FloorCount"
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "GeneralSkill_SubHurtDelta_Empty": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          }
        },
        "GeneralSkill_SubHurtDelta_Effect": {
          "modifierName": "",
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "doOffStage": true,
              "effectPattern": {
                "isDynamic": false,
                "fixedValue": "Eff_Monster_GeneralSkill_SubHurtDelta"
              }
            }
          ]
        },
        "GeneralSkill_SubHurtDelta_ShowReminder": {
          "modifierName": "",
          "duration": {
            "isFormula": true,
            "formula": [
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              {
                "isOperator": false,
                "isDynamic": false,
                "fixedValue": 10.0
              },
              {
                "isOperator": true,
                "operation": "Sub"
              },
              {
                "isOperator": false,
                "isDynamic": true,
                "dynamicKey": "Periodicity_Recover"
              },
              {
                "isOperator": true,
                "operation": "Add"
              }
            ]
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_MONSTER_GeneralSkill_SubHurtDelta_ShowReminder",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_MONSTER_GeneralSkill_SubHurtDelta_ShowReminder",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "doOffStage": true,
          "modifierName": "GeneralSkill_SubHurtDelta_Periodicity_Controller"
        },
        {
          "$type": "MoleMole.Config.AttachEffect",
          "doOffStage": true,
          "effectPattern": {
            "isDynamic": false,
            "fixedValue": "Eff_Monster_GeneralSkill_SubHurtDelta_FootCircle"
          }
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "GeneralSkill_ReduceMonster_ElecAddHurtDelta",
      "abilitySpecials": {
        "ElecSubHurtDelta": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "StackingCD": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "MaxStackingNum": {
          "type": "float",
          "dynamicValue": 0.0
        },
        "StackDuring": {
          "type": "float",
          "dynamicValue": 0.0
        }
      },
      "modifiers": {
        "UNIQUE_GeneralSkill_ReduceMonster_ElecAddHurtDelta_Handler": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.Predicated",
              "targetPredicates": [
                {
                  "$type": "MoleMole.Config.ByAttackTags",
                  "attackTags": [
                    "ShockDamage"
                  ]
                },
                {
                  "$type": "MoleMole.Config.ByTargetGlobalValue",
                  "key": "_REDUCEMONSTER_ELECSUBHURT_IN_CD",
                  "value": {
                    "isFormula": false,
                    "isDynamic": false,
                    "fixedValue": 0.0
                  },
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "UNIQUE_GeneralSkill_ReduceMonster_ElecAddHurtDelta"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "GeneralSkill_ReduceMonster_CDTimer"
                }
              ]
            }
          ]
        },
        "GeneralSkill_ReduceMonster_CDTimer": {
          "stacking": "Unique",
          "modifierName": "",
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "StackingCD"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 1.0
              },
              "key": "_REDUCEMONSTER_ELECSUBHURT_IN_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "value": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "key": "_REDUCEMONSTER_ELECSUBHURT_IN_CD",
              "maxValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              },
              "minValue": {
                "isFormula": false,
                "isDynamic": false,
                "fixedValue": 0.0
              }
            }
          ]
        },
        "UNIQUE_GeneralSkill_ReduceMonster_ElecAddHurtDelta": {
          "stacking": "MultipleRefreshNoRemove",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "MaxStackingNum"
            },
            "enableMixedUnique": true
          },
          "modifierName": "",
          "isUnique": true,
          "duration": {
            "isFormula": false,
            "isDynamic": true,
            "dynamicKey": "StackDuring"
          },
          "elementDurability": {
            "isFormula": false,
            "isDynamic": false,
            "fixedValue": 100.0
          },
          "properties": {
            "Actor_ElecSubHurtDelta": {
              "isFormula": false,
              "isDynamic": true,
              "dynamicKey": "ElecSubHurtDelta"
            }
          },
          "state": "DefenseDown"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.ApplyModifier",
          "modifierName": "UNIQUE_GeneralSkill_ReduceMonster_ElecAddHurtDelta_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  }
]